$ph-animation-duration: 1.2s !default;
$gx-xsmall-device-breakpoint: 768px;

@import "../../node_modules/placeholder-loading/src/scss/placeholder-loading";

:root {
    --gx-table-row-autogrow-collapse: minmax(min-content, max-content);
    --gx-table-row-autogrow: min-content;
    --gx-table-row-collapse: minmax(min-content, min-content);
    --gx-table-components-column: 1fr;
    --gx-table-components-row: auto;
    --gx-scrollbar-background-color: #f5f5f5;
    --gx-scrollbar-thumb-color: #555;

    /* - - - - gx-layout and gx-navbar config - - - - */
    --gx-navbar-main-height: 60px;
    --gx-navbar-sub-height: 48px;
    --gx-navbar-base-z-index: 100;
}

@mixin gx-message-color(
    $message-type: null,
    $color: null,
    $background-color: null,
    $border-color: null
) {
    & .alert-#{$message-type} {
        color: $color;
        background-color: $background-color;
        border-color: $border-color;
    }
}
@mixin gx-application($target-background-color: null) {

    .main-layout {
        & > .vertical {
            background-color: $target-background-color;
        }
    }

    gx-action-sheet {
        --gx-action-sheet-color: var(--action-tint-color);
    }

    gx-message {
        --gx-message-color: var(--action-tint-color);
        --gx-message-background-color: var(--primary-color-dark, #d1ecf1);

        @include gx-message-color(
            "info",
            var(--gx-message-color),
            var(--gx-message-background-color),
            var(--gx-message-background-color)
        );
        @include gx-message-color(
            "warning",
            var(--gx-message-color),
            var(--gx-message-background-color),
            var(--gx-message-background-color)
        );
        @include gx-message-color(
            "error",
            var(--gx-message-color),
            var(--gx-message-background-color),
            var(--gx-message-background-color)
        );
    }

    gx-modal {
        --gx-modal-header-color: var(--action-tint-color);
        --gx-modal-header-background-color: var(--primary-color);
        --gx-modal-primary-action-color: var(--action-tint-color);
        --gx-modal-secondary-action-color: var(--action-tint-color);

        & .modal-header {
            background-color: var(--gx-modal-header-background-color);
            color: var(--gx-modal-header-color);

            & .close {
                color: var(--gx-modal-header-color);
            }
        }

        & .modal-footer .btn-primary {
            color: var(--gx-modal-primary-action-color);
        }

        & .modal-footer .btn-secondary {
            color: var(--gx-modal-secondary-action-color);
        }

        & .modal-footer .btn {
            color: var(--gx-modal-secondary-action-color);
        }
    }
}

// - - - - - - - - - - - - - - Layout customization - - - - - - - - - - - - - -

// Used to correctly place the gx-navbar and the gx-layout components.
html > body > my-app {
    display: flex !important;
    flex-direction: column;

    /*  This ensures that the application will have all the available height when
      the address bar is visible and when it is not
  */
    min-height: var(--vh, 100vh);
}

.main-content {
    display: flex;
    flex: 1;

    & > gx-card {
        display: flex;
        flex: 1;
    }
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// - - - - - - - - - - - - - Scrollbars customization - - - - - - - - - - - - -
body {
    scrollbar-width: thin;
    scrollbar-color: var(--gx-scrollbar-thumb-color)
        var(--gx-scrollbar-background-color);
}

::-webkit-scrollbar {
    width: 11px;
}

::-webkit-scrollbar-track {
    background: var(--gx-scrollbar-background-color);
}

::-webkit-scrollbar-thumb {
    background-color: var(--gx-scrollbar-thumb-color);
    border-radius: 6px;
    border: 3px solid var(--gx-scrollbar-background-color);
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// - - - - - - - - - - - - - - - Virtual-scroller - - - - - - - - - - - - - - -
virtual-scroller {
    flex: 1;

    .scrollable-content {
        height: auto !important;
    }
}

/* Temporal WA for Virtual Scroller Scroll Jumping when First Item has margin bottom*/
virtual-scroller > .scrollable-content > .gx-grid-row {
    margin-bottom: 0px;
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// - - - - - - - - - - -  Style applied to canvas cells  - - - - - - - - - - -
gx-canvas-cell {
    pointer-events: none;
}

.flex-cell {
    display: flex;
    overflow: hidden;

    & > gx-textblock {
        width: 100%;
        height: 100%;
    }

    & > gx-button {
        flex: 1;
    }
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

gx-table,
gx-form-field,
gx-textblock,
gx-grid-horizontal,
gx-grid-smart-css,
gx-grid-fs,
gx-map,
gx-tab,
gx-group {
    pointer-events: auto;
}

gx-canvas,
gx-table {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

// Style applied to the highlightable controls
[data-has-action] {
    cursor: pointer;
}

gx-textblock .content:empty {
    min-height: 1em;
}

gx-card {
    .card {
        border: 0;
    }
}

.gx-sections-container {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.gx-loading-text {
    text-align: center;
}

// Customization of the control's option
gx-checkbox,
gx-radio-option {
  --option-checked-color: var(--accent-color);
  --option-border-color: var(--control-normal-color);
  --option-highlight-color: var(--control-highlight-color);
}

gx-map {
    width: 100%;
    height: 100%;
}

gx-map .popup-data-container > div {
    position: static !important;
}

// Start - Moved from Theme.stg
.section > main > gx-card > div > div > gx-table {
    height: auto;
}

.section > main > gx-card > div > .card-header {
    border-spacing: 10px;
    background-color: rgba(0, 0, 0, 0.02);
}

.section {
    margin-bottom: 30px;
}

/* Horizontal grid items must fill its given area */
.gx-horizontal-grid-item {
    width: 100%;
    height: 100%;
    & > div {
        width: 100%;
        height: 100%;
    }
}

/* Fix horizontal grid elements sizing (AGS version) 
If this rule is not specified, grid elements in horizontal 
grids won't grow, and would depend on container size. This 
won't work if container size depends on contained items size*/
.gx-horizontal-grid-item .image-viewer {
    min-width: 100%;
    min-height: 100%;
}
// End - Moved from Theme.stg
