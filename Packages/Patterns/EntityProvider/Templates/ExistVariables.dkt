<%@ Template Language="C#" TargetLanguage="GX" Description="Export Procedure Variables" %>
<%@ Include Name="Constants.cs" %>
<%@ Assembly Name="Concepto.Patterns.EntityProvider" %>
<%@ Import Namespace="Concepto.Patterns.EntityProvider" %>
<%@ Import Namespace="Concepto.Patterns.EntityProvider.Helpers" %>
<%@ Property Name="Object" Type="Artech.Architecture.Common.Objects.KBObject" %>
<%@ Property Name="Part" Type="Artech.Architecture.Common.Objects.KBObjectPart" %>
<%@ Property Name="Instance" Type="Artech.Packages.Patterns.Objects.PatternInstance" %>
<%@ Property Name="Element" Type="Artech.Packages.Patterns.Objects.PatternInstanceElement" %>
<%@ SubTemplate Name="SubStandardVariables" File="SubStandardVariables.dkt" MergeProperties="True"%>

<Part type="<%= PartType.Variables %>">
<%
	EntityProviderInstance epInstance = EntityProviderInstance.Load(Instance);
	VariablesWrapper variables = new VariablesWrapper();
	IGridObject gridObject = epInstance.GetElement<IGridObject>(Element);
%>

<%@ CallSubTemplate SubStandardVariables Settings='epInstance.Settings' %>

	
	<%= Variables.Basic("Exist",null,eDBType.Boolean) %>
<%
	// Variables for parameters.
	foreach (ParameterElement parameter in gridObject.Parameters)
	{
%>
	<%= parameter.DefineVariable(variables) %>
<%
	}

	// Custom variables.
	foreach (VariableElement var in gridObject.Attributes.Variables)
	{
%>
	<%= variables.BasedOnDomain(var.Name, var.Domain) %>
<%
	}

	// Variable for order choice.
	if (gridObject.Orders.NeedsChoice)
	{
%>
	<%= variables.Basic(OrdersElement.OrderVariable, null, eDBType.NUMERIC, 4, 0, false) %>
	
<%	
	}

	// Variables for filter.
	if (gridObject.Filter != null)
	{
%>
	<%= gridObject.Filter.DefineVariables(variables) %>
<%
	}
%>
</Part>
