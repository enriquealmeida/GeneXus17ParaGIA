delimiters "$", "$"

init(botGenerator)::=<<
//Generated by GeneXus Chatbot Generator [Start]
&Value = GeneXusChannels.Webhooks.Whatsapp.GetToken(!"$botGenerator.BaseSerialName$")
&Query = &HttpRequest.ToString()
GeneXusChannels.Webhooks.Whatsapp.WhatsappWebhook(WhatsappPartners.$botGenerator.InternalWhatsappPartner$, &Query, &Message, &ChannelConfiguration)

&ChannelConfigurationProperty = new()
&ChannelConfigurationProperty.Key = WhatsappProperties.Token
&ChannelConfigurationProperty.Value = &Value
&ChannelConfiguration.Properties.Add(&ChannelConfigurationProperty)

for &ChannelConfigurationProperty in &ChannelConfiguration.Properties
	if &ChannelConfigurationProperty.Key = WhatsappProperties.To
		&To = &ChannelConfigurationProperty.Value
	endif
endfor

if &Message.Payload.Type = GeneXusChannels.PayloadTypes.Media
	&MediaMessage.FromJson(&Message.Payload.Body)
	if &MediaMessage.Type = GeneXusChannels.MediaTypes.Image
		&Image.FromURL(&MediaMessage.URL)
	endif
endif

CommonChatbots.SendMessageFromChannel(&Message.Text, &Image, &To, !"$botGenerator.BaseSerialName$", &AnalyzeResponse)

for &GXResponse in &AnalyzeResponse.GXResponse
	&Message = new()
	&Message.Text = &GXResponse.GXOutput
	if &GXResponse.GXResponseImage.ImageURI <> ""
		&MediaMessage = new()
		&MediaMessage.Type = MediaTypes.Image
		&MediaMessage.URL = &GXResponse.GXResponseImage.ImageURI
		&Message.Payload.Type = PayloadTypes.Media
		&Message.Payload.Body = &MediaMessage.ToJson()
	endif
	GeneXusChannels.Message.SendMessage(&ChannelConfiguration, &Message, &Messages)
endfor
//Generated by GeneXus Chatbot Generator [End]
>>