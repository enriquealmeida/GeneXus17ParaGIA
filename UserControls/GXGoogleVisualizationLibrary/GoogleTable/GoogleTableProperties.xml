<?xml version="1.0"?>
<Content xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Object id="GoogleTable">
    <Group>
      <Name>General</Name>
      <Type>Main</Type>
      <Children>
        <Prop>
          <Id>Data</Id>
          <Name>Data</Name>
          <Type>Custom</Type>
          <CustomType>Artech.Genexus.Common.CustomTypes.ControlAttVarReference, Artech.Genexus.Common</CustomType>
          <Metadata>
            <Value name="FlagSetValueMethod">SetData</Value>
            <Value name="FlagGetValueMethod">GetData</Value>
          </Metadata>
		  <Description>(Required) Collection with the data to be shown. If it's a collection of an SDT, by default, the column names are inferred from the name of the fields. It also supports collections of simple types,  like Character or Integer.</Description>
        </Prop>
        <Prop>
          <Id>Selection</Id>
          <Name>Selection</Name>
          <Type>Custom</Type>
          <CustomType>Artech.Genexus.Common.CustomTypes.ControlAttVarReference, Artech.Genexus.Common</CustomType>
          <Metadata>
            <Value name="FlagSetValueMethod">SetSelection</Value>
            <Value name="FlagGetValueMethod">GetSelection</Value>
          </Metadata>
		  <Description>(Optional) Collection with the selected rows. The type of the variable assigned to this property must be the equal to the type of the variable assigned to Data property.</Description>
        </Prop>
        <Prop>
          <Id>Columns</Id>
          <Name>Columns</Name>
          <Type>Custom</Type>
          <CustomType>Artech.Genexus.Common.CustomTypes.ControlAttVarReference, Artech.Genexus.Common</CustomType>
          <Metadata>
			<Value name="FlagDataTypeFilter">GoogleTableColumn</Value>
			<Value name="FlagHideVariables">False</Value>
			<Value name="FlagHideAttributes">true</Value>
            <Value name="FlagSetValueMethod">SetColumns</Value>
            <Value name="FlagGetValueMethod">GetColumns</Value>
          </Metadata>
		  <Description>(Optional) Collection of GoogleTableColumn with extended information about the grid columns:
#Column: Name of the column to apply the properties. If the data assigned to the Data property is based on a SDT, the name of the SDT field must be used.
#Description: (optional) Description of the column. If specified it is used as the header name.
#Formatter: (optional) Formatter to apply to the column.
    #Type: Type of formatter to apply to the column.
    #Options: Name-value pairs parameters for the formatter.</Description>
        </Prop>
		<Group>
		<Name>Appearance</Name>
		<Children>
	        <Prop>
	          <Id>Width</Id>
	          <Name>Width</Name>
	          <Type>Text</Type>
	          <Default />
	          <Metadata />
	          <Description>(Optional) Width property of generated table (e.g. '100px', '80em', '60'). When no units are specified the number is assumed to be pixels. If not specified, the browser will set the width automatically.</Description>
	        </Prop>
	        <Prop>
	          <Id>Height</Id>
	          <Name>Height</Name>
	          <Type>Text</Type>
	          <Default />
	          <Metadata />
	          <Description>(Optional) Height property of generated table (e.g. '100px', '80em', '60'). When no units are specified the number is assumed to be pixels. If not specified, the browser will set the height automatically. A scroll bar would be added if necessary.</Description>
	        </Prop>
	        <Prop>
	          <Id>BackColorStyle</Id>
	          <Name>BackColorStyle</Name>
	          <Type>Combo</Type>
	          <Default>header</Default>
	          <Metadata />
	          <Values>
	            <Value id="header" desc="Header" />
	            <Value id="report" desc="Report" />
	          </Values>
	          <Description>If 'Report' is selected, alternating color style will be assigned to odd and even rows. If 'Header' is selected, a plain color style will be used.</Description>
	        </Prop>
		</Children>
		</Group>
		<Group>
		<Name>Behavior</Name>
		<Children>
	        <Prop>
	          <Id>Page</Id>
	          <Name>Page</Name>
	          <Type>Combo</Type>
	          <Default>disable</Default>
	          <Metadata />
	          <Values>
	            <Value id="enable" desc="Enable" />
	            <Value id="event" desc="Event" />
	            <Value id="disable" desc="Disable" />
	          </Values>
	          <Description>If 'Enable' is used, the table will include page-forward and page-back buttons. Clicking on these buttons will perform the paging operation and change the displayed page. In this case, the 'Data' property must contain the whole set of records to be shown.
If 'Event' is used, the table will include page-forward and page-back buttons. Clicking on these buttons will trigger a 'PageChanged'. In this case, the 'Data' property must contain just the records to be shown in the current page.
If 'disable' is used (the default), paging will not be used. </Description>
	        </Prop>
	        <Prop>
	          <Id>PageSize</Id>
	          <Name>PageSize</Name>
	          <Type>Integer</Type>
	          <Default>10</Default>
	          <Metadata />
	          <Description>The number of rows in each page, when paging is enabled.</Description>
	        </Prop>
	        <Prop>
	          <Id>ShowRowNumber</Id>
	          <Name>ShowRowNumber</Name>
	          <Default>false</Default>
	          <Type>Boolean</Type>
	          <Metadata />
	          <Description>If set to true, shows the row number as the first column of the table.</Description>
	        </Prop>
	        <Prop>
	          <Id>Sort</Id>
	          <Name>Sort</Name>
	          <Type>Combo</Type>
	          <Default>enable</Default>
	          <Metadata />
	          <Values>
	            <Value id="enable" desc="Enable" />
	            <Value id="event" desc="Event" />
	            <Value id="disable" desc="Disable" />
	          </Values>
	          <Description>If 'Enable' is used (the default), users can click on column headers to sort by the clicked column. When users click on the column header, the rows will be automatically sorted.
If 'Event' is used, users can click on column headers to sort by the clicked column. When users click on the column header, a 'SortChanged' event will be triggered. In this case, the 'Data' property must contain the sorted data set.
If 'Disable' is used, clicking a column header has no effect.</Description>
	        </Prop>
	        <Prop>
	          <Id>SortAscending</Id>
	          <Name>SortAscending</Name>
	          <Default>true</Default>
	          <Type>Boolean</Type>
	          <Metadata />
	          <Description>The order in which the initial sort column is sorted. True for ascending, false for descending. Ignored if SortColumn is not specified.</Description>
	        </Prop>
	        <Prop>
	          <Id>SortColumn</Id>
	          <Name>SortColumn</Name>
	          <Type>Integer</Type>
	          <Metadata />
	          <Description>An index (zero-based) of a column in the data table, by which the table is initially sorted. The column will be marked with a small arrow indicating the sort order. (For example, for sorting the first row, 0 must be specidied)</Description>
	        </Prop>
		</Children>
		</Group>
        <Prop>
          <Id>CurrentPage</Id>
          <Name>CurrentPage</Name>
          <Type>Integer</Type>
          <Metadata>
            <Value name="FlagScope">Runtime</Value>
          </Metadata>
        </Prop>
      </Children>
    </Group>
  </Object>
</Content>