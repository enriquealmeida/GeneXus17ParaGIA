<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../../Properties.xslt"?>
<Content xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<Object id="gxui.Panel">
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop>
					<Id>Width</Id>
					<Name>Width</Name>
					<Type>Integer</Type>
					<Default>100</Default>
					<Metadata />
					<Description>Control width.</Description>
				</Prop>
				<Prop>
					<Id>Height</Id>
					<Name>Height</Name>
					<Type>Integer</Type>
					<Default>100</Default>
					<Metadata />
					<Description>Control height.</Description>
				</Prop>
				<Prop>
					<Id>ShowAsWindow</Id>
					<Name>ShowAsWindow</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name="FlagScope">DesignTime</Value>
					</Metadata>
					<Description>True make the panel behave like a floating Window.</Description>
				</Prop>
				<Prop>
					<Id>Layout</Id>
					<Name>Layout</Name>
					<Type>Combo</Type>
					<Default>default</Default>
					<Metadata>
						<Value name="FlagScope">DesignTime</Value>
					</Metadata>
					<Values>
						<Value id="default" desc="Default" />
						<Value id="fit" desc="Fit" />
					</Values>
					<Description>
						The layout type to be used in this container.
						* Use Fit if inside the container a single GxUI child control will be shown.
						* This child control will expand to fit the layout's container if its AddToParentGxUIControl property is set to true.
						* Important: Fit layout will disable the container scrollbars, so it should only be used when showing a single, expanded, GxUI control inside. In any other case, Default layout should be used.
					</Description>

				</Prop>
				<Prop>
					<Id>AddToParentGxUIControl</Id>
					<Name>AddToParentGxUIControl</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Metadata>
						<Value name="FlagScope">DesignTime</Value>
					</Metadata>
					<Description>True to add the control to its parent GxUI control (if there's one). Defaults to true.</Description>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Children>
						<Prop>
							<Id>AutoWidth</Id>
							<Name>AutoWidth</Name>
							<Type>Combo</Type>
							<Default>true</Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Values>
								<Value id="true" desc="True" />
								<Value id="false" desc="False" />
							</Values>
							<Description>True to automatically calculate width from the panel content, false to use fixed width.</Description>
						</Prop>
						<Prop>
							<Id>AutoHeight</Id>
							<Name>AutoHeight</Name>
							<Type>Combo</Type>
							<Default>false</Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Values>
								<Value id="true" desc="True" />
								<Value id="false" desc="False" />
							</Values>
							<Description>True to automatically calculate height from the panel content, false to use fixed height.</Description>
						</Prop>
						<Prop>
							<Id>Title</Id>
							<Name>Title</Name>
							<Type>Text</Type>
							<Default></Default>
							<Metadata />
							<Description>The title text to display in the panel header.</Description>
						</Prop>
						<Prop>
							<Id>HeaderPosition</Id>
							<Name>HeaderPosition</Name>
							<Type>Combo</Type>
							<Default>top</Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Values>
								<Value id="top" desc="Top" />
								<Value id="bottom" desc="Bottom" />
								<Value id="left" desc="Left" />
								<Value id="right" desc="Right" />
							</Values>
							<Description>Position of the panel header (defaults to Top).</Description>
						</Prop>
						<Prop>
							<Id>IconCls</Id>
							<Name>IconCls</Name>
							<Type>Text</Type>
							<Default></Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Description>A CSS class that will provide a background image to be used as the panel header icon.</Description>
						</Prop>
						<Prop>
							<Id>Cls</Id>
							<Name>Cls</Name>
							<Type>Text</Type>
							<Default></Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Description>An optional extra CSS class that will be added to this control's element. This can be useful for adding customized styles to the component or any of its children using standard CSS rules.</Description>
						</Prop>
						<Prop>
							<Id>Frame</Id>
							<Name>Frame</Name>
							<Type>Combo</Type>
							<Default>false</Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Values>
								<Value id="true" desc="True" />
								<Value id="false" desc="False" />
							</Values>
							<Description>True to render the panel with custom rounded borders, false to render with plain 1px square borders.</Description>
						</Prop>
						<Prop>
							<Id>Border</Id>
							<Name>Border</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Metadata />
							<Description>True to display the borders of the panel's body element, false to hide them (defaults to true). By default, the border is a 2px wide inset border.</Description>
						</Prop>
						<Prop>
							<Id>Modal</Id>
							<Name>Modal</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Description>True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false).</Description>
						</Prop>
						<Group>
							<Name>Toolbar</Name>
							<Children>
								<Prop>
									<Id>UseToolbar</Id>
									<Name>UseToolbar</Name>
									<Type>Combo</Type>
									<Default>false</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Values>
										<Value id="true" desc="True" />
										<Value id="false" desc="False" />
									</Values>
									<Description>True to enable a buttons toolbar at the top of the panel.</Description>
								</Prop>
								<Prop>
									<Id>ToolbarPosition</Id>
									<Name>ToolbarPosition</Name>
									<Type>Combo</Type>
									<Default>top</Default>
									<Metadata>
										<Value name="FlagScope">Runtime</Value>
									</Metadata>
									<Values>
										<Value id="top" desc="Top" />
										<Value id="right" desc="Right" />
										<Value id="bottom" desc="Bottom" />
										<Value id="left" desc="Left" />
									</Values>
									<Description>Position where the toolbar will be docked.</Description>
								</Prop>
								<Prop>
									<Id>ToolbarData</Id>
									<Name>ToolbarData</Name>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.ControlAttVarReference, Artech.Genexus.Common</CustomType>
									<Metadata>
										<Value name="FlagSetValueMethod">SetToolbarData</Value>
										<Value name="FlagGetValueMethod">GetToolbarData</Value>
										<Value name="FlagDataTypeFilter">gxuiToolbar</Value>
										<Value name="FlagHideVariables">False</Value>
										<Value name="FlagHideAttributes">true</Value>
									</Metadata>
									<Description>A variable based on gxuiToolbar SDT, with the toolbar definition. See {@link gxui.Toolbar#Data gxuiToolbar Data property} for detailed information.</Description>
								</Prop>
							</Children>
						</Group>
					</Children>
				</Group>
				<Group>
					<Name>Behavior</Name>
					<Children>
						<Group>
							<Name>Resize</Name>
							<Children>
								<Prop>
									<Id>Resizable</Id>
									<Name>Resizable</Name>
									<Type>Combo</Type>
									<Default>false</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Values>
										<Value id="true" desc="True" />
										<Value id="false" desc="False" />
									</Values>
									<Description>True to enable resizing of the panel.</Description>
								</Prop>
								<Prop>
									<Id>MinWidth</Id>
									<Name>MinWidth</Name>
									<Type>Integer</Type>
									<Default>100</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Description>The minimum width for the element.</Description>
								</Prop>
								<Prop>
									<Id>MaxWidth</Id>
									<Name>MaxWidth</Name>
									<Type>Integer</Type>
									<Default>800</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Description>The maximum width for the element.</Description>
								</Prop>
								<Prop>
									<Id>MinHeight</Id>
									<Name>MinHeight</Name>
									<Type>Integer</Type>
									<Default>100</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Description>The minimum height for the element.</Description>
								</Prop>
								<Prop>
									<Id>MaxHeight</Id>
									<Name>MaxHeight</Name>
									<Type>Integer</Type>
									<Default>600</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Description>The maximum height for the element.</Description>
								</Prop>
								<Prop>
									<Id>Handles</Id>
									<Name>Handles</Name>
									<Type>Text</Type>
									<Default>s e se</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Description>
* String consisting of the resize handles to display.
*
* - 'n'	    north
* - 's'	    south
* - 'e'	    east
* - 'w'     west
* - 'nw'    northwest
* - 'sw'    southwest
* - 'se'    southeast
* - 'ne'    northeast
* - 'all'   all
									</Description>
								</Prop>
							</Children>
						</Group>
						<Group>
							<Name>Collapsing</Name>
							<Children>
								<Prop>
									<Id>Collapsible</Id>
									<Name>Collapsible</Name>
									<Type>Combo</Type>
									<Default>false</Default>
									<Values>
										<Value id="true" desc="True" />
										<Value id="false" desc="False" />
									</Values>
									<Description>True to make the panel collapsible and have the expand/collapse toggle button automatically rendered into the header, false to keep the panel statically sized with no button.</Description>
								</Prop>
								<Prop>
									<Id>Collapsed</Id>
									<Name>Collapsed</Name>
									<Type>Combo</Type>
									<Default>false</Default>
									<Metadata />
									<Values>
										<Value id="true" desc="True" />
										<Value id="false" desc="False" />
									</Values>
									<Description>True to render the panel collapsed, false to render it expanded (defaults to false).</Description>
								</Prop>
								<Prop>
									<Id>AnimateCollapse</Id>
									<Name>AnimateCollapse</Name>
									<Type>Combo</Type>
									<Default>false</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Values>
										<Value id="true" desc="True" />
										<Value id="false" desc="False" />
									</Values>
									<Description>True to animate the transition when the panel is collapsed, false to skip the animation.</Description>
								</Prop>
								<Prop>
									<Id>CollapseDirection</Id>
									<Name>CollapseDirection</Name>
									<Type>Combo</Type>
									<Default>top</Default>
									<Metadata>
										<Value name="FlagScope">DesignTime</Value>
									</Metadata>
									<Values>
										<Value id="top" desc="Top" />
										<Value id="bottom" desc="Bottom" />
										<Value id="left" desc="Left" />
										<Value id="right" desc="Right" />
									</Values>
									<Description>The direction to collapse the Panel when the toggle button is clicked (defaults to HeaderPosition).</Description>
								</Prop>
							</Children>
						</Group>
					</Children>
				</Group>
				<Group>
					<Name>State Management</Name>
					<Children>
						<Prop>
							<Id>Stateful</Id>
							<Name>Stateful</Name>
							<Type>Combo</Type>
							<Default>true</Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Values>
								<Value id="true" desc="True" />
								<Value id="false" desc="False" />
							</Values>
							<Description>A flag which causes the Component to attempt to restore the state of internal properties from a saved state on startup.</Description>
						</Prop>
						<Prop>
							<Id>StateId</Id>
							<Name>StateId</Name>
							<Type>Text</Type>
							<Default></Default>
							<Metadata>
								<Value name="FlagScope">DesignTime</Value>
							</Metadata>
							<Description>The unique id for this component to use for state management purposes.</Description>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>ButtonPressedId</Id>
					<Name>ButtonPressedId</Name>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name="FlagScope">Runtime</Value>
					</Metadata>
					<Description>@inheritdoc gxui.Toolbar#ButtonPressedId</Description>
				</Prop>
				<Prop>
					<Id>EditFieldValue</Id>
					<Name>EditFieldValue</Name>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name="FlagScope">Runtime</Value>
					</Metadata>
					<Description>@inheritdoc gxui.Toolbar#EditFieldValue</Description>
				</Prop>
				<Prop>
					<Id>Visible</Id>
					<Name>Visible</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Metadata>
						<Value name="FlagScope">Runtime</Value>
					</Metadata>
					<Description>Set to true to hide the panel.</Description>
				</Prop>
				<Prop>
					<Id>Refresh</Id>
					<Name>Refresh</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Metadata>
						<Value name="FlagScope">Runtime</Value>
					</Metadata>
					<Description>(Deprecated) Set to true to refresh the panel properties.</Description>
				</Prop>
			</Children>
		</Group>
	</Object>
</Content>