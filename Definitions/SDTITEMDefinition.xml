<?xml version='1.0' encoding='iso-8859-1'?>
<Content version='148254 $'>
	<Object id='SDTITEM' inheritance='ATT '>
		<Group>
			<Name>General</Name>
			<Description>Attribute Properties</Description>
			<Type>Main</Type>
			<Children>
				<Prop>
					<Id>AttName</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Alias>Name</Alias>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(AttEditNameProtected) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttEditNameProtected</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type='Required'/>
						<Option type="Don't serialize"/>
						<Option type='No Default'/>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>AttDesc</Id>
					<Name>Description</Name>
					<Description>Description</Description>
					<Alias>Description</Alias>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttName)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttName</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Architecture.Common.Resolvers.ObjectDescriptionResolver, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>HORIZONTAL_DESCRIPTION</Id>
					<Name>Title</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttDesc)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttDesc</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IS_DESIGN) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IS_DESIGN</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(OBJ_TYPE) == id_OTYPE_VAR) or ((value(OBJ_TYPE) == id_OTYPE_DOM) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_VAR</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_DOM</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>OBJ_DATATYPE</PropName>
									<Value>DT_BLOB</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type="Don't serialize">
							<Cond>(value(OBJ_TYPE) == id_OTYPE_VAR) or ((value(OBJ_TYPE) == id_OTYPE_DOM) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_VAR</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_DOM</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttHORIZONTAL_DESCRIPTIONDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>VERTICAL_DESCRIPTION</Id>
					<Name>Column title</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttDesc)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttDesc</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>OBJ_DATATYPE</PropName>
									<Value>DT_BLOB</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(OBJ_TYPE) == id_OTYPE_DOM) or (value(OBJ_TYPE) == id_OTYPE_SDT)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_DOM</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_SDT</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IS_DESIGN) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IS_DESIGN</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type="Don't serialize">
							<Cond>(value(OBJ_TYPE) == id_OTYPE_VAR) or ((value(OBJ_TYPE) == id_OTYPE_DOM) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_VAR</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_DOM</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttVERTICAL_DESCRIPTIONDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ContextualTitle</Id>
					<Name>ContextualTitle</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(OBJ_TYPE) == id_OTYPE_VAR) or ((value(OBJ_TYPE) == id_OTYPE_DOM) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_VAR</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_DOM</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ContextualTitleDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>ExternalName</Id>
					<Name>Exposed name</Name>
					<Description>Exposed name</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(ATTCUSTOMTYPE)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>ATTCUSTOMTYPE</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(OBJ_TYPE) == id_OTYPE_SDT) or (((value(AttDatatype) != 4) and ((value(AttDatatype) != 5) and ((value(AttDatatype) != 13) and ((value(AttDatatype) != 8) and ((value(AttDatatype) != 6) and ((value(AttDatatype) != 12) and ((value(AttDatatype) != 14) and ((value(AttDatatype) != 7) and ((value(AttDatatype) != 15) and (value(AttDatatype) != 254)))))))))) or (value(AttCollection) == false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_SDT</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttDatatype</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttDatatype</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>AttDatatype</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>AttDatatype</PropName>
																					<Value>8</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>NotEqual</Operator>
																							<PropName>AttDatatype</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>NotEqual</Operator>
																									<PropName>AttDatatype</PropName>
																									<Value>12</Value>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>BooleanExpression</Type>
																									<FirstPart>
																										<Expression>
																											<Type>Comparison</Type>
																											<Operator>NotEqual</Operator>
																											<PropName>AttDatatype</PropName>
																											<Value>14</Value>
																										</Expression>
																									</FirstPart>
																									<Operator>and</Operator>
																									<SecondPart>
																										<Expression>
																											<Type>BooleanExpression</Type>
																											<FirstPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>NotEqual</Operator>
																													<PropName>AttDatatype</PropName>
																													<Value>7</Value>
																												</Expression>
																											</FirstPart>
																											<Operator>and</Operator>
																											<SecondPart>
																												<Expression>
																													<Type>BooleanExpression</Type>
																													<FirstPart>
																														<Expression>
																															<Type>Comparison</Type>
																															<Operator>NotEqual</Operator>
																															<PropName>AttDatatype</PropName>
																															<Value>15</Value>
																														</Expression>
																													</FirstPart>
																													<Operator>and</Operator>
																													<SecondPart>
																														<Expression>
																															<Type>Comparison</Type>
																															<Operator>NotEqual</Operator>
																															<PropName>AttDatatype</PropName>
																															<Value>254</Value>
																														</Expression>
																													</SecondPart>
																												</Expression>
																											</SecondPart>
																										</Expression>
																									</SecondPart>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagAssertSDTProperty'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ExposedNameDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ExternalNamespace</Id>
					<Name>Exposed namespace</Name>
					<Description>Exposed namespace</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(ATTCUSTOMTYPE)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>ATTCUSTOMTYPE</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(OBJ_TYPE) == id_OTYPE_SDT) or (((value(AttDatatype) != 4) and ((value(AttDatatype) != 5) and ((value(AttDatatype) != 13) and ((value(AttDatatype) != 8) and ((value(AttDatatype) != 6) and ((value(AttDatatype) != 12) and ((value(AttDatatype) != 14) and ((value(AttDatatype) != 7) and ((value(AttDatatype) != 15) and (value(AttDatatype) != 254)))))))))) or (value(AttCollection) == false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_SDT</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttDatatype</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttDatatype</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>AttDatatype</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>AttDatatype</PropName>
																					<Value>8</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>NotEqual</Operator>
																							<PropName>AttDatatype</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>NotEqual</Operator>
																									<PropName>AttDatatype</PropName>
																									<Value>12</Value>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>BooleanExpression</Type>
																									<FirstPart>
																										<Expression>
																											<Type>Comparison</Type>
																											<Operator>NotEqual</Operator>
																											<PropName>AttDatatype</PropName>
																											<Value>14</Value>
																										</Expression>
																									</FirstPart>
																									<Operator>and</Operator>
																									<SecondPart>
																										<Expression>
																											<Type>BooleanExpression</Type>
																											<FirstPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>NotEqual</Operator>
																													<PropName>AttDatatype</PropName>
																													<Value>7</Value>
																												</Expression>
																											</FirstPart>
																											<Operator>and</Operator>
																											<SecondPart>
																												<Expression>
																													<Type>BooleanExpression</Type>
																													<FirstPart>
																														<Expression>
																															<Type>Comparison</Type>
																															<Operator>NotEqual</Operator>
																															<PropName>AttDatatype</PropName>
																															<Value>15</Value>
																														</Expression>
																													</FirstPart>
																													<Operator>and</Operator>
																													<SecondPart>
																														<Expression>
																															<Type>Comparison</Type>
																															<Operator>NotEqual</Operator>
																															<PropName>AttDatatype</PropName>
																															<Value>254</Value>
																														</Expression>
																													</SecondPart>
																												</Expression>
																											</SecondPart>
																										</Expression>
																									</SecondPart>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagAssertSDTProperty'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ExposedNamespaceDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagBuildAction'>RebuildAll</Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>idATTFORMULA</Id>
					<Name>Formula</Name>
					<Description>Formula</Description>
					<Alias>Formula</Alias>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.Objects.Formula, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(OBJ_TYPE) == id_OTYPE_ATT</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>OBJ_TYPE</PropName>
									<Value>id_OTYPE_ATT</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IS_SUBTYPE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IS_SUBTYPE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>idATTISFORMULA</Id>
					<Name>AttIsFormula</Name>
					<Description>Attribute is formula</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttIsFormulaDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Group hidden='1'>
					<Id>AttEditFlags</Id>
					<Name>EditFlags</Name>
					<Description>EditFlags</Description>
					<Type>Group</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
					<Children>
						<Prop hidden='1'>
							<Id>AttEditNameProtected</Id>
							<Name>AttEditNameProtected</Name>
							<Description>AttEditNameProtected</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsStandardVariable</Id>
							<Name>IsStandardVariable</Name>
							<Description>Is standard variable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>idIsAutoDefinedVariable</Id>
							<Name>IsAutoDefinedVariable</Name>
							<Description>Is autodefined variable</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDisableArrays</Id>
							<Name>AttEditDisableArrays</Name>
							<Description>AttEditDisableArrays</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditNewVariable</Id>
							<Name>AttEditNewVariable</Name>
							<Description>AttEditNewVariable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDontAssign</Id>
							<Name>AttEditDontAssign</Name>
							<Description>AttEditDontAssign</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttriNum</Id>
					<Name>Id</Name>
					<Alias>Key</Alias>
					<Type>Integer</Type>
					<Default>0</Default>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttriClass</Id>
					<Name>AttriClass</Name>
					<Alias>Class</Alias>
					<Type>Integer</Type>
					<Default>2</Default>
					<Metadata>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='FlagExport'>false</Value>
						<Value name='FlagImport'>false</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttModelId</Id>
					<Name>AttModelId</Name>
					<Type>Integer</Type>
					<Default>0</Default>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttType</Id>
					<Name>AttType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EXT_ATT_TYPE_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsEnumerated</Id>
					<Name>BasedOnEnumerated</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsEnumeratedDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDisplayName'>Based on Enumerated</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RowCount</Id>
					<Name>RowCount</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.WebROW_COUNTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColCount</Id>
					<Name>ColCount</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.WebCOL_COUNTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>8</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IS_DESIGN</Id>
					<Name>Design</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>OBJ_TYPE</Id>
					<Name>Object type</Name>
					<Type>Combo</Type>
					<Default>id_OTYPE_ATT</Default>
					<Values>
						<Value id='id_OTYPE_ATT' desc='Attribute'/>
						<Value id='id_OTYPE_VAR' desc='Variable'/>
						<Value id='id_OTYPE_DOM' desc='Domain'/>
						<Value id='id_OTYPE_SDT' desc='SDTItem'/>
					</Values>
					<Metadata>
						<Value name='FlagExport'>false</Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>ALLOWNULL</Id>
					<Name>AllowNull</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.AllowNullVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>EmptyAsNull</Id>
					<Name>EmptyAsNull</Name>
					<Type>Combo</Type>
					<Values>
						<Value id='No' desc='No Nulls'/>
						<Value id='Yes' desc='Empty as Null'/>
						<Value id='Blank' desc='Blank as Null'/>
						<Value id='Compatibility' desc='Compatible'/>
					</Values>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Type)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Type</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(HAS_DOMAIN)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>HAS_DOMAIN</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(value(OBJ_TYPE) != id_OTYPE_VAR) and ((value(OBJ_TYPE) != id_OTYPE_SDT) and (value(idATTISFORMULA) != true))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_VAR</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>idATTISFORMULA</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EmptyAsNullDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.EmptyAsNullValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
						<Value name='FlagDisplayName'>Nulls in Forms</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>id_ATT_EXTERNAL_STORAGE</Id>
					<Name>Use External Storage Provider</Name>
					<Description>The Generator is set up to use an external storage provider, so blobs, images, audio and videos are stored there by default. Set this property to 'False' to store this attribute locally instead.</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>((value(OBJ_DATATYPE) == DT_OBJECT) or ((value(OBJ_DATATYPE) == DT_BITMAP) or ((value(OBJ_DATATYPE) == DT_VIDEO) or (value(OBJ_DATATYPE) == DT_AUDIO)))) and (value(idATTISFORMULA) != true)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_OBJECT</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_BITMAP</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>OBJ_DATATYPE</PropName>
																	<Value>DT_VIDEO</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>OBJ_DATATYPE</PropName>
																	<Value>DT_AUDIO</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>idATTISFORMULA</PropName>
											<Value>true</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(OBJ_TYPE) != id_OTYPE_ATT</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>OBJ_TYPE</PropName>
									<Value>id_OTYPE_ATT</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificationName'>ExternalStorage</Value>
						<Value name='FlagSpecificable'>IfApply</Value>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.UseExternalStorageVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>ATT_TIMESTAMP</Id>
					<Name>ATT_TIMESTAMP</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttBaseClass</Id>
					<Name>AttBaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttThemeBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.Apply.AttThemeClassApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ATTThemeClass</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttThemeClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.Apply.AttThemeClassApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='ConstantName'>ThemeClass</Value>
					</Metadata>
				</Prop>
				<Group>
					<Id>GroupType</Id>
					<Name>Type Definition</Name>
					<Description>Type Definition</Description>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>AttSupertypeName</Id>
							<Name>Supertype</Name>
							<Description>Name of supertype</Description>
							<Alias>SuperTypeKey</Alias>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_TYPE) == id_OTYPE_VAR) or ((value(OBJ_TYPE) == id_OTYPE_DOM) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_VAR</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_DOM</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.SuperTypeKeyAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ShouldSerialize'>true</Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagImport'>false</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttDomain</Id>
							<Name>Domain</Name>
							<Description>Domain</Description>
							<Alias>DomainKey</Alias>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.Objects.Domain, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttName)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttName</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttriNum)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttriNum</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DomainKeyDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ShouldSerialize'>true</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
								<Option type='Dyn Default'/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEnumeratedDomain</Id>
							<Name>Enumerated domain</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>VarBasedOn</Id>
							<Name>Based on attribute</Name>
							<Description>Based on attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_VAR</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>value(AttDomain) == BasedOnAttribute</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttDomain</PropName>
											<Value>BasedOnAttribute</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.VarBasedOnDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>idBasedOn</Id>
							<Name>Based on</Name>
							<Description>Based on</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.BasedOnReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>value(AttDomain) == BasedOnAttribute</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttDomain</PropName>
											<Value>BasedOnAttribute</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BasedOnDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.BasedOnValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.BasedOnReferenceAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagAssertVARProperty'></Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type="Don't serialize"/>
								<Option type='Dyn Show'/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>ATTCUSTOMTYPE</Id>
							<Name>Data Type</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttCustomType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttCustomTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttCustomTypeAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AttDatatype</Id>
							<Name>Internal Data Type</Name>
							<Description>Data type</Description>
							<Alias>Type</Alias>
							<Type>Dyn Combo</Type>
							<Default>NUMERIC</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttTypeAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ShouldSerialize'>true</Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagOnlyDefault'></Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
								<Option type='Dyn Default'/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>OBJ_DATATYPE</Id>
							<Name>Internal Data Type (String)</Name>
							<Type>Combo</Type>
							<Default>DT_NUMERIC</Default>
							<Values>
								<Value id='DT_NUMERIC' desc='Numeric'/>
								<Value id='DT_CHARACTER' desc='Character'/>
								<Value id='DT_VARCHAR' desc='VarChar'/>
								<Value id='DT_LONGVARCHAR' desc='Long Varchar'/>
								<Value id='DT_DATE' desc='Date'/>
								<Value id='DT_DATETIME' desc='DateTime'/>
								<Value id='DT_OBJECT' desc='Object'/>
								<Value id='DT_BLOB' desc='BLOB'/>
								<Value id='DT_BITMAP' desc='Bitmap'/>
								<Value id='DT_GUID' desc='GUID'/>
								<Value id='DT_VIDEO' desc='Video'/>
								<Value id='DT_AUDIO' desc='Audio'/>
								<Value id='DT_GEOGRAPHY' desc='Geography'/>
								<Value id='DT_GEOPOINT' desc='Geopoint'/>
								<Value id='DT_GEOLINE' desc='Geoline'/>
								<Value id='DT_GEOPOLYGON' desc='Geopolygon'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttDatatype)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDatatype</PropName>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_DATATYPEDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop>
							<Id>AttLength</Id>
							<Name>Length</Name>
							<Description>Length</Description>
							<Alias>Length</Alias>
							<Type>Integer</Type>
							<Default>4</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_BLOB</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_NUMERIC) and (value(OBJ_DATATYPE) != DT_CHARACTER)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_NUMERIC</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_CHARACTER</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>20</Value>
									<Cond>value(OBJ_DATATYPE) == DT_CHARACTER</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_CHARACTER</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>255</Value>
									<Cond>value(OBJ_DATATYPE) == DT_GEOGRAPHY</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GEOGRAPHY</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>255</Value>
									<Cond>value(OBJ_DATATYPE) == DT_GEOPOINT</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GEOPOINT</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>255</Value>
									<Cond>value(OBJ_DATATYPE) == DT_GEOLINE</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GEOLINE</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>255</Value>
									<Cond>value(OBJ_DATATYPE) == DT_GEOPOLYGON</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GEOPOLYGON</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>8</Value>
									<Cond>value(OBJ_DATATYPE) == DT_DATE</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_DATE</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>(value(OBJ_DATATYPE) == DT_DATETIME) and (value(idDATEFORMAT) == idDATEFORMAT_NONE)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idDATEFORMAT</PropName>
													<Value>idDATEFORMAT_NONE</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>8</Value>
									<Cond>(value(OBJ_DATATYPE) == DT_DATETIME) and (value(idDATEFORMAT) == idDATEFORMAT_SHORT)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idDATEFORMAT</PropName>
													<Value>idDATEFORMAT_SHORT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>10</Value>
									<Cond>(value(OBJ_DATATYPE) == DT_DATETIME) and (value(idDATEFORMAT) == idDATEFORMAT_LONG)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idDATEFORMAT</PropName>
													<Value>idDATEFORMAT_LONG</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2097152</Value>
									<Cond>value(OBJ_DATATYPE) == DT_LONGVARCHAR</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_LONGVARCHAR</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>40</Value>
									<Cond>value(OBJ_DATATYPE) == DT_VARCHAR</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_VARCHAR</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttLengthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttLengthValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttLengthAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ShouldSerialize'>true</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AttDecimal</Id>
							<Name>Decimals</Name>
							<Description>Decimals</Description>
							<Alias>Decimals</Alias>
							<Type>Integer</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ATTLENGTH)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ATTLENGTH</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_BLOB</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) != DT_NUMERIC</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_NUMERIC</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(OBJ_DATATYPE) == DT_DATE</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_DATE</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>5</Value>
									<Cond>(value(OBJ_DATATYPE) == DT_DATETIME) and (value(idHOURFORMAT) == idHOURFORMAT_HOURMIN)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idHOURFORMAT</PropName>
													<Value>idHOURFORMAT_HOURMIN</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2</Value>
									<Cond>(value(OBJ_DATATYPE) == DT_DATETIME) and (value(idHOURFORMAT) == idHOURFORMAT_ONLYHOUR)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idHOURFORMAT</PropName>
													<Value>idHOURFORMAT_ONLYHOUR</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>8</Value>
									<Cond>(value(OBJ_DATATYPE) == DT_DATETIME) and (value(idHOURFORMAT) == idHOURFORMAT_HOURMINSEC)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idHOURFORMAT</PropName>
													<Value>idHOURFORMAT_HOURMINSEC</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>12</Value>
									<Cond>(value(OBJ_DATATYPE) == DT_DATETIME) and (value(idHOURFORMAT) == idHOURFORMAT_HOURMINSECMIL)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idHOURFORMAT</PropName>
													<Value>idHOURFORMAT_HOURMINSECMIL</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttDecimalsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttDecimalsValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttDecimalsAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ShouldSerialize'>true</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttMaxLen</Id>
							<Name>Maximum length</Name>
							<Description>Maximum length</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_VARCHAR) and (value(OBJ_DATATYPE) != DT_LONGVARCHAR)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VARCHAR</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_LONGVARCHAR</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttMaxLengthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttMaxLengthAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type="Don't serialize"/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttAvgLen</Id>
							<Name>Average length</Name>
							<Description>Average length</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ATTMAXLEN)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ATTMAXLEN</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_VARCHAR) and (value(OBJ_DATATYPE) != DT_LONGVARCHAR)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VARCHAR</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_LONGVARCHAR</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAvgDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttAvgLengthAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type="Don't serialize"/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AttSigned</Id>
							<Name>Signed</Name>
							<Description>Signed</Description>
							<Alias>Signed</Alias>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) != DT_NUMERIC</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_NUMERIC</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttSignedDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ShouldSerialize'>true</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idDATEPRECISION</Id>
							<Name>Precision</Name>
							<Description>Date Time Precision</Description>
							<Type>Combo</Type>
							<Default>idDATEPRECISION_SECONDS</Default>
							<Values>
								<Value id='idDATEPRECISION_SECONDS' desc='Seconds'/>
								<Value id='idDATEPRECISION_MILLISECONDS' desc='Milliseconds'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) != DT_DATETIME</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_DATETIME</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type="Don't serialize">
									<Cond>value(OBJ_DATATYPE) != DT_DATETIME</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_DATETIME</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or ((value(IsStandardVariable) == true) or ((value(HAS_DOMAIN) == true) or (value(IS_SUBTYPE) == true))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_VAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_VAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_SDT</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>HAS_DOMAIN</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsStandardVariable</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>HAS_DOMAIN</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IS_SUBTYPE</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttDatePrecisionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idATTEXT</Id>
							<Name>FileType</Name>
							<Description>File type</Description>
							<Type>Text</Type>
							<Default>Unknown</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BLOB) or (value(OBJ_DATATYPE) == DT_BINARYFILE)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BLOB</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BINARYFILE</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(OBJ_DATATYPE) == DT_BINARYFILE) and (context(UserMode) != 0)) or ((value(OBJ_DATATYPE) == DT_BLOB) and (context(UserMode) == 0))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_BINARYFILE</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_BLOB</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagAssertVARProperty'></Value>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AttFileTypeAtt</Id>
							<Name>FileTypeAttribute</Name>
							<Description>File type attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_BLOB</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagHideVariables'>true</Value>
								<Value name='FlagCanBeNone'>true</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AttFileNameAtt</Id>
							<Name>FileNameAttribute</Name>
							<Description>File name attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_BLOB</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagHideVariables'>true</Value>
								<Value name='FlagCanBeNone'>true</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeImageName</Id>
							<Name>ImageName</Name>
							<Description>Image Name</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BITMAP) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BITMAP</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeImageType</Id>
							<Name>ImageType</Name>
							<Description>Image Type</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BITMAP) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BITMAP</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeImageURI</Id>
							<Name>ImageURI</Name>
							<Description>Image URI</Description>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BITMAP) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BITMAP</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeImageWidth</Id>
							<Name>ImageWidth</Name>
							<Description>Image Width</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BITMAP) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BITMAP</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeImageHeight</Id>
							<Name>ImageHeight</Name>
							<Description>Image Height</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BITMAP) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BITMAP</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeFileSize</Id>
							<Name>FileSize</Name>
							<Description>File Size</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BITMAP) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BITMAP</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeVideoName</Id>
							<Name>VideoName</Name>
							<Description>Video Name</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_VIDEO) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VIDEO</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeVideoType</Id>
							<Name>VideoType</Name>
							<Description>Video Type</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_VIDEO) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VIDEO</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeVideoURI</Id>
							<Name>VideoURI</Name>
							<Description>Video URI</Description>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_VIDEO) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VIDEO</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeAudioName</Id>
							<Name>AudioName</Name>
							<Description>Audio Name</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_AUDIO) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_AUDIO</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeAudioType</Id>
							<Name>AudioType</Name>
							<Description>Audio Type</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_AUDIO) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_AUDIO</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeAudioURI</Id>
							<Name>AudioURI</Name>
							<Description>Audio URI</Description>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_AUDIO) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_AUDIO</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeFileName</Id>
							<Name>FileName</Name>
							<Description>File Name</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BINARYFILE) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BINARYFILE</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>TypeFileURI</Id>
							<Name>FileURI</Name>
							<Description>File URI</Description>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_BINARYFILE) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_BINARYFILE</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagShowAsTip'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IDEnumDefinedValues</Id>
							<Name>EnumValues</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.EnumValues, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>not (value(OBJ_TYPE) == id_OTYPE_DOM)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_DOM</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='ShouldSerialize'>true</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.EnumValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EnumValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.EnumValuesAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
								<Option type='No Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>EnumCompatibility</Id>
							<Name>Gx90Compatibility</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlTypeCompatibility</Id>
							<Name>Gx90CompatibilityControlType</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttCollection</Id>
							<Name>Collection</Name>
							<Description>Collection</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_TYPE) == id_OTYPE_ATT</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>-1</Value>
									<Cond>value(OBJ_TYPE) == id_OTYPE_ATT</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttCollectionValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.AttCollectionReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AUTOGENERATE_GUID</Id>
							<Name>Autogenerate Guid</Name>
							<Description>Set Autogenerate for Guid</Description>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(OBJ_DATATYPE) == DT_GUID</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GUID</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AUTONUMBER</Id>
							<Name>Autonumber</Name>
							<Description>Set automatic numbering on/off</Description>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>not (value(OBJ_DATATYPE) == DT_NUMERIC)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_NUMERIC</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>-1</Value>
									<Cond>not (value(OBJ_DATATYPE) == DT_NUMERIC)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_NUMERIC</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_DATATYPE) == DT_NUMERIC) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and ((value(OBJ_TYPE) != id_OTYPE_SDT) and ((value(IsEnumerated) != true) and (value(idATTISFORMULA) != true))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_NUMERIC</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_VAR</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>IsEnumerated</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>idATTISFORMULA</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_DESIGN) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_DESIGN</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAUTONUMBERDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AUTONUMBER_START</Id>
							<Name>Autonumber start</Name>
							<Description>Set autonumbering starting value</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(AUTONUMBER) == false) or ((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AUTONUMBER</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_VAR</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_DESIGN) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_DESIGN</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAUTONUMBER_STARTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AUTONUMBER_STEP</Id>
							<Name>Autonumber step</Name>
							<Description>Set autonumbering step value</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(AUTONUMBER) == false) or ((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AUTONUMBER</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_VAR</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_DESIGN) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_DESIGN</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAUTONUMBER_STEPDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AUTONUMBER_FORREPLICATION</Id>
							<Name>Autonumber for replication</Name>
							<Description>Enable/disable replication of autonumbering</Description>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AUTONUMBER) == false) or ((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AUTONUMBER</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_VAR</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_DESIGN) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_DESIGN</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAUTONUMBER_FORREPLICATIONDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttSubtype</Id>
							<Name>AttSubtype</Name>
							<Type>Integer</Type>
							<Default>0</Default>
							<Options>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>HAS_DOMAIN</Id>
							<Name>Has domain</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttHasDomainDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttHasDomainValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
								<Option type='Dyn Default'/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IS_SUBTYPE</Id>
							<Name>IS_SUBTYPE</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttIsSubtypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttNumDim</Id>
							<Name>Dimensions</Name>
							<Description>Dimensions</Description>
							<Type>Combo</Type>
							<Values>
								<Value id='0' desc='Scalar'/>
								<Value id='1' desc='Vector'/>
								<Value id='2' desc='Matrix'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(OBJ_TYPE) != id_OTYPE_ATT) and ((value(OBJ_DATATYPE) != DT_BLOB) and ((value(OBJ_DATATYPE) != DT_OBJECT) and (value(IsEnumerated) != true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_ATT</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_BLOB</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_DATATYPE</PropName>
																	<Value>DT_OBJECT</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>IsEnumerated</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(AttCollection) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttCollection</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(VarDimsProtected) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>VarDimsProtected</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>1</Value>
									<Cond>value(AttCollection) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttCollection</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>value(AttCollection) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttCollection</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DimensionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.DimensionsVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop>
							<Id>AttRows</Id>
							<Name>Rows</Name>
							<Description>Rows</Description>
							<Type>Integer</Type>
							<Default>3</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(AttNumDim) != 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>AttNumDim</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(VarDimsProtected) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>VarDimsProtected</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttRowsDefaultResolver, Artech.Genexus.Common</Value>
							</Metadata>
							<Options>
								<Option type="Don't serialize"/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttCols</Id>
							<Name>Columns</Name>
							<Description>Columns</Description>
							<Type>Integer</Type>
							<Default>3</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(AttNumDim) == 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttNumDim</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(VarDimsProtected) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>VarDimsProtected</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttColsDefaultResolver, Artech.Genexus.Common</Value>
							</Metadata>
							<Options>
								<Option type="Don't serialize"/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataTypeString</Id>
							<Name>DataTypeString</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataTypeStringDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop>
							<Id>ATT_INITIAL_VALUE</Id>
							<Name>Initial value</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.Objects.Formula, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) == DT_GUID</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GUID</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(idATTISFORMULA) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>idATTISFORMULA</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_DESIGN) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_DESIGN</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagFormulaTypeWithVariables'>true</Value>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InitialValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagAssertSDTProperty'></Value>
								<Value name='FlagAssertVARProperty'></Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>DB_NLS_SUPPORT</Id>
							<Name>Enable national language support</Name>
							<Description>National language support</Description>
							<Type>Combo</Type>
							<Values>
								<Value id='No' desc='No'/>
								<Value id='Yes' desc='Yes'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(OBJ_TYPE) != id_OTYPE_VAR) and ((value(OBJ_TYPE) != id_OTYPE_SDT) and ((value(OBJ_DATATYPE) == DT_CHARACTER) or ((value(OBJ_DATATYPE) == DT_VARCHAR) or (value(OBJ_DATATYPE) == DT_LONGVARCHAR))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_VAR</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>OBJ_DATATYPE</PropName>
																	<Value>DT_CHARACTER</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_DATATYPE</PropName>
																			<Value>DT_VARCHAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_DATATYPE</PropName>
																			<Value>DT_LONGVARCHAR</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Yes</Value>
									<Cond>not ((value(OBJ_TYPE) != id_OTYPE_VAR) and ((value(OBJ_TYPE) != id_OTYPE_SDT) and ((value(OBJ_DATATYPE) == DT_CHARACTER) or ((value(OBJ_DATATYPE) == DT_VARCHAR) or (value(OBJ_DATATYPE) == DT_LONGVARCHAR)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_VAR</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_DATATYPE</PropName>
																			<Value>DT_CHARACTER</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>OBJ_DATATYPE</PropName>
																					<Value>DT_VARCHAR</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>OBJ_DATATYPE</PropName>
																					<Value>DT_LONGVARCHAR</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.NLSDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
								<Value name='FlagBuildAction'>CreateDBAndRebuildAll</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>Validation</Id>
					<Name>Validation</Name>
					<Description>Validation</Description>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>AttValueRange</Id>
							<Name>Value range</Name>
							<Description>Value range</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(idATTISFORMULA) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>idATTISFORMULA</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttDatatype) == 15</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttDatatype</PropName>
											<Value>15</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_BLOB</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) == DT_GUID</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GUID</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ValueRangeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.ValueRangeReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ValueRangeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
							<Options>
								<Option type="Don't serialize"/>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttRegEx</Id>
							<Name>Regular Expression</Name>
							<Description>Regular Expression</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_CHARACTER) and ((value(OBJ_DATATYPE) != DT_LONGVARCHAR) and (value(OBJ_DATATYPE) != DT_VARCHAR))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_CHARACTER</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_LONGVARCHAR</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_VARCHAR</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(AttValueRange) != </Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>AttValueRange</PropName>
											<Value></Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(idATTISFORMULA) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>idATTISFORMULA</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RegExDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.RegExValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagAssertVARProperty'></Value>
								<Value name='FlagSpecificable'>IfApply</Value>
								<Value name='FlagNoSpecify'></Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AttValidationFailedMsg</Id>
							<Name>Validation Failed Message</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(idATTISFORMULA) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>idATTISFORMULA</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AttEditReadonly) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttEditReadonly</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ValidateFailMessageDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.ValidateFailMessageVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagAssertVARProperty'></Value>
								<Value name='FlagNoSpecify'></Value>
								<Value name='FlagDeklarit'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>id_GRP_ATT_PICTURE</Id>
					<Name>Picture</Name>
					<Description>Picture</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(OBJ_DATATYPE) == DT_OBJECT</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>OBJ_DATATYPE</PropName>
									<Value>DT_OBJECT</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>OBJ_DATATYPE</PropName>
									<Value>DT_BLOB</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>idNUMNUMBERS</Id>
							<Name>Left fill</Name>
							<Description>Left fill</Description>
							<Type>Combo</Type>
							<Default>idNUMNUMBERS_BLANK</Default>
							<Values>
								<Value id='idNUMNUMBERS_BLANK' desc='Blank'/>
								<Value id='idNUMNUMBERS_ZERO' desc='Zero'/>
								<Value id='idNUMNUMBERS_BZERO' desc='Blank when Zero'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) == DT_BLOB</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_BLOB</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_NUMERIC) or ((value(HAS_DOMAIN) == true) or (value(IS_SUBTYPE) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_NUMERIC</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>HAS_DOMAIN</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_SUBTYPE</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type="Don't serialize">
									<Cond>value(OBJ_DATATYPE) != DT_NUMERIC</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_NUMERIC</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or (value(IsStandardVariable) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_VAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_VAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_SDT</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>HAS_DOMAIN</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsStandardVariable</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop>
							<Id>idTHOUSANDSEP</Id>
							<Name>Thousand separator</Name>
							<Description>Thousand separator</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_NUMERIC) or ((value(HAS_DOMAIN) == true) or (value(IS_SUBTYPE) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_NUMERIC</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>HAS_DOMAIN</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_SUBTYPE</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type="Don't serialize">
									<Cond>value(OBJ_DATATYPE) != DT_NUMERIC</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_NUMERIC</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or (value(IsStandardVariable) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_VAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_VAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_SDT</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>HAS_DOMAIN</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsStandardVariable</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop>
							<Id>idNUMPREFIX</Id>
							<Name>Prefix</Name>
							<Description>Prefix</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_NUMERIC) or ((value(HAS_DOMAIN) == true) or (value(IS_SUBTYPE) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_NUMERIC</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>HAS_DOMAIN</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_SUBTYPE</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type="Don't serialize">
									<Cond>value(OBJ_DATATYPE) != DT_NUMERIC</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_NUMERIC</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or (value(IsStandardVariable) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_VAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_VAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_SDT</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>HAS_DOMAIN</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsStandardVariable</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>idCHARCASE</Id>
							<Name>Case</Name>
							<Description>Case</Description>
							<Type>Combo</Type>
							<Default>idCHARCASE_NONE</Default>
							<Values>
								<Value id='idCHARCASE_NONE' desc='None'/>
								<Value id='idCHARCASE_UPPER' desc='Upper'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(OBJ_DATATYPE) != DT_CHARACTER) and ((value(OBJ_DATATYPE) != DT_VARCHAR) and (value(OBJ_DATATYPE) != DT_LONGVARCHAR))) or ((value(HAS_DOMAIN) == true) or (value(IS_SUBTYPE) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_CHARACTER</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_DATATYPE</PropName>
																	<Value>DT_VARCHAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_DATATYPE</PropName>
																	<Value>DT_LONGVARCHAR</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>HAS_DOMAIN</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_SUBTYPE</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type="Don't serialize">
									<Cond>(value(OBJ_DATATYPE) != DT_CHARACTER) and ((value(OBJ_DATATYPE) != DT_VARCHAR) and (value(OBJ_DATATYPE) != DT_LONGVARCHAR))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_CHARACTER</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_VARCHAR</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_LONGVARCHAR</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or (value(IsStandardVariable) == true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_VAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_VAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_SDT</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>HAS_DOMAIN</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsStandardVariable</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>idDATEFORMAT</Id>
							<Name>Date format</Name>
							<Description>Date format</Description>
							<Type>Combo</Type>
							<Default>idDATEFORMAT_SHORT</Default>
							<Values>
								<Value id='idDATEFORMAT_NONE' desc='None'/>
								<Value id='idDATEFORMAT_SHORT' desc='Year with two digits  (99/99/99)'/>
								<Value id='idDATEFORMAT_LONG' desc='Year with four digits (99/99/9999)'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_DATE) and (value(OBJ_DATATYPE) != DT_DATETIME)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATE</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type="Don't serialize">
									<Cond>(value(OBJ_DATATYPE) != DT_DATE) and (value(OBJ_DATATYPE) != DT_DATETIME)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATE</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or ((value(IsStandardVariable) == true) or ((value(HAS_DOMAIN) == true) or (value(IS_SUBTYPE) == true))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_VAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_VAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_SDT</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>HAS_DOMAIN</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsStandardVariable</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>HAS_DOMAIN</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IS_SUBTYPE</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DateFormatDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DateFormatValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idHOURFORMAT</Id>
							<Name>Hour format</Name>
							<Description>Hour format</Description>
							<Type>Combo</Type>
							<Default>idHOURFORMAT_HOURMIN</Default>
							<Values>
								<Value id='idHOURFORMAT_ONLYHOUR' desc='Only hour (hh)'/>
								<Value id='idHOURFORMAT_HOURMIN' desc='Hour and minutes (hh:mm)'/>
								<Value id='idHOURFORMAT_HOURMINSEC' desc='Hour, minutes and seconds (hh:mm:ss)'/>
								<Value id='idHOURFORMAT_HOURMINSECMIL' desc='Hour, minutes, seconds and milliseconds (hh:mm:ss.fff)'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDomain)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDomain</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(VarBasedOn)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>VarBasedOn</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idDATEPRECISION)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idDATEPRECISION</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>idHOURFORMAT_HOURMINSECMIL</Value>
									<Cond>value(idDATEPRECISION) != idDATEPRECISION_MILLISECONDS</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>idDATEPRECISION</PropName>
											<Value>idDATEPRECISION_MILLISECONDS</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>idHOURFORMAT_ONLYHOUR</Value>
									<Cond>value(idDATEPRECISION) == idDATEPRECISION_MILLISECONDS</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idDATEPRECISION</PropName>
											<Value>idDATEPRECISION_MILLISECONDS</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>idHOURFORMAT_HOURMIN</Value>
									<Cond>value(idDATEPRECISION) == idDATEPRECISION_MILLISECONDS</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idDATEPRECISION</PropName>
											<Value>idDATEPRECISION_MILLISECONDS</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>idHOURFORMAT_HOURMINSEC</Value>
									<Cond>value(idDATEPRECISION) == idDATEPRECISION_MILLISECONDS</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idDATEPRECISION</PropName>
											<Value>idDATEPRECISION_MILLISECONDS</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>idHOURFORMAT_HOURMINSECMIL</Value>
									<Cond>value(idDATEPRECISION) == idDATEPRECISION_MILLISECONDS</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idDATEPRECISION</PropName>
											<Value>idDATEPRECISION_MILLISECONDS</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) != DT_DATETIME</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_DATETIME</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type="Don't serialize">
									<Cond>value(OBJ_DATATYPE) != DT_DATETIME</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_DATETIME</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or ((value(IsStandardVariable) == true) or ((value(HAS_DOMAIN) == true) or (value(IS_SUBTYPE) == true))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_VAR</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>OBJ_TYPE</PropName>
																	<Value>id_OTYPE_SDT</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_VAR</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_TYPE</PropName>
																			<Value>id_OTYPE_SDT</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>HAS_DOMAIN</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsStandardVariable</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>HAS_DOMAIN</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IS_SUBTYPE</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttHourFormatDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ATT_PICTURE</Id>
							<Name>Picture</Name>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttLength)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttLength</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttDecimal)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttDecimal</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AttSigned)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttSigned</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(OBJ_DATATYPE)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>OBJ_DATATYPE</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IS_PASSWORD)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IS_PASSWORD</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idNUMNUMBERS)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idNUMNUMBERS</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idTHOUSANDSEP)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idTHOUSANDSEP</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idNUMPREFIX)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idNUMPREFIX</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idCHARCASE)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idCHARCASE</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idDATEFORMAT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idDATEFORMAT</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(idHOURFORMAT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>idHOURFORMAT</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) == DT_OBJECT) or ((value(OBJ_DATATYPE) == DT_BLOB) or ((value(OBJ_DATATYPE) == DT_BITMAP) or ((value(OBJ_DATATYPE) == DT_GEOGRAPHY) or ((value(OBJ_DATATYPE) == DT_GEOPOINT) or ((value(OBJ_DATATYPE) == DT_GEOLINE) or ((value(OBJ_DATATYPE) == DT_GEOPOLYGON) or ((value(OBJ_DATATYPE) == DT_VIDEO) or ((value(OBJ_DATATYPE) == DT_AUDIO) or (value(OBJ_DATATYPE) == DT_BINARYFILE)))))))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_OBJECT</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_BLOB</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>OBJ_DATATYPE</PropName>
																	<Value>DT_BITMAP</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>OBJ_DATATYPE</PropName>
																			<Value>DT_GEOGRAPHY</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>OBJ_DATATYPE</PropName>
																					<Value>DT_GEOPOINT</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>OBJ_DATATYPE</PropName>
																							<Value>DT_GEOLINE</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>OBJ_DATATYPE</PropName>
																									<Value>DT_GEOPOLYGON</Value>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>BooleanExpression</Type>
																									<FirstPart>
																										<Expression>
																											<Type>Comparison</Type>
																											<Operator>Equal</Operator>
																											<PropName>OBJ_DATATYPE</PropName>
																											<Value>DT_VIDEO</Value>
																										</Expression>
																									</FirstPart>
																									<Operator>or</Operator>
																									<SecondPart>
																										<Expression>
																											<Type>BooleanExpression</Type>
																											<FirstPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>OBJ_DATATYPE</PropName>
																													<Value>DT_AUDIO</Value>
																												</Expression>
																											</FirstPart>
																											<Operator>or</Operator>
																											<SecondPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>OBJ_DATATYPE</PropName>
																													<Value>DT_BINARYFILE</Value>
																												</Expression>
																											</SecondPart>
																										</Expression>
																									</SecondPart>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) == DT_GUID</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GUID</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(IsEnumerated) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>(value(OBJ_DATATYPE) == DT_DATE) or ((value(OBJ_DATATYPE) == DT_DATETIME) or (((value(IS_DESIGN) == false) and ((value(OBJ_TYPE) != id_OTYPE_VAR) and (value(OBJ_TYPE) != id_OTYPE_SDT))) or ((((value(OBJ_TYPE) == id_OTYPE_VAR) or (value(OBJ_TYPE) == id_OTYPE_SDT)) and (value(HAS_DOMAIN) == true)) or (value(IsStandardVariable) == true))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATE</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_DATETIME</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IS_DESIGN</PropName>
																			<Value>false</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>OBJ_TYPE</PropName>
																					<Value>id_OTYPE_VAR</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>OBJ_TYPE</PropName>
																					<Value>id_OTYPE_SDT</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>OBJ_TYPE</PropName>
																							<Value>id_OTYPE_VAR</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>OBJ_TYPE</PropName>
																							<Value>id_OTYPE_SDT</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>HAS_DOMAIN</PropName>
																					<Value>true</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsStandardVariable</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttPictureDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
								<Value name='FlagNoSpecify'></Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>ControlInfoGroup</Id>
					<Name>Control Info</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(context(UserMode) != 1) or (context(FormType) == Text)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>ControlType</Id>
							<Name>ControlType</Name>
							<Type>Combo Int</Type>
							<Default>2</Default>
							<Values>
								<Value id='0' desc='Combo Box'/>
								<Value id='1' desc='Radio Button'/>
								<Value id='2' desc='Edit'/>
								<Value id='3' desc='Check Box'/>
								<Value id='4' desc='Dynamic Combo Box'/>
								<Value id='6' desc='List Box'/>
								<Value id='7' desc='Dynamic List Box'/>
								<Value id='20' desc='Image'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IsEnumerated)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IsEnumerated</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.ControlTypeAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.ControlTypeTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='UITypeEditor'>Artech.Packages.Genexus.UI.TypeEditors.ControlTypeUITypeEditor, Artech.Packages.GenexusUI, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControl</Id>
							<Name>IsUserControl</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithFixedValues</Id>
							<Name>IsUserControlWithFixedValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithFixedValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithDynamicValues</Id>
							<Name>IsUserControlWithDynamicValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithDynamicValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithCustomValues</Id>
							<Name>IsUserControlWithCustomValues</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithCustomValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataSourceFrom</Id>
							<Name>Data Source From</Name>
							<Type>Combo</Type>
							<Default>Values</Default>
							<Values>
								<Value id='Values' desc='Values'/>
								<Value id='Attributes' desc='Attributes'/>
								<Value id='DataProvider' desc='Data Provider'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithFixedValues) == true) or ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithFixedValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Attributes</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>DataProvider</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Values</Value>
									<Cond>(value(IsUserControlWithFixedValues) == false) or ((value(ControlType) == 4) or (value(ControlType) == 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Attributes</Value>
									<Cond>(value(ControlType) == 4) or (value(ControlType) == 7)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>7</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.DataSourceFromTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProvider</Id>
							<Name>Data Provider</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=2a9e9aba-d2de-4801-ae7f-5e3819222daf),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProviderParameters</Id>
							<Name>Parameters</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlValues</Id>
							<Name>Values</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.CT_GXTXVAL_type, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1))) and ((context(UserMode) == 1) and (value(AttType) != 7))) or (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>0</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>6</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == true) and (value(DataSourceFrom) != Values)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>Values</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>InputType</Id>
							<Name>InputType</Name>
							<Description>Enter and show data as values or as descriptions</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Values'/>
								<Value id='1' desc='Descriptions'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(idATTISFORMULA) != true) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>idATTISFORMULA</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InputTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EditAutocomplete</Id>
							<Name>Suggest</Name>
							<Description>Offer suggestions while editing</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='No'/>
								<Value id='1' desc='OnRequest'/>
								<Value id='2' desc='Incremental'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(InputType)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>InputType</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ControlItemDescription)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ControlItemDescription</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(idATTISFORMULA) != true) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>idATTISFORMULA</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SuggestDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.SuggestValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.SuggestApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemValues</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemValuesFieldSpecifier</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemDescriptionFieldSpecifier</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemDescription</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true)))) or ((value(ControlType) == 2) and (value(InputType) != 0))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>IsUserControlWithDynamicValues</PropName>
																					<Value>true</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>InputType</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
								<Value name='FlagCanBeNone'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>FilterOperator</Id>
							<Name>FilterOperator</Name>
							<Description>How the suggestions relate to the edit contents</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Begins with'/>
								<Value id='1' desc='Contains'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>MaxItems</Id>
							<Name>SuggestMaxItems</Name>
							<Description>Maximum number of items in the suggestion list</Description>
							<Type>Integer</Type>
							<Default>5</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlSortDescription</Id>
							<Name>SortDescriptions</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((((value(IsUserControlWithFixedValues) == true) or (value(IsUserControlWithDynamicValues) == true)) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 2) and (value(EditAutocomplete) != 0))))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithFixedValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>2</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>CaseSensitive</Id>
							<Name>CaseSensitive</Name>
							<Description>Whether to consider case when filtering suggestions</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlDirection</Id>
							<Name>RadioDirection</Name>
							<Type>Combo Int</Type>
							<Default>1</Default>
							<Values>
								<Value id='0' desc='Horizontal'/>
								<Value id='1' desc='Vertical'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 1) and ((context(UserMode) == 1) and ((value(IsUserControl) == false) and (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>FORMATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>1</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlTitle</Id>
							<Name>ControlTitle</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(ControlType) == 3) or ((value(ControlType) == 1) and (true))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlCheckValue</Id>
							<Name>CheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and ((not (value(ControlType) == 3)) or (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlUnCheckValue</Id>
							<Name>UncheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and ((not (value(ControlType) == 3)) or (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.UncheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlWhere</Id>
							<Name>Conditions</Name>
							<Description>Filter conditions</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ConditionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and ((((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true))) and (value(DataSourceFrom) == Attributes)) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSFL</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLFS</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>FORMSFL</ObjectName>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName source='context'>GxObjClass</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>IsUserControlWithDynamicValues</PropName>
																							<Value>true</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Attributes</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>2</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>InputType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlWhereDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlRestrictedBy</Id>
							<Name>InstantiatedAttributes</Name>
							<Description>Additional restrictions by instantiated attributes list</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ParseAttributesList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or (value(ControlType) == 7))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlRestrictedByDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>count</Id>
							<Name>Count</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(ControlType) == 2) or ((value(ControlType) == 3) or ((value(ControlType) == 1) or (value(ControlType) == 20)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>20</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>AddEmptyItem</Id>
							<Name>EmptyItem</Name>
							<Description>Adds an item for 'none/all' selection</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(IsUserControlWithDynamicValues) == true) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EmptyItemText</Id>
							<Name>EmptyItemText</Name>
							<Description>Text associated with the empty item</Description>
							<Type>Text</Type>
							<Default>GX_EmptyItemText</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and ((value(AddEmptyItem) == true) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithDynamicValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AddEmptyItem</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCorrection</Id>
							<Name>Auto correction</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((value(AttType) == 5) or ((value(AttType) == 13) or (value(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCorrectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCapitalization</Id>
							<Name>Auto capitalization</Name>
							<Type>Combo</Type>
							<Default>FirstWord</Default>
							<Values>
								<Value id='None' desc='None'/>
								<Value id='FirstWord' desc='First word'/>
								<Value id='EachWord' desc='First letter of each word'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((value(AttType) == 5) or ((value(AttType) == 13) or (value(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.Apply.AutoCapitalizationApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCapitalizationDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>NotifyContextChange</Id>
							<Name>NotifyContextChange</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == false) and (value(idATTISFORMULA) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>idATTISFORMULA</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>MaximumUploadSize</Id>
							<Name>MaximumUploadSize</Name>
							<Description>Size of the image transfered to the server</Description>
							<Type>Combo</Type>
							<Default>large</Default>
							<Values>
								<Value id='actual' desc='Actual Size'/>
								<Value id='large' desc='Large'/>
								<Value id='medium' desc='Medium'/>
								<Value id='small' desc='Small'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='Wiki'>http://iwiki.genexus.com/hwiki.aspx?Maximum+Upload+Size+property,</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>PROP_ATT_BEHAVIOR_GROUP</Id>
					<Name>Behavior</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>Autocomplete</Id>
							<Name>InputHistory</Name>
							<Description>InputHistory</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Invalid'>
									<Value>-1</Value>
									<Cond>(value(EditAutocomplete) != 0) or (value(IsPassword) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsPassword</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>(value(EditAutocomplete) == 0) and ((value(IsPassword) != true) and ((value(AttType) == 4) or ((value(AttType) == 6) or ((value(AttType) == 12) or ((value(AttType) == 5) or (value(AttType) == 13))))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>IsPassword</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>6</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>12</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>AttType</PropName>
																							<Value>5</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>AttType</PropName>
																							<Value>13</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(EditAutocomplete) != 0) or (value(IsPassword) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsPassword</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(not (context(ReadOnly) == -1)) and ((value(ControlType) == 2) and ((value(idIsSDControl) == false) or (context(UserMode) == 1)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>ReadOnly</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>idIsSDControl</PropName>
																	<Value>false</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InputHistoryDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IsPassword</Id>
							<Name>IsPassword</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(idATTISFORMULA) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>idATTISFORMULA</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>not (value(ControlType) == 2)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or ((value(AttType) == 112) or ((value(AttType) == 93) or ((value(AttType) == 92) or ((value(AttType) == 14) or (value(AttType) == 45)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>112</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>93</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>92</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>14</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>45</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsPasswordDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idEnableShowPasswordHint</Id>
							<Name>EnableShowPassword</Name>
							<Description>Enable to show a hint to show/hide the password mask</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(IsPassword) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsPassword</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EnableShowPasswordDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>PROP_ATT_APPEARANCE_GROUP</Id>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 7</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>7</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 14</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>14</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(IsUserControl) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsUserControl</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(ControlType) == 999</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ControlType</PropName>
									<Value>999</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>AttWidthScale</Id>
							<Name>Automatic width scale factor</Name>
							<Description>Automatic width scale factor</Description>
							<Type>Combo</Type>
							<Default>1</Default>
							<Values>
								<Value id='UMPV' desc='Use Environment property value'/>
								<Value id='1' desc='1x'/>
								<Value id='2' desc='2x'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>(value(OBJ_TYPE) != id_OTYPE_VAR) and ((value(OBJ_TYPE) != id_OTYPE_SDT) and (value(IS_DESIGN) == false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_TYPE</PropName>
													<Value>id_OTYPE_VAR</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IS_DESIGN</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IS_SUBTYPE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IS_SUBTYPE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(HAS_DOMAIN) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>HAS_DOMAIN</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(OBJ_DATATYPE) != DT_CHARACTER) and ((value(OBJ_DATATYPE) != DT_VARCHAR) and (value(OBJ_DATATYPE) != DT_LONGVARCHAR))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_CHARACTER</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_VARCHAR</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_LONGVARCHAR</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>UMPV</Value>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>PROP_BLOB_DISPLAY</Id>
							<Name>Display</Name>
							<Description>Defines how control is displayed on screen</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Inline'/>
								<Value id='1' desc='Link'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(AttType) == 14</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>PROP_BLOB_CONTENTTYPE</Id>
							<Name>ContentType</Name>
							<Description>Content type</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(AttType) == 14</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AutoResize</Id>
							<Name>AutoResize</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAutoResizeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttAutoResizeAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>GxWidth</Id>
							<Name>Width</Name>
							<Description>Calculated width of the element</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Readonly'>
									<Cond>value(AutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagNoSpecify'></Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>GxHeight</Id>
							<Name>Height</Name>
							<Description>Calculated height of the element</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) != 0) and (value(ControlType) != 4)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>ControlType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(AutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagNoSpecify'></Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>Fill</Id>
							<Name>Fill</Name>
							<Description>Fill</Description>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BackColor</Id>
							<Name>BackColor</Name>
							<Description>BackColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Window</Value>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(Fill) == false) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>Fill</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((context(IsAbstractLayoutControl) == -1) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>IsAbstractLayoutControl</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ForeColor</Id>
							<Name>ForeColor</Name>
							<Description>ForeColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>WindowText</Value>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((context(IsAbstractLayoutControl) == -1) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>IsAbstractLayoutControl</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Font</Id>
							<Name>Font</Name>
							<Description>Font</Description>
							<Type>Custom</Type>
							<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Verdana,12</Value>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>HorizontalAlignment</Id>
							<Name>HorizontalAlignment</Name>
							<Description>HorizontalAlignment</Description>
							<Type>Combo</Type>
							<Default>left</Default>
							<Values>
								<Value id='left' desc='Left'/>
								<Value id='center' desc='Center'/>
								<Value id='right' desc='Right'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(ControlType) == 3</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ControlType</PropName>
											<Value>3</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(context(IsAbstractLayoutControl) == -1) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>IsAbstractLayoutControl</PropName>
													<Value>-1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAlignDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOldId'>Alignment</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>GxFormat</Id>
							<Name>Format</Name>
							<Type>Combo Int</Type>
							<Values>
								<Value id='0' desc='Text'/>
								<Value id='1' desc='HTML'/>
								<Value id='2' desc='Raw HTML'/>
								<Value id='3' desc='Text with meaningful spaces'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(isAttribute) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>isAttribute</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttFormatDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagBuildAction'>RebuildAll</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>TooltipText</Id>
							<Name>TooltipText</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 14</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>invitemsg</Id>
							<Name>InviteMessage</Name>
							<Description>Text to invite the user to interact with the object</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) != 6) and ((value(AttType) != 14) and (value(AttType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>AttType</PropName>
													<Value>6</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>14</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InviteMessageDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>PROP_ATT_OFFLINE_BEHAVIOR_GROUP</Id>
					<Name>Offline Behavior</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>not ((value(AttType) == 7) or ((value(AttType) == 93) or ((value(AttType) == 92) or ((value(AttType) == 112) or (value(AttType) == 14)))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>93</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>92</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>112</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>14</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>PROP_ATT_DOWNLOAD_OFFLINE</Id>
							<Name>Download content in Offline applications</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='FlagSpecificationName'>DownloadOffline</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>PROP_ATT_INTINFO_GROUP</Id>
					<Name>Interface Information</Name>
					<Description>Interface Information</Description>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>idVarServiceExtName</Id>
							<Name>External Name</Name>
							<Description>External name used when the variable is a service parameter</Description>
							<Type>Text</Type>
							<Default></Default>
							<Metadata>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.VarServiceExtNameVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationName'>VarServiceExtName</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>idHELPSOURCE</Id>
					<Name>Help</Name>
					<Description>Help Source</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.Parts.Help.HelpItemsPropertyValue, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(OBJ_TYPE) == id_OTYPE_VAR</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>OBJ_TYPE</PropName>
									<Value>id_OTYPE_VAR</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='TypeConverter'>Artech.Genexus.Common.Parts.Help.HelpItemsPropertyValueConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>DEKLARIT_METADATA</Id>
					<Name>DeklaritMetadata</Name>
					<Type>Text</Type>
					<Default></Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>OBJECT_METADATA</Id>
					<Name>ObjectMetadata</Name>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>DKL_RIGHT_TRIM</Id>
					<Name>Right Trim</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(OBJ_DATATYPE) == DT_CHARACTER) or ((value(OBJ_DATATYPE) == DT_VARCHAR) or (value(OBJ_DATATYPE) == DT_LONGVARCHAR))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_CHARACTER</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VARCHAR</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_LONGVARCHAR</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagNoSearchable'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>DKL_ISROWGUID</Id>
					<Name>Is Row Guid</Name>
					<Description>Unique identifier</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(OBJ_DATATYPE) == DT_GUID</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>OBJ_DATATYPE</PropName>
									<Value>DT_GUID</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagNoSearchable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>DKL_ENABLE_ATT_AUTH</Id>
					<Name>Enable Authorization</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagNoSearchable'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>DKL_MIME_TYPE</Id>
					<Name>Mime Type</Name>
					<Type>Text</Type>
					<Default></Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(OBJ_DATATYPE) == DT_CHARACTER) or ((value(OBJ_DATATYPE) == DT_VARCHAR) or ((value(OBJ_DATATYPE) == DT_LONGVARCHAR) or (value(OBJ_DATATYPE) == DT_BLOB)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_CHARACTER</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VARCHAR</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_LONGVARCHAR</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_BLOB</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop hidden='1'>
					<Id>DKL_ENCRYPTION</Id>
					<Name>Encryption</Name>
					<Type>Combo Int</Type>
					<Default>0</Default>
					<Values>
						<Value id='0' desc='None'/>
						<Value id='1' desc='Hashed'/>
						<Value id='2' desc='Encrypted'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(OBJ_DATATYPE) == DT_CHARACTER) or ((value(OBJ_DATATYPE) == DT_VARCHAR) or ((value(OBJ_DATATYPE) == DT_LONGVARCHAR) or (value(OBJ_DATATYPE) == DT_BLOB)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_CHARACTER</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VARCHAR</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_LONGVARCHAR</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>OBJ_DATATYPE</PropName>
															<Value>DT_BLOB</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop hidden='1'>
					<Id>DKL_CASING</Id>
					<Name>Casing</Name>
					<Type>Combo Int</Type>
					<Default>0</Default>
					<Values>
						<Value id='0' desc='Default'/>
						<Value id='1' desc='Lower Case'/>
						<Value id='2' desc='Upper Case'/>
						<Value id='3' desc='Proper Case'/>
						<Value id='4' desc='Sentence Case'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(OBJ_DATATYPE) == DT_CHARACTER) or ((value(OBJ_DATATYPE) == DT_VARCHAR) or (value(OBJ_DATATYPE) == DT_LONGVARCHAR))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_CHARACTER</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_VARCHAR</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_LONGVARCHAR</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop>
					<Id>DKL_ISPASSWORD</Id>
					<Name>Is Password</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(OBJ_DATATYPE) == DT_GUID) or ((value(OBJ_DATATYPE) == DT_DATE) or (value(OBJ_DATATYPE) == DT_DATETIME))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_GUID</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATE</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>OBJ_DATATYPE</PropName>
													<Value>DT_DATETIME</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagNoSearchable'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
		<Group>
			<Name>SDTITEM</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>idCollectionItemName</Id>
					<Name>Collection Item Name</Name>
					<Description>Collection Item Name</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(AttCollection) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SdtCollectionItemNameDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationName'>CollectionItemName</Value>
						<Value name='FlagAssertSDTProperty'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Id>SDTXmlSection</Id>
					<Name>XML Information</Name>
					<Description>XML Information</Description>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>SdtItemXmlType</Id>
							<Name>XmlType</Name>
							<Type>Combo</Type>
							<Default>Element</Default>
							<Values>
								<Value id='Attribute' desc='Attribute'/>
								<Value id='CData' desc='CData'/>
								<Value id='Element' desc='Element'/>
								<Value id='Value' desc='Value'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttDatatype) != 254) and (value(AttCollection) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>AttDatatype</PropName>
													<Value>254</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttCollection</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationName'>XmlType</Value>
								<Value name='FlagDisplayName'>XML Type</Value>
								<Value name='FlagAssertSDTProperty'></Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.XmlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idXmlName</Id>
							<Name>XML Name</Name>
							<Description>XML Name</Description>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(idWRAPPEDCOLLECTION) == idXmlCollectionWrapped</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idWRAPPEDCOLLECTION</PropName>
											<Value>idXmlCollectionWrapped</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationName'>XmlName</Value>
								<Value name='FlagAssertSDTProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idXmlCollectionItemName</Id>
							<Name>XML Collection Item Name</Name>
							<Description>XML Collection Item Name</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(AttCollection) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttCollection</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationName'>XmlCollectionItemName</Value>
								<Value name='FlagAssertSDTProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idXmlNamespace</Id>
							<Name>XML Namespace</Name>
							<Description>XML Namespace</Description>
							<Type>Text</Type>
							<Default></Default>
							<Metadata>
								<Value name='FlagSpecificationName'>XmlNamespace</Value>
								<Value name='FlagAssertSDTProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>soaptype</Id>
							<Name>SoapType</Name>
							<Description>Soap Type</Description>
							<Type>Text</Type>
							<Default></Default>
							<Metadata>
								<Value name='FlagSpecificationName'>soaptype</Value>
								<Value name='FlagAssertSDTProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idXmlInclude</Id>
							<Name>XML Null Serialization</Name>
							<Description>XML Null Serialization</Description>
							<Type>Combo</Type>
							<Values>
								<Value id='idXmlIncludeAlways' desc='Empty Tag'/>
								<Value id='idXmlIncludeNotNull' desc='No Tag'/>
								<Value id='idXmlIncludeAsNil' desc='Nil Tag'/>
							</Values>
							<Metadata>
								<Value name='FlagSpecificationName'>XmlInclude</Value>
								<Value name='FlagAssertSDTProperty'></Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.XmlNullSerializationDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagBuildAction'>RebuildSdts</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idWRAPPEDCOLLECTION</Id>
							<Name>Collection Serialization</Name>
							<Description>Collection Serialization</Description>
							<Type>Combo</Type>
							<Default>idXmlCollectionWrapped</Default>
							<Values>
								<Value id='idXmlCollectionWrapped' desc='Wrapped'/>
								<Value id='idXmlCollectionSequence' desc='Sequence'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(AttCollection) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttCollection</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationName'>CollectionSerialization</Value>
								<Value name='FlagAssertSDTProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idXmlDateSerialization</Id>
							<Name>XML Date Serialization</Name>
							<Description>XML Date Serialization</Description>
							<Type>Combo</Type>
							<Default>idXmlDateDefaultFormat</Default>
							<Values>
								<Value id='idXmlDateDefaultFormat' desc='Date &amp; Time'/>
								<Value id='idXmlDateIncludeTimeZone' desc='Date &amp; Time with Timezone'/>
								<Value id='idXmlDateIncludeTimeZoneAndMillis' desc='Date &amp; Time with Timezone and Milliseconds'/>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(OBJ_DATATYPE) != DT_DATETIME</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>OBJ_DATATYPE</PropName>
											<Value>DT_DATETIME</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationName'>XmlDateSerialization</Value>
								<Value name='FlagAssertSDTProperty'></Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.XmlDateSerializationDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagBuildAction'>RebuildSdts</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>SDTJsonSection</Id>
					<Name>Json Information</Name>
					<Description>Json Information</Description>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>idJsonName</Id>
							<Name>Json Name</Name>
							<Description>Json Name</Description>
							<Type>Text</Type>
							<Default></Default>
							<Metadata>
								<Value name='FlagSpecificationName'>JsonName</Value>
								<Value name='FlagAssertSDTProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idJsonInclude</Id>
							<Name>Json Null Serialization</Name>
							<Description>Select whether a null value should be serialized as empty or not at all.</Description>
							<Type>Combo</Type>
							<Values>
								<Value id='idJsonEmpty' desc='Empty'/>
								<Value id='idJsonNoProperty' desc='No Property'/>
								<Value id='idJsonJsonNull' desc='JSON null'/>
							</Values>
							<Metadata>
								<Value name='FlagSpecificationName'>JsonInclude</Value>
								<Value name='FlagAssertSDTProperty'></Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.JsonNullSerializationDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idWRAPPEDJSONCOLLECTION</Id>
							<Name>Json Collection Serialization</Name>
							<Description>Specify the way collections are serialized</Description>
							<Type>Combo</Type>
							<Default>idXmlCollectionWrapped</Default>
							<Values>
								<Value id='idXmlCollectionWrapped' desc='Wrapped'/>
								<Value id='idXmlCollectionSequence' desc='Sequence'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(AttCollection) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttCollection</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationName'>JsonCollectionSerialization</Value>
								<Value name='FlagAssertSDTProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
</Content>
