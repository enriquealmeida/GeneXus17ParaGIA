<?xml version='1.0' encoding='iso-8859-1'?>
<Content version='148254 $'>
	<Object id='PATTERN'>
		<Group>
			<Name>PATTERN</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>IsMaster</Id>
					<Name>Is Master Panel</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>IsMain</Id>
					<Name>Main program</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(IsMaster) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsMaster</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop>
					<Id>MasterPanel</Id>
					<Name>Master Panel</Name>
					<Description>The Master Panel containing this object</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(IsMaster) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsMaster</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(Prop:IsMaster=true, AllowedType=15CF49B5-FC38-4899-91B5-395D02D79889, AllowedType=9BDCC055-174E-4AF6-96CB-A2CEEF6C5F09, AllowedType=D82625FD-5892-40B0-99C9-5C8559C197FC, UseDesignModel=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>GENERATE_OPEN_API</Id>
					<Name>Generate OpenAPI interface</Name>
					<Description>Generate OpenAPI documentation (default.yaml) for procedures, business components and dataproviders exposed as REST web services.</Description>
					<Type>Combo</Type>
					<Default>UMPV</Default>
					<Values>
						<Value id='Yes' desc='Yes'/>
						<Value id='No' desc='No'/>
						<Value id='UMPV' desc='Use Environment property value'/>
					</Values>
					<Metadata>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>Signatures</Id>
					<Name>Signatures</Name>
					<Type>Text</Type>
					<Default></Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Group>
					<Id>idConnectivitySupportGroup</Id>
					<Name>Network</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(IsMaster) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsMaster</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>idConnectivitySupport</Id>
							<Name>Connectivity Support</Name>
							<Description>Define if this object works even without network connectivity</Description>
							<Type>Combo</Type>
							<Default>idOnline</Default>
							<Values>
								<Value id='idOnline' desc='Online'/>
								<Value id='idOffline' desc='Offline'/>
								<Value id='idInherit' desc='Inherit'/>
							</Values>
							<Dependencies>
								<Depend type='Invalid'>
									<Value>idInherit</Value>
									<Cond>value(IsMain) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsMain</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ConnectivitySupportDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>DeepLinkName</Id>
							<Name>DeepLinkName</Name>
							<Description>String to find before the '?' or at the end if there isn't</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.DeepLinkNameProperty, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelOrDashboardVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>MainObjProps</Id>
					<Name>Main object properties</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(IsMain) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsMain</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>AppTitle</Id>
							<Name>Application Title</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idSDAdditionalyReferences</Id>
							<Name>Additional References</Name>
							<Description>List of objects to add to the reference tree of the main being built.</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReferenceCollection, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=C88FFFCD-B6F8-0000-8FEC-00B5497E2117, AllowedType=15CF49B5-FC38-4899-91B5-395D02D79889, AllowedType=9BDCC055-174E-4AF6-96CB-A2CEEF6C5F09, AllowedType=D82625FD-5892-40B0-99C9-5C8559C197FC, AllowedType=84a12160-f59b-4ad7-a683-ea4481ac23e9, UseDesignModel=true, DeclareReferences=Weak), Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDefaultFrom'>idSDAdditionalyReferences</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idAppShortcuts</Id>
							<Name>Application Shortcuts</Name>
							<Description>Specifies user-initiated actions for the application</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(iosDevices) == idUniversal) or ((value(iosDevices) == idiPhone) or (value(iosDevices) == idiPad))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>iosDevices</PropName>
													<Value>idUniversal</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPhone</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPad</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=9BDCC055-174E-4AF6-96CB-A2CEEF6C5F09, UseDesignModel=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idNotificationSettingsPanel</Id>
							<Name>Notification Settings Panel</Name>
							<Description>Indicates the Panel object to show when the system requests the application to open the Notification Settings.</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=D82625FD-5892-40B0-99C9-5C8559C197FC, UseDesignModel=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idPlatformOverrides</Id>
							<Name>Platform Overrides</Name>
							<Description>Allows to specify particular values for this main Navigation Style, Orientation and Theme different from the default values of the platforms.</Description>
							<Type>Custom</Type>
							<Default></Default>
							<CustomType>Artech.Genexus.Common.CustomTypes.SmartDevicesPlatformOverrides, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='UITypeEditor'>Artech.Patterns.WorkWithDevices.TypeEditors.PlatformOverridesUITypeEditor, Artech.Patterns.WorkWithDevices, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>DefaultLayoutOrientation</Id>
							<Name>Default Layout Orientation</Name>
							<Type>Combo</Type>
							<Default>Default</Default>
							<Values>
								<Value id='Default' desc='Default'/>
								<Value id='Landscape' desc='Landscape'/>
								<Value id='Portrait' desc='Portrait'/>
							</Values>
						</Prop>
						<Prop hidden='1'>
							<Id>AndroidBaseStyle</Id>
							<Name>Android Base Style</Name>
							<Type>Combo</Type>
							<Default>DefautlBaseStyle</Default>
							<Values>
								<Value id='DefautlBaseStyle' desc='Default'/>
								<Value id='AndroidBaseStyleDark' desc='Dark'/>
								<Value id='AndroidBaseStyleLight' desc='Light'/>
								<Value id='AndroidBaseStyleLightWithDarkActionBar' desc='Light with Dark Action Bar'/>
							</Values>
							<Metadata>
								<Value name='FlagDisplayName'>Base Color Scheme</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idEnablePreferredColorScheme</Id>
							<Name>Enable Preferred Color Scheme</Name>
							<Description>Enables light and dark colors schemes on supported platforms</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
						</Prop>
						<Prop hidden='1'>
							<Id>AppEnableAds</Id>
							<Name>Enable Ads</Name>
							<Description>Enable Automatic Advertisements</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DeepLinkBaseURL</Id>
							<Name>DeepLinkBaseURL</Name>
							<Description>Supported base URL for AppLinks, it may be more than one separated by ';', in example it may be the start of the url http://example.com or a custom schema gxapp:</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Deep Link Base URL</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>GoogleCastReceiverAppId</Id>
							<Name>Google Cast Receiver Application Id</Name>
							<Description>The id of the application that runs in the Google Cast receiver device when casting from this app. Setting a value for this property will enable Google Cast support for media playback (audio in background, videos). For testing purposes you can use the default media receiver application id: 'CC1AD845'.</Description>
							<Type>Text</Type>
						</Prop>
						<Prop hidden='1'>
							<Id>idBingMapsKey</Id>
							<Name>Bing Maps Key</Name>
							<Description>Key used to access Bing Maps geolocation services. To get a new key go to bingmapsportal.com</Description>
							<Type>Text</Type>
							<Default>AvHhO1IwVBJa-uYU-SxTaum0bz8eUUxE0JZfyyXl0cmoB4EAbnlPyDYNz53VieGE</Default>
							<Metadata>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>idObfuscateApplication</Id>
							<Name>Obfuscate Application</Name>
							<Description>If true, the application will be shrunk as part of the compilation process, removing unused code and obfuscating remaining methods and classes using short names.</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
						</Prop>
						<Prop hidden='1'>
							<Id>EnableTestMode</Id>
							<Name>Enable Test Mode</Name>
							<Type>Boolean</Type>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>HasAssociatedUITests</Id>
							<Name>Has Associated UI Test</Name>
							<Description>Returns true if the SD main object has any associated UI test</Description>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SDHasAssociatedUITestsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>True</Value>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Group hidden='1'>
							<Id>idHuaweiGroup</Id>
							<Name>Huawei</Name>
							<Type>Group</Type>
							<Metadata>
								<Value name='FlagPlatform'>android</Value>
							</Metadata>
							<Children>
								<Prop hidden='1'>
									<Id>HuaweiPackageName</Id>
									<Name>Huawei Package Name</Name>
									<Description>A full Java-language-style package name for the application. The name should be unique and may contain uppercase or lowercase letters ('A' through 'Z'), numbers, and underscores ('_'). However, individual package name parts may only start with letters. Usually the Internet domain of your company (in reverse) plus the application name, e.g. com.genexus.xxevent.</Description>
									<Type>Text</Type>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AndroidPackageNameDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AndroidPackageNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
									</Metadata>
									<Options>
										<Option type='Not Show'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>UseHuaweiAnalytics</Id>
									<Name>Use Huawei Analytics</Name>
									<Description>Indicates if this application use Analytics when generating for Huawei platform, this will include the necessary library.</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
								</Prop>
								<Prop hidden='1'>
									<Id>UseHuaweiNotifications</Id>
									<Name>Use Huawei Notifications</Name>
									<Description>Indicates if this application use Notifications when generating for Huawei platform, this will include special settings on OneSignal configuration</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
								</Prop>
								<Prop hidden='1'>
									<Id>UseHuaweiInAppBilling</Id>
									<Name>Use Huawei In-App Billing</Name>
									<Description>Indicates if this application use In-App Billing when generating for Huawei platform, this will include the necessary library.</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
								</Prop>
								<Prop hidden='1'>
									<Id>HuaweiInAppPublicKey</Id>
									<Name>Huawei In-App Public Key</Name>
									<Description>Huawei Public Key used in Huawei In-App Billing platform for verifying in-app billing purchases (in Base64).</Description>
									<Type>Text</Type>
									<Default></Default>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>value(UseHuaweiInAppBilling) == false</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UseHuaweiInAppBilling</PropName>
													<Value>false</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TrimPropertyValueAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>UseHuaweiMaps</Id>
									<Name>Use Huawei Maps </Name>
									<Description>Indicates if this application use Huawei Maps provider (MapKit) when generating for Huawei platform</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
								</Prop>
								<Prop hidden='1'>
									<Id>HuaweiServicesApiKey</Id>
									<Name>Huawei Services API Key</Name>
									<Description>Huawei Services API Key used in Huawei Services (i.e. MapKit).</Description>
									<Type>Text</Type>
									<Default></Default>
									<Metadata>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TrimPropertyValueAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>HuaweiServicesFile</Id>
									<Name>Huawei Services File</Name>
									<Description>Set File downloaded after configuring the settings in the Huawei console. This must be a File in the Knowledgebase</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=1132AC08-290F-4fd1-BD18-64777B7329D1),Artech.Architecture.Common</Value>
										<Value name='FlagCopyFileTo'></Value>
										<Value name='FlagCopyFileName'>agconnect-services.json</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Group hidden='1'>
							<Id>idWebFrontendGroup</Id>
							<Name>Web Frontend</Name>
							<Type>Group</Type>
							<Children>
								<Prop hidden='1'>
									<Id>idAPPWebFrontendVersionCode</Id>
									<Name>Web Frontend Version Code</Name>
									<Description>A value that represents the version of the application code, relative to other versions</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Metadata>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.VersionCodeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>idAPPWebFrontendVersionName</Id>
									<Name>Web Frontend Version Name</Name>
									<Description>A string value that represents the release version of the application code, as it should be shown to users.</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Metadata>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
							</Children>
						</Group>
						<Group hidden='1'>
							<Id>idandroidGroup</Id>
							<Name>Android</Name>
							<Type>Group</Type>
							<Metadata>
								<Value name='FlagPlatform'>android</Value>
							</Metadata>
							<Children>
								<Prop hidden='1'>
									<Id>idAPPAndroidVersionCode</Id>
									<Name>Android Version Code</Name>
									<Description>A value that represents the version of the application code, relative to other versions</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Metadata>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.VersionCodeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>idAPPAndroidVersionName</Id>
									<Name>Android Version Name</Name>
									<Description>A string value that represents the release version of the application code, as it should be shown to users.</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Metadata>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidVersionUri</Id>
									<Name>Update URL</Name>
									<Description>URL of the Store page where the Application is published (e.g. https://play.google.com/store/apps/details?id=&lt;package_name&gt;), or a link to where the APK itself is deployed.</Description>
									<Type>Text</Type>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidPackageName</Id>
									<Name>Android Package Name</Name>
									<Description>A full Java-language-style package name for the application. The name should be unique and may contain uppercase or lowercase letters ('A' through 'Z'), numbers, and underscores ('_'). However, individual package name parts may only start with letters. Usually the Internet domain of your company (in reverse) plus the application name, e.g. com.genexus.xxevent.</Description>
									<Type>Text</Type>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AndroidPackageNameDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AndroidPackageNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidAppIcon</Id>
									<Name>Android Application Icon</Name>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagImageSize'>48x48</Value>
										<Value name='FlagImageName'>appicon</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidNotificationIcon</Id>
									<Name>Android Notification Icon</Name>
									<Description>Image displayed in the status bar for application notifications. Should be a flat 24x24 dp image, entirely white.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagImageSize'>24x24</Value>
										<Value name='FlagImageName'>gx_notification_icon</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidAppWelcomeImage</Id>
									<Name>Android Portrait Launch Image</Name>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagImageName'>appwelcomedefault</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidAppWelcomeImageLandscape</Id>
									<Name>Android Landscape Launch Image</Name>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagImageName'>appwelcomedefaultlandscape</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AdMobPublisherId</Id>
									<Name>AdMob Unit Id</Name>
									<Type>Text</Type>
									<Options>
										<Option type='Not Show'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>idAndroidMapsApi</Id>
									<Name>Android Maps API</Name>
									<Description>API used to display SD Maps controls in Android.</Description>
									<Type>Combo</Type>
									<Default>MAPS_GOOGLE_V2</Default>
									<Values>
									</Values>
									<Metadata>
										<Value name='TypeConverter'>Artech.Genexus.Common.Converters.MapsServiceTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDefaultFrom'>idAndroidMapsApi</Value>
										<Value name='ServiceDirectory'>Maps</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>idAndroidMapsApiKey</Id>
									<Name>Android Maps API Key</Name>
									<Description>API Key for Android Maps. Depending on the selected API, may have to be generated from a fingerprint of the certificate used for signing, and from the application's package name.</Description>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Not Show'/>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDefaultFrom'>idAndroidMapsApiKey</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidYoutubeAPIKey</Id>
									<Name>Android Google Services API Key</Name>
									<Description>API Key for all google services, i.e. Maps, Youtube. Depending on the services you use, it may have to be generated from a fingerprint of the certificate used for signing, and from the application's package name.</Description>
									<Type>Text</Type>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDefaultFrom'>idAndroidMapsApiKey</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>UseProximityAlerts</Id>
									<Name>Use Proximity Alerts</Name>
									<Description>Set to true if you use Proximity Alerts in the application.</Description>
									<Type>Boolean</Type>
								</Prop>
								<Prop hidden='1'>
									<Id>UsePdfReports</Id>
									<Name>Use Pdf Reports</Name>
									<Description>Enables/disables the usage of Pdf reports in the application.</Description>
									<Type>Boolean</Type>
									<Metadata>
										<Value name='FlagDisplayName'>Use PDF Reports</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>UseGeographyDataTypes</Id>
									<Name>Use Geography Data Types</Name>
									<Description>Indicates whether Geography Data Types are used in your mobile application (to include the necessary library).</Description>
									<Type>Boolean</Type>
									<Metadata>
										<Value name='FlagDisplayName'>Use Geography Data Types</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>UseBackgroundLocation</Id>
									<Name>Use Background Location</Name>
									<Description>Indicates whether Background Location are used in your application (to include the necessary permission: ACCESS_BACKGROUND_LOCATION).</Description>
									<Type>Boolean</Type>
									<Metadata>
										<Value name='FlagDisplayName'>Use Background Location</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>InformationOnRequests</Id>
									<Name>Include Network Id in Client Information</Name>
									<Type>Boolean</Type>
									<Options>
										<Option type='Not Show'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>CompilationMode</Id>
									<Name>Compilation Mode</Name>
									<Type>Combo</Type>
									<Default>COMPILATION_MODE_DEVELOPMENT</Default>
									<Values>
										<Value id='COMPILATION_MODE_DEVELOPMENT' desc='Development'/>
										<Value id='COMPILATION_MODE_DISTRIBUTION' desc='Distribution'/>
									</Values>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDefaultFrom'>CompilationMode</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AndroidMultidexBuild</Id>
									<Name>Multidex Build</Name>
									<Type>Boolean</Type>
									<Default>true</Default>
									<Metadata>
										<Value name='FlagExport'>true</Value>
										<Value name='FlagDisplayName'>Multidex Build</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AppBundleOutput</Id>
									<Name>Publishing Format</Name>
									<Description>Indicates whether the output file is generated as .aab or .apk</Description>
									<Type>Combo</Type>
									<Default>OUTPUT_FORMAT_AAB</Default>
									<Values>
										<Value id='OUTPUT_FORMAT_AAB' desc='Android App Bundle (.aab)'/>
										<Value id='OUTPUT_FORMAT_APK' desc='Legacy (.apk)'/>
									</Values>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>value(CompilationMode) == COMPILATION_MODE_DEVELOPMENT</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>CompilationMode</PropName>
													<Value>COMPILATION_MODE_DEVELOPMENT</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagExport'>true</Value>
										<Value name='FlagDisplayName'>Publishing Format</Value>
									</Metadata>
								</Prop>
								<Group hidden='1'>
									<Id>KEYSTORE_GROUP</Id>
									<Name>Application Signing</Name>
									<Type>Group</Type>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>value(CompilationMode) == COMPILATION_MODE_DEVELOPMENT</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>CompilationMode</PropName>
													<Value>COMPILATION_MODE_DEVELOPMENT</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Children>
										<Prop hidden='1'>
											<Id>KEYSTORE_FILE</Id>
											<Name>Key Store File</Name>
											<Description>File required for signing Android applications. A debug certificate will be used if left empty. Note that you should apply your own key before releasing the application.</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.FileType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagExport'>false</Value>
												<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.FileExistValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
												<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
												<Value name='FlagDefaultFrom'>KEYSTORE_FILE</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>idKeyAlias</Id>
											<Name>Key Alias</Name>
											<Description>Alias for the key. Only the first 8 characters are used.</Description>
											<Type>Text</Type>
											<Metadata>
												<Value name='FlagExport'>false</Value>
												<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AllowEmptyButNotWhiteSpacesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
												<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
												<Value name='FlagDefaultFrom'>idKeyAlias</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>KEYSTORE_PASSWORD</Id>
											<Name>Store Password</Name>
											<Description>Password for the keystore.</Description>
											<Type>Text</Type>
											<Metadata>
												<Value name='FlagExport'>false</Value>
												<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
												<Value name='FlagDefaultFrom'>KEYSTORE_PASSWORD</Value>
											</Metadata>
											<Options>
												<Option type='Password'/>
											</Options>
										</Prop>
										<Prop hidden='1'>
											<Id>KEY_PASSWORD</Id>
											<Name>Key Password</Name>
											<Description>Password for the key (identified by the alias).</Description>
											<Type>Text</Type>
											<Metadata>
												<Value name='FlagExport'>false</Value>
												<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
												<Value name='FlagDefaultFrom'>KEY_PASSWORD</Value>
											</Metadata>
											<Options>
												<Option type='Password'/>
											</Options>
										</Prop>
									</Children>
								</Group>
							</Children>
						</Group>
						<Group hidden='1'>
							<Id>iOSGroup</Id>
							<Name>Apple</Name>
							<Type>Group</Type>
							<Metadata>
								<Value name='FlagPlatform'>ios</Value>
							</Metadata>
							<Children>
								<Prop hidden='1'>
									<Id>idiosAPPVersionCode</Id>
									<Name>iOS Version Code</Name>
									<Description>A value that represents the build version of the application code, which identifies an iteration (released or unreleased). The build version number should be a string comprised of three non-negative, period-separated integers with the first integer being greater than zero. If the value of the third number is 0, you can omit it and the second period.</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) != idWatch</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>iosDevices</PropName>
													<Value>idWatch</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.VersionCodeWithOptionalThirdDigitValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
										<Value name='FlagDisplayName'>Apple Version Code</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>idiosAPPVersionName</Id>
									<Name>iOS Version Name</Name>
									<Description>A string value that represents the release version of the application code, as it should be shown to users. The version number is a string composed of three period-separated non negative integers. The first integer represents major revision to the app, such as a revision that implements new features or major changes. The second integer denotes a revision that implements less prominent features. The third integer represents a maintenance release revision. If the value of the third number is 0, you can omit it and the second period.</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) != idWatch</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>iosDevices</PropName>
													<Value>idWatch</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.VersionCodeWithOptionalThirdDigitValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDisplayName'>Apple Version Name</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSVersionUri</Id>
									<Name>App Store URL</Name>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) != idWatch</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>iosDevices</PropName>
													<Value>idWatch</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSBundleIdentifier</Id>
									<Name>iOS Bundle Identifier</Name>
									<Description>An identifier string that specifies the application type of the bundle. The string should be in reverse DNS format using only the Roman alphabet in upper and lower case (A-Z, a-z), numbers (0-9), the dot ('.'), and the hyphen ('-')</Description>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) != idWatch</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>iosDevices</PropName>
													<Value>idWatch</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.BundleIdentifierValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BundleIdentifierDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
										<Value name='FlagDisplayName'>Apple Bundle Identifier</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSDevelopmentTeam</Id>
									<Name>Development Team ID</Name>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) != idWatch</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>iosDevices</PropName>
													<Value>idWatch</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagDisplayName'>Development Team ID</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DevelopmentTeamIdValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iosDevices</Id>
									<Name>Devices</Name>
									<Description>Targeted device family</Description>
									<Type>Combo</Type>
									<Default>idUniversal</Default>
									<Values>
										<Value id='idiPad' desc='iPad'/>
										<Value id='idiPhone' desc='iPhone'/>
										<Value id='idUniversal' desc='iPhone &amp; iPad'/>
										<Value id='idTV' desc='Apple TV'/>
										<Value id='idWatch' desc='Apple Watch'/>
									</Values>
								</Prop>
								<Prop hidden='1'>
									<Id>idIOS_REQUIRED_XCODE_VERSION</Id>
									<Name>Required Xcode version</Name>
									<Description>The Xcode version to use when compiling applications</Description>
									<Type>Text</Type>
									<Metadata>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.OneDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.RequiredXcodeVersionValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>idIOS_MINIMUM_DEPLOYMENT_TARGET</Id>
									<Name>iOS Deployment Target</Name>
									<Description>The minimum iOS deployment target to use when generating the Xcode project</Description>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(value(iosDevices) == idiPhone) or ((value(iosDevices) == idiPad) or (value(iosDevices) == idUniversal))</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPhone</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>iosDevices</PropName>
																	<Value>idiPad</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>iosDevices</PropName>
																	<Value>idUniversal</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDefaultFrom'>idIOS_MINIMUM_DEPLOYMENT_TARGET</Value>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TwoDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AppleMinimumDeploymentTargetValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>idtvOS_MINIMUM_DEPLOYMENT_TARGET</Id>
									<Name>tvOS Deployment Target</Name>
									<Description>The minimum tvOS deployment target to use when generating the Xcode project</Description>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) == idTV</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>iosDevices</PropName>
													<Value>idTV</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDefaultFrom'>idtvOS_MINIMUM_DEPLOYMENT_TARGET</Value>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TwoDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AppleMinimumDeploymentTargetValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>idWATCHOS_MINIMUM_DEPLOYMENT_TARGET</Id>
									<Name>watchOS Deployment Target</Name>
									<Description>The minimum watchOS deployment target to use when generating the Xcode project</Description>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) == idWatch</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>iosDevices</PropName>
													<Value>idWatch</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FromSDGeneratorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagDefaultFrom'>idWATCHOS_MINIMUM_DEPLOYMENT_TARGET</Value>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TwoDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AppleMinimumDeploymentTargetValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iosWatch</Id>
									<Name>Watch Main</Name>
									<Description>Main of the watch application</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(value(iosDevices) == idiPhone) or (value(iosDevices) == idUniversal)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPhone</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idUniversal</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=15CF49B5-FC38-4899-91B5-395D02D79889, AllowedType=9BDCC055-174E-4AF6-96CB-A2CEEF6C5F09, AllowedType=D82625FD-5892-40B0-99C9-5C8559C197FC, UseDesignModel=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSAppIcon</Id>
									<Name>iOS Application Icon</Name>
									<Description>Apple application icon. It requires several image sizes for all the different devices.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagImageScaleList'>2x,                 3x,               1x,          2x,           2x,           1x,              1x,          2x,            3x,               1x,             2x,                3x,                 1x,            2x,                   3x,                      2x,                             2x,                             2x,                 3x,                 2x,                2x,                2x,                2x,                    2x,                    2x,                    1x,              1x,            2x,               1x,                    </Value>
										<Value name='FlagImageUseList'>iPhone Retina,      iPhone Retina HD, iPad,        iPad Retina,  iPad Pro,     iOS App Store,   Search,      Search Retina, Search Retina HD, Settings,       Settings Retina,   Settings Retina HD, Notifications, Notifications Retina, Notifications Retina HD, Watch 38mm Notification Center, Watch 42mm Notification Center, Watch Companion 2x, Watch Companion 3x, Watch AppLauncher, Watch AppLauncher, Watch AppLauncher, Watch 38mm Short-Look, Watch 42mm Short-Look, Watch 44mm Short-Look, Watch App Store, Apple TV,      Apple TV 4K,      Apple TV App Store,    </Value>
										<Value name='FlagImageSizeList'>120x120,            180x180,          76x76,       152x152,      167x167,      1024x1024,       40x40,       80x80,         120x120,          29x29,          58x58,             87x87,              20x20,         40x40,                60x60,                   48x48,                          55x55,                          58x58,              87x87,              80x80,             88x88,             100x100,           172x172,               196x196,               216x216,               1024x1024,       400x240,       800x480,          1280x768,              </Value>
										<Value name='FlagImageNameList'>Icon-120.png,       Icon-180.png,     Icon-76.png, Icon-152.png, Icon-167.png, Icon-1024.png,   Icon-40.png, Icon-80.png,   Icon-120.png,     Icon-Small.png, Icon-Small@2x.png, Icon-Small@3x.png,  Icon-20.png,   Icon-40.png,          Icon-60.png,             Icon-48w@2x.png,                Icon-55w@2x.png,                Icon-58w@2x.png,    Icon-87w@3x.png,    Icon-80w@2x.png,   Icon-88w@2x.png,   Icon-100w@2x.png,  Icon-172w@2x.png,      Icon-196w@2x.png,      Icon-216w@2x.png,      Icon-1024.png,   Icon-tvOS.png, Icon-tvOS@2x.png, Icon-tvOSAppStore.png, </Value>
										<Value name='FlagImageRequiredList'>iPhone,             iPhone,           iPad,        iPad,         iPad,         iOS App Store,   Search,      Search,        Search,           Settings,       Settings,          Settings,           Notifications, Notifications,        Notifications,           Watch,                          Watch,                          Watch,              Watch,              Watch,             Watch,             Watch,             Watch,                 Watch,                 Watch,                 Watch App Store, Apple TV,      Apple TV,         Apple TV App Store,    </Value>
										<Value name='FlagImageSubtypeList'>,                   ,                 ,            ,             ,             ,                ,            ,              ,                 ,               ,                  ,                   ,              ,                     ,                        38mm,                           42mm,                           ,                   ,                   38mm,              40mm,              44mm,              38mm,                  42mm,                  44mm,                  ,                ,              ,                 ,                      </Value>
										<Value name='FlagImageRoleList'>,                   ,                 ,            ,             ,             ,                ,            ,              ,                 ,               ,                  ,                   ,              ,                     ,                        notificationCenter,             notificationCenter,             companionSettings,  companionSettings,  appLauncher,       appLauncher,       appLauncher,       quickLook,             quickLook,             quickLook,             ,                ,              ,                 ,                      </Value>
										<Value name='FlagImageUseSuffix'> Application Icon</Value>
										<Value name='FlagDisplayName'>Apple Application Icon</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>tvOSTopShelfImage</Id>
									<Name>Apple TV Top Shelf Image</Name>
									<Description>Static Apple TV Top Shelf Image. It is displayed when your app is in the Dock and in focus.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) == idTV</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>iosDevices</PropName>
													<Value>idTV</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagImageScaleList'>1x,                     2x</Value>
										<Value name='FlagImageUseList'>Apple TV,               Apple TV 4K</Value>
										<Value name='FlagImageSizeList'>1920x720,               3840x1440</Value>
										<Value name='FlagImageNameList'>TopShelfImage-tvOS.png, TopShelfImage-tvOS@2x.png</Value>
										<Value name='FlagImageRequiredList'>Apple TV,               Apple TV</Value>
										<Value name='FlagImageUseSuffix'> Top Shelf Image</Value>
										<Value name='FlagBuildAction'>BuildMainObject</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>tvOSTopShelfWideImage</Id>
									<Name>Apple TV Top Shelf Wide Image</Name>
									<Description>Static Apple TV Top Shelf Wide Image. It is displayed when your app is in the Dock and in focus.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) == idTV</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>iosDevices</PropName>
													<Value>idTV</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagImageScaleList'>1x,                         2x</Value>
										<Value name='FlagImageUseList'>Apple TV,                   Apple TV 4K</Value>
										<Value name='FlagImageSizeList'>2320x720,                   4640x1440</Value>
										<Value name='FlagImageNameList'>TopShelfImageWide-tvOS.png, TopShelfImageWide-tvOS@2x.png</Value>
										<Value name='FlagImageRequiredList'>Apple TV,                   Apple TV</Value>
										<Value name='FlagImageUseSuffix'> Top Shelf Wide Image</Value>
										<Value name='FlagBuildAction'>BuildMainObject</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AppleLaunchScreenStoryboard</Id>
									<Name>Apple Launch Screen</Name>
									<Description>Apple custom launch screen interface file (.storyboard). It is automatically generated if empty.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.FileType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagDisplayName'>Apple Launch Screen</Value>
										<Value name='CustomAttribute'>Artech.Genexus.Common.CustomTypes.FileTypeFilterAttribute(Filter=Storyboard files (*.storyboard)|*.storyboard), Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.SaveFileInKbAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='CustomAttribute'>Artech.Genexus.Common.Resolvers.Handlers.SaveFileInKbAfterSetHandlerSettingsAttribute(), Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeToMetadata'>false</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSLaunchImage</Id>
									<Name>iOS Launch Image</Name>
									<Description>Apple Launch Image. It requires several image sizes for all the different devices.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(iosDevices) != idWatch</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>iosDevices</PropName>
													<Value>idWatch</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagImageScaleList'>2x,                    2x,                       2x,                          3x,                                 3x,                                3x,                                   3x,                                    3x,                                   3x,                                    2x,                                    2x,                                     1x,                         2x,                            2x,                            2x,                            2x,                          1x,                        2x,                           2x,                           2x,                           2x,                         </Value>
										<Value name='FlagImageUseList'>iPhone 3.5inch Retina, iPhone 4inch Retina,      iPhone 4.7inch Retina,       iPhone 5.5inch Retina HD Landscape, iPhone 5.5inch Retina HD Portrait, iPhone 5.8inch Super Retina Portrait, iPhone 5.8inch Super Retina Landscape, iPhone 6.5inch Super Retina Portrait, iPhone 6.5inch Super Retina Landscape, iPhone 6.1inch Liquid Retina Portrait, iPhone 6.5inch Liquid Retina Landscape, iPad Landscape,             iPad Retina Landscape,         iPad Pro 10.5inch Landscape,   iPad Pro 12.9inch Landscape,   iPad Pro 11inch Landscape,   iPad Portrait,             iPad Retina Portrait,         iPad Pro 10.5inch Portrait,   iPad Pro 12.9inch Portrait,   iPad Pro 11inch Portrait,   </Value>
										<Value name='FlagImageSizeList'>640x960,               640x1136,                 750x1334,                    2208x1242,                          1242x2208,                         1125x2436,                            2436x1125,                             1242x2688,                            2688x1242,                             828x1792,                              1792x828,                               1024x768,                   2048x1536,                     1668x2224,                     2048x2732,                     1668x2388,                   768x1024,                  1536x2048,                    2224x1668,                    2732x2048,                    2388x1668,                  </Value>
										<Value name='FlagImageNameList'>Default_iOS7@2x.png,   Default_iOS7-568h@2x.png, Default-Portrait-4_7@2x.png, Default-Landscape-5_5@3x.png,       Default-Portrait-5_5@3x.png,       Default-Portrait-5_8@3x.png,          Default-Landscape-5_8@3x.png,          Default-Portrait-6_5@3x.png,          Default-Landscape-6_5@3x.png,          Default-Portrait-6_1@2x.png,           Default-Landscape-6_1@2x.png,           Default_iOS7-Landscape.png, Default_iOS7-Landscape@2x.png, Default-Landscape-10_5@2x.png, Default-Landscape-12_9@2x.png, Default-Landscape-11@2x.png, Default_iOS7-Portrait.png, Default_iOS7-Portrait@2x.png, Default-Portrait-10_5@2x.png, Default-Portrait-12_9@2x.png, Default-Portrait-11@2x.png, </Value>
										<Value name='FlagImageRequiredList'>iPhone,                iPhone,                   iPhone,                      iPhone,                             iPhone,                            iPhone,                               iPhone,                                iPhone,                               iPhone,                                iPhone,                                iPhone,                                 iPad,                       iPad,                          iPad,                          iPad,                          iPad,                        iPad,                      iPad,                         iPad,                         iPad,                         iPad,                       </Value>
										<Value name='FlagImageOSVersionList'>7.0,                   7.0,                      8.0,                         8.0,                                8.0,                               11.0,                                 11.0,                                  12.0,                                 12.0,                                  12.0,                                  12.0,                                   7.0,                        7.0,                           10.3.2,                        10.3.2,                        12.1,                        7.0,                       7.0,                          10.3.2,                       10.3.2,                       12.1,                       </Value>
										<Value name='FlagImageSubtypeList'>,                      retina4,                  667h,                        736h,                               736h,                              2436h,                                2436h,                                 2688h,                                2688h,                                 1792h,                                 1792h,                                  ,                           ,                              ,                              ,                              ,                            ,                          ,                             ,                             ,                             ,                           </Value>
										<Value name='FlagImageUseSuffix'> Launch Image</Value>
										<Value name='FlagDisplayName'>Apple Launch Image (Deprecated)</Value>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSBackImage</Id>
									<Name>Empty Target Background Image</Name>
									<Description>Empty Target Background Image. It requires several image sizes for all the different devices.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(value(iosDevices) == idPhone) or ((value(iosDevices) == idPad) or (value(iosDevices) == idUniversal))</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idPhone</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>iosDevices</PropName>
																	<Value>idPad</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>iosDevices</PropName>
																	<Value>idUniversal</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagImageScaleList'>1x,                       2x,                          1x,                      2x,                         </Value>
										<Value name='FlagImageSizeList'>703x704,                  1406x1408,                   768x960,                 1536x1920,                  </Value>
										<Value name='FlagImageNameList'>Background-Landscape.png, Background-Landscape@2x.png, Background-Portrait.png, Background-Portrait@2x.png, </Value>
										<Value name='FlagImageRequiredList'>SplitLandscape,           SplitLandscape,              SplitPortrait,           SplitPortrait,              </Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AppleMapsApi</Id>
									<Name>Apple Maps API</Name>
									<Description>API used to display Maps in iOS.</Description>
									<Type>Combo</Type>
									<Default>MAPS_APPLE</Default>
									<Values>
										<Value id='MAPS_APPLE' desc='Apple Maps'/>
									</Values>
									<Metadata>
										<Value name='TypeConverter'>Artech.Genexus.Common.Converters.MapsAppleServiceTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='ServiceDirectory'>MapsApple</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>AppleMapsApiKey</Id>
									<Name>Apple Maps API Key</Name>
									<Description>API Key for Maps for Apple. Depending on the selected API, may have to be generated from the application's Bundle Identifier.</Description>
									<Type>Text</Type>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>value(AppleMapsApi) == MAPS_APPLE</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AppleMapsApi</PropName>
													<Value>MAPS_APPLE</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
								</Prop>
								<Group hidden='1'>
									<Id>iOSAppIconGroup</Id>
									<Name>Application Icons (Deprecated)</Name>
									<Type>Group</Type>
									<Children>
										<Prop hidden='1'>
											<Id>AppIcon</Id>
											<Name>iPhone Application Icon</Name>
											<Description>iPhone application icon. Size (57 * 57), iOS7 (not supported)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPad</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPad</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>57x57</Value>
												<Value name='FlagDisplayName'>iPhone Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_IPhone4</Id>
											<Name>iPhone Retina Application Icon</Name>
											<Description>iPhone Retina application icon. Size (114 * 114), iOS7 (120 * 120)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPad</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPad</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>114x114</Value>
												<Value name='FlagImageSize7'>120x120</Value>
												<Value name='FlagImageName7'>Icon-120.png</Value>
												<Value name='FlagDisplayName'>iPhone Retina Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_IPad</Id>
											<Name>iPad Application Icon</Name>
											<Description>iPad application icon. Size (72 * 72), iOS7 (76 * 76)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>72x72</Value>
												<Value name='FlagImageSize7'>76x76</Value>
												<Value name='FlagImageName7'>Icon-76.png</Value>
												<Value name='FlagDisplayName'>iPad Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_IPad3</Id>
											<Name>iPad Retina Application Icon</Name>
											<Description>iPad Retina application icon. Size (144 * 144), iOS7 (152 * 152)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>144x144</Value>
												<Value name='FlagImageSize7'>152x152</Value>
												<Value name='FlagImageName7'>Icon-152.png</Value>
												<Value name='FlagDisplayName'>iPad Retina Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_ITunes</Id>
											<Name>iTunes Application Icon</Name>
											<Description>iTunes App Store application icon. Size (512 * 512)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>512x512</Value>
												<Value name='FlagImageName'>ipaImage.png</Value>
												<Value name='FlagDisplayName'>iTunes Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_ITunes_2x</Id>
											<Name>iTunes Retina Application Icon</Name>
											<Description>iTunes App Store Retina application icon. Size (1024 * 1024)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>1024x1024</Value>
												<Value name='FlagImageName'>ipaImage@2x.png</Value>
												<Value name='FlagDisplayName'>iTunes Retina Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_SearchResults</Id>
											<Name>Search Results Application Icon</Name>
											<Description>Search Results application icon. Size (40 * 40). Optional</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>40x40</Value>
												<Value name='FlagImageName'>Icon-40.png</Value>
												<Value name='FlagDisplayName'>Search Results Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_SearchResults_2x</Id>
											<Name>Search Results Retina Application Icon</Name>
											<Description>Search Results Retina application icon. Size (80 * 80). Optional</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>80x80</Value>
												<Value name='FlagImageName'>Icon-80.png</Value>
												<Value name='FlagDisplayName'>Search Results Retina Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_Settings</Id>
											<Name>Settings Application Icon</Name>
											<Description>Settings application icon. Size (29 * 29). Optional</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>29x29</Value>
												<Value name='FlagImageName'>Icon-Small.png</Value>
												<Value name='FlagDisplayName'>Settings Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppIcon_Settings_2x</Id>
											<Name>Settings Retina Application Icon</Name>
											<Description>Settings Retina application icon. Size (58 * 58). Optional</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>58x58</Value>
												<Value name='FlagImageName'>Icon-Small@2x.png</Value>
												<Value name='FlagDisplayName'>Settings Retina Application Icon</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
									</Children>
								</Group>
								<Group hidden='1'>
									<Id>iOSAppLaunchGroup</Id>
									<Name>Application Launch Images (Deprecated)</Name>
									<Type>Group</Type>
									<Children>
										<Prop hidden='1'>
											<Id>AppWelcomeImage</Id>
											<Name>iPhone Launch Image</Name>
											<Description>iPhone launch image. Size: 320 (w) * 480 (h), iOS7 (not supported)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPad</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPad</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>320x480</Value>
												<Value name='FlagDisplayName'>iPhone Launch Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppWelcomeImageIphone4</Id>
											<Name>iPhone Retina Launch Image</Name>
											<Description>iPhone Retina launch image. Size: 640 (w) * 960 (h), iOS7 (same)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPad</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPad</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>640x960</Value>
												<Value name='FlagImageSize7'>640x960</Value>
												<Value name='FlagImageName7'>Default_iOS7@2x.png</Value>
												<Value name='FlagDisplayName'>iPhone Retina Launch Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppWelcomeImageIphone5</Id>
											<Name>iPhone 5 Retina Launch Image</Name>
											<Description>iPhone 4inch Retina launch image. Size: 640 (w) * 1136 (h), iOS7 (same)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPad</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPad</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>640x1136</Value>
												<Value name='FlagImageSize7'>640x1136</Value>
												<Value name='FlagImageName7'>Default_iOS7-568h@2x.png</Value>
												<Value name='FlagDisplayName'>iPhone 4inch Retina Launch Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppWelcomeImage_IPad_Landscape</Id>
											<Name>iPad Landscape Launch Image</Name>
											<Description>iPad launch image for landscape. Size: 1024 (w) * 748 (h), iOS7: 1024 (w) * 768 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPhone</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPhone</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>1024x748</Value>
												<Value name='FlagImageSize7'>1024x768</Value>
												<Value name='FlagImageName7'>Default_iOS7-Landscape.png</Value>
												<Value name='FlagDisplayName'>iPad Landscape Launch Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppWelcomeImage_IPad3_Landscape</Id>
											<Name>iPad Retina Landscape Launch Image</Name>
											<Description>iPad Retina launch image for landscape. Size: 2048 (w) * 1496 (h), iOS7: 2048 (w) * 1536 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPhone</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPhone</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>2048x1496</Value>
												<Value name='FlagImageSize7'>2048x1536</Value>
												<Value name='FlagImageName7'>Default_iOS7-Landscape@2x.png</Value>
												<Value name='FlagDisplayName'>iPad Retina Landscape Launch Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppWelcomeImage_IPad_Portrait</Id>
											<Name>iPad Portrait Launch Image</Name>
											<Description>iPad launch image for portrait. Size: 768 (w) * 1004 (h), iOS7: 768 (w) * 1024 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPhone</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPhone</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>768x1004</Value>
												<Value name='FlagImageSize7'>768x1024</Value>
												<Value name='FlagImageName7'>Default_iOS7-Portrait.png</Value>
												<Value name='FlagDisplayName'>iPad Portrait Launch Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppWelcomeImage_IPad3_Portrait</Id>
											<Name>iPad Retina Portrait Launch Image</Name>
											<Description>iPad Retina launch image for portrait. Size: 1536 (w) * 2008 (h), iOS7: 1536 (w) * 2048 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(iosDevices) == idiPhone</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>iosDevices</PropName>
															<Value>idiPhone</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>1536x2008</Value>
												<Value name='FlagImageSize7'>1536x2048</Value>
												<Value name='FlagImageName7'>Default_iOS7-Portrait@2x.png</Value>
												<Value name='FlagDisplayName'>iPad Retina Portrait Launch Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
									</Children>
								</Group>
								<Group hidden='1'>
									<Id>iPadSplitBackgroundGroup</Id>
									<Name>Split Mode Background Images (Deprecated)</Name>
									<Type>Group</Type>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>value(iosDevices) == idiPhone</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>iosDevices</PropName>
													<Value>idiPhone</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Children>
										<Prop hidden='1'>
											<Id>AppBackgroundImage</Id>
											<Name>iPad Landscape Background Image</Name>
											<Description>iPad background image landscape. Size: 703 (w) * 704 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>703x704</Value>
												<Value name='FlagImageName'>Background-Landscape.png</Value>
												<Value name='FlagDisplayName'>iPad Landscape Background Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>idBACKIMAGE_2x</Id>
											<Name>iPad Retina Landscape Background Image</Name>
											<Description>iPad Retina background image landscape. Size: 1406 (w) * 1408 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>1406x1408</Value>
												<Value name='FlagImageName'>Background-Landscape@2x.png</Value>
												<Value name='FlagDisplayName'>iPad Retina Landscape Background Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppBackgroundImage_portrait</Id>
											<Name>iPad Portrait Background Image</Name>
											<Description>iPad background image portrait. Size: 768 (w) * 960 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>768x960</Value>
												<Value name='FlagImageName'>Background-Portrait.png</Value>
												<Value name='FlagDisplayName'>iPad Portrait Background Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>AppBackgroundImage_portrait_2x</Id>
											<Name>iPad Retina Portrait Background Image</Name>
											<Description>iPad Retina background image portrait. Size: 1536 (w) * 1920 (h)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>1536x1920</Value>
												<Value name='FlagImageName'>Background-Portrait@2x.png</Value>
												<Value name='FlagDisplayName'>iPad Retina Portrait Background Image</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.NotShownWhenDefaultVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
									</Children>
								</Group>
								<Group hidden='1'>
									<Id>iOSPermissions</Id>
									<Name>Permissions</Name>
									<Type>Group</Type>
									<Children>
										<Group hidden='1'>
											<Id>iOSPurposeStrings</Id>
											<Name>Purpose Strings</Name>
											<Type>Group</Type>
											<Children>
												<Prop hidden='1'>
													<Id>iOSAppleMusicUsageDescription</Id>
													<Name>Apple Music Usage Description</Name>
													<Description>Specifies the reason for your app to use the media library.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSBluetoothPeripheralUsageDescription</Id>
													<Name>Bluetooth Peripheral Usage Description</Name>
													<Description>Specifies the reason for your app to use Bluetooth.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSCalendarsUsageDescription</Id>
													<Name>Calendars Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's calendars.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSCameraUsageDescription</Id>
													<Name>Camera Usage Description</Name>
													<Description>Specifies the reason for your app to access the device's camera.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSContactsUsageDescription</Id>
													<Name>Contacts Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's contacts.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSFaceIDUsageDescription</Id>
													<Name>Face ID Usage Description</Name>
													<Description>Specifies the reason for your app to use Face ID.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSHealthShareUsageDescription</Id>
													<Name>Health Share Usage Description</Name>
													<Description>Specifies the reason for your app to read the user's health data.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSHealthUpdateUsageDescription</Id>
													<Name>Health Update Usage Description</Name>
													<Description>Specifies the reason for your app to make changes to the user's health data.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSHomeKitUsageDescription</Id>
													<Name>HomeKit Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's HomeKit configuration data.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSLocalNetworkUsageDescription</Id>
													<Name>Local Network Usage Description</Name>
													<Description>Specifies the reason for your app to access to the local network.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSLocationAlwaysUsage</Id>
													<Name>Location Always Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's location information at all times. Used up to iOS 10, since iOS 11 Always And When In Use usage description is used instead.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSLocationAlwaysAndWhenInUseUsage</Id>
													<Name>Location Always And When In Use Usage Description</Name>
													<Description>Specifies the reasons for your app to access the user's location information in both levels, at all times, or while your app is in use, giving the user options to choose. Used since iOS 11 instead of Always usage description. Note When In Use usage description is also required when specifing this usage description.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSLocationWhenInUseUsage</Id>
													<Name>Location When In Use Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's location information while your app is in use.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSTemporaryFullAccuracyUsages</Id>
													<Name>Location Temporary Usage Descriptions</Name>
													<Description>Comma-separated list of strings that represent the purpose keys for your app to access the user's precise location information.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSMicrophoneUsageDescription</Id>
													<Name>Microphone Usage Description</Name>
													<Description>Specifies the reason for your app to access any of the device's microphones.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSMotionUsageDescription</Id>
													<Name>Motion Usage Description</Name>
													<Description>Specifies the reason for your app to access the device's accelerometer.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSNFCReaderUsageDescription</Id>
													<Name>NFC Scan Usage Description</Name>
													<Description>Specifies the reason for your app to use the device's NFC reader.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSPhotoLibraryAddUsageDescription</Id>
													<Name>Photo Library Additions Usage Description</Name>
													<Description>Specifies the reason for your app to get write-only access to the user's photo library.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSPhotoLibraryUsageDescription</Id>
													<Name>Photo Library Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's photo library.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSRemindersUsageDescription</Id>
													<Name>Reminders Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's reminders.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSSiriUsageDescription</Id>
													<Name>Siri Usage Description</Name>
													<Description>Specifies the reason for your app to send user data to Siri.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSSpeechRecognitionUsageDescription</Id>
													<Name>Speech Recognition Usage Description</Name>
													<Description>Specifies the reason for your app to send user data to Apple's speech recognition servers.</Description>
													<Type>Text</Type>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>iOSUserTrackingUsageDescription</Id>
													<Name>User Tracking Usage Description</Name>
													<Description>Specifies the reason for your app to access app-related data that can be used for tracking the user or the device.</Description>
													<Type>Text</Type>
													<Dependencies>
														<Depend type='Apply'>
															<Cond>(value(iosDevices) == idUniversal) or ((value(iosDevices) == idiPhone) or ((value(iosDevices) == idiPad) or (value(iosDevices) == idtv)))</Cond>
															<Condition>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>iosDevices</PropName>
																			<Value>idUniversal</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>iosDevices</PropName>
																					<Value>idiPhone</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>iosDevices</PropName>
																							<Value>idiPad</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>iosDevices</PropName>
																							<Value>idtv</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</Condition>
														</Depend>
													</Dependencies>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>tvOSVideoSubscriberAccountUsageDescription</Id>
													<Name>TV Provider Usage Description</Name>
													<Description>Specifies the reason for your app to access the user's TV provider account.</Description>
													<Type>Text</Type>
													<Dependencies>
														<Depend type='Apply'>
															<Cond>value(iosDevices) == idTV</Cond>
															<Condition>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>iosDevices</PropName>
																	<Value>idTV</Value>
																</Expression>
															</Condition>
														</Depend>
													</Dependencies>
													<Metadata>
														<Value name='FlagTranslatableString'></Value>
													</Metadata>
												</Prop>
											</Children>
										</Group>
										<Prop hidden='1'>
											<Id>iOSReducedAccurayDefault</Id>
											<Name>Location Default Accuracy Reduced</Name>
											<Description>Use reduced-accuracy location information by default.</Description>
											<Type>Boolean</Type>
											<Default>false</Default>
										</Prop>
										<Prop hidden='1'>
											<Id>iOSAppQueriesSchemes</Id>
											<Name>Application Queries Schemes</Name>
											<Description>Specifies the URL schemes you want the app to be able to use with Interop.CanOpen(), required for iOS 9.0 and later.\nValues should be separated with coma (,)</Description>
											<Type>Text</Type>
										</Prop>
										<Prop hidden='1'>
											<Id>iOSAppBackgroudModes</Id>
											<Name>Background Modes</Name>
											<Description>Specifies the background modes supported by the application</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.IOSBackgroundModes, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
										</Prop>
										<Prop hidden='1'>
											<Id>iOSBonjourServices</Id>
											<Name>Bonjour Services</Name>
											<Description>Bonjour service types browsed by the app. Values should be separated with coma (,).</Description>
											<Type>Text</Type>
										</Prop>
										<Group hidden='1'>
											<Id>iOSEntitlements</Id>
											<Name>Entitlements</Name>
											<Type>Group</Type>
											<Children>
												<Prop hidden='1'>
													<Id>EnableSignInWithApple</Id>
													<Name>Enable Sign in with Apple</Name>
													<Description>Enable this property to allow the iOS app to use an Apple ID as an identity provider.</Description>
													<Type>Boolean</Type>
													<Default>false</Default>
													<Metadata>
														<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.SignInWithAppleVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
													</Metadata>
												</Prop>
												<Prop hidden='1'>
													<Id>AddContactsNoteEntitlement</Id>
													<Name>AccessContactsNotes</Name>
													<Description>Add the com.apple.developer.contacts.notes entitlement to the generated project</Description>
													<Type>Boolean</Type>
													<Default>false</Default>
												</Prop>
											</Children>
										</Group>
									</Children>
								</Group>
							</Children>
						</Group>
						<Group hidden='1'>
							<Id>WindowsGroup</Id>
							<Name>Windows</Name>
							<Type>Group</Type>
							<Metadata>
								<Value name='FlagPlatform'>windows</Value>
							</Metadata>
							<Children>
								<Prop hidden='1'>
									<Id>idWindowsAPPVersionCode</Id>
									<Name>Windows Version Code</Name>
									<Description>A value that represents the version of the application code, relative to other versions</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Metadata>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.VersionCodeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeDefaultToMetadata'>True</Value>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>idWindowsAPPVersionName</Id>
									<Name>Windows Version Name</Name>
									<Description>A text value that represents the version of the application, relative to other versions</Description>
									<Type>Text</Type>
									<Default>1.0</Default>
									<Metadata>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
									<Options>
										<Option type='Required'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>tileObject</Id>
									<Name>Source DP</Name>
									<Description>DataProvider taken as the source for the application's tile.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=2A9E9ABA-D2DE-4801-AE7F-5E3819222DAF),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeToMetadata'>true</Value>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>idWindowsStoreLogo</Id>
									<Name>Windows Store Logo</Name>
									<Description>Windows Store Logo (50x50)</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagImageSize'>50x50</Value>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>idWindowsBadgeLogo</Id>
									<Name>Badge Logo</Name>
									<Description>Bandge image for toasts, notifications and task management (24x24)</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagImageSize'>24x24</Value>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>WindowsBaseStyle</Id>
									<Name>Windows Base Style</Name>
									<Type>Combo</Type>
									<Default>WinPhoneBaseStyleDark</Default>
									<Values>
										<Value id='WinPhoneBaseStyleDark' desc='Dark'/>
										<Value id='WinPhoneBaseStyleLight' desc='Light'/>
									</Values>
									<Metadata>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>WinPhoneCortana</Id>
									<Name>Cortana integration</Name>
									<Description>Voice commands declarations for Cortana</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.CortanaCommands, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Group hidden='1'>
									<Id>WindowsAppTileGroup</Id>
									<Name>Windows Tiles</Name>
									<Type>Group</Type>
									<Children>
										<Prop hidden='1'>
											<Id>idWindowsSquare150</Id>
											<Name>Square 150</Name>
											<Description>Square tile image (150x150)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>150x150</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>ShowTitleSquare150</Id>
											<Name>Show title on Square tile</Name>
											<Type>Boolean</Type>
											<Default>true</Default>
											<Metadata>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>idWindowsWide</Id>
											<Name>Wide 310x150</Name>
											<Description>Wide tile image (310x150)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>310x150</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>ShowTitleWide310</Id>
											<Name>Show title on Wide tile</Name>
											<Type>Boolean</Type>
											<Default>true</Default>
											<Metadata>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>idWindowsLargeSquare</Id>
											<Name>Square 310</Name>
											<Description>Large tile image (310x310)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(IsMain) == false</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsMain</PropName>
															<Value>false</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='FlagImageSize'>310x310</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>ShowTitleSquare310</Id>
											<Name>Show title on Large tile</Name>
											<Type>Boolean</Type>
											<Default>false</Default>
											<Dependencies>
												<Depend type='Not Show'>
													<Cond>value(IsMain) == false</Cond>
													<Condition>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsMain</PropName>
															<Value>false</Value>
														</Expression>
													</Condition>
												</Depend>
											</Dependencies>
											<Metadata>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>idWindowsSquare71</Id>
											<Name>Square 71</Name>
											<Description>Square tile image (71x71)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>71x71</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>idWindowsSquare44</Id>
											<Name>Square 44</Name>
											<Description>Square tile image (44x44)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>44x44</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
									</Children>
								</Group>
								<Group hidden='1'>
									<Id>WindowsAppSplashGroup</Id>
									<Name>Windows Splash</Name>
									<Type>Group</Type>
									<Children>
										<Prop hidden='1'>
											<Id>idWindowsSplash</Id>
											<Name>Windows Splash Screen</Name>
											<Description>Windows app splash screen (620x300)</Description>
											<Type>Custom</Type>
											<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='FlagImageSize'>620x300</Value>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
										<Prop hidden='1'>
											<Id>idWindowsSplashBackground</Id>
											<Name>Windows Splash Color</Name>
											<Description>Background color of the splash screen</Description>
											<Type>Custom</Type>
											<Default>#464646</Default>
											<CustomType>Artech.Genexus.Common.Objects.Themes.CustomTypes.ColorType2, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
											<Metadata>
												<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
											</Metadata>
										</Prop>
									</Children>
								</Group>
							</Children>
						</Group>
						<Prop hidden='1'>
							<Id>EnableNotifications</Id>
							<Name>Enable Notifications</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
						</Prop>
						<Group hidden='1'>
							<Id>nofificationsGroup</Id>
							<Name>Notifications</Name>
							<Type>Group</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(EnableNotifications) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>EnableNotifications</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Children>
								<Prop hidden='1'>
									<Id>notificationRegistrationHandler</Id>
									<Name>Registration Handler</Name>
									<Description>REST procedure to be called when smart device registration occurs.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(value(EnableNotifications) == true) and (value(IsMain) == true)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>EnableNotifications</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsMain</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=84a12160-f59b-4ad7-a683-ea4481ac23e9),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SDNotificationRegistrationHandlerDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.SDNotificationRegistrationHandlerValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iOScertificate</Id>
									<Name>iOS PKCS12 Certificate</Name>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.FileType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagDisplayName'>iOS PKCS12 Certificate</Value>
										<Value name='CustomAttribute'>Artech.Genexus.Common.CustomTypes.FileTypeFilterAttribute(Filter=PKCS12 files (*.p12)|*.p12), Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.SaveFileInKbAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagSerializeToMetadata'>false</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iOScertificatePassword</Id>
									<Name>iOS PKCS12 Password</Name>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagDisplayName'>iOS PKCS12 Password</Value>
										<Value name='FlagSerializeToMetadata'>false</Value>
									</Metadata>
									<Options>
										<Option type='Password'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSuseSandboxServer</Id>
									<Name>iOS use SandBox Server</Name>
									<Type>Boolean</Type>
									<Default>false</Default>
									<Metadata>
										<Value name='FlagDisplayName'>iOS use SandBox Server</Value>
										<Value name='FlagSerializeToMetadata'>false</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSSilentNotifAllowed</Id>
									<Name>iOS Silent Notifications allowed</Name>
									<Type>Boolean</Type>
									<Default>false</Default>
									<Metadata>
										<Value name='FlagDisplayName'>iOS Silent Notifications allowed</Value>
										<Value name='FlagSerializeToMetadata'>false</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>iOSNotificationsRegistrationMode</Id>
									<Name>iOS Device Registration Mode</Name>
									<Type>Combo</Type>
									<Default>auto</Default>
									<Values>
										<Value id='auto' desc='Automatic'/>
										<Value id='manual' desc='Manual'/>
									</Values>
									<Metadata>
										<Value name='FlagDisplayName'>iOS Device Registration Mode</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>androidSenderId</Id>
									<Name>Android Sender Id</Name>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagSerializeToMetadata'>false</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>androidSenderAPIKey</Id>
									<Name>Android Sender API Key</Name>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagSerializeToMetadata'>false</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>WNSPackageSecurityIdentifier</Id>
									<Name>WNS Package Security Identifier</Name>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagSerializeToMetadata'>false</Value>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>WNSClientSecret</Id>
									<Name>WNS Client Secret</Name>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagSerializeToMetadata'>false</Value>
										<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.WindowsGeneratorVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Prop hidden='1'>
							<Id>EnableAnalytics</Id>
							<Name>Enable Analytics</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ANALYTICS_PROVIDER</Id>
							<Name>Analytics Provider</Name>
							<Description>Application Analytics Provider.</Description>
							<Type>Combo</Type>
							<Default>NONE</Default>
							<Values>
								<Value id='NONE' desc='None'/>
							</Values>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SDAnalyticsProviderDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.AnalyticsServiceTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ServiceDirectory'>Analytics</Value>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AppAdsProvider</Id>
							<Name>Ads Provider</Name>
							<Description>Ads Provider used for SDAdsView (Android only)</Description>
							<Type>Combo</Type>
							<Default>None</Default>
							<Values>
								<Value id='None' desc='None'/>
							</Values>
							<Metadata>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.AdsServiceTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ServiceDirectory'>Ads</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>REMOTECONFIG_PROVIDER</Id>
							<Name>Remote Configuration Provider</Name>
							<Description>Provider to use for remotely configuring the mobile app, by using the RemoteConfig external object.</Description>
							<Type>Combo</Type>
							<Default>NONE</Default>
							<Values>
								<Value id='NONE' desc='None'/>
							</Values>
							<Metadata>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.RemoteConfigServiceTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ServiceDirectory'>RemoteConfig</Value>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Group hidden='1'>
							<Id>remoteConfigGroup</Id>
							<Name>Remote Configuration Settings</Name>
							<Type>Group</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(REMOTECONFIG_PROVIDER) == None</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>REMOTECONFIG_PROVIDER</PropName>
											<Value>None</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Children>
								<Prop hidden='1'>
									<Id>RemoteConfigDefaultValues</Id>
									<Name>Default Values</Name>
									<Description>Provides the default values for the remote configuration parameters.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.CT_GXTXVAL_type, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
								</Prop>
								<Prop hidden='1'>
									<Id>RemoteConfigValuesFetching</Id>
									<Name>Fetching of Remote Values</Name>
									<Description>Indicates how the values are fetched from the server.</Description>
									<Type>Combo</Type>
									<Default>idFetchingOnAppActivation</Default>
									<Values>
										<Value id='idFetchingOnAppActivation' desc='On Application Activation'/>
										<Value id='idFetchingAfterTime' desc='After Elapsed Time'/>
										<Value id='idFetchingManual' desc='Manual'/>
									</Values>
								</Prop>
								<Prop hidden='1'>
									<Id>RemoteConfigValuesApplication</Id>
									<Name>Application of Fetched Values</Name>
									<Description>Indicates when the fetched values should be applied.</Description>
									<Type>Combo</Type>
									<Default>idApplicationOnAppLaunch</Default>
									<Values>
										<Value id='idApplicationOnAppLaunch' desc='On Application Launch'/>
										<Value id='idApplicationImmediately' desc='Immediately'/>
										<Value id='idApplicationManual' desc='Manual'/>
									</Values>
								</Prop>
								<Prop hidden='1'>
									<Id>RemoteConfigMinInterval</Id>
									<Name>Minimum Fetch Interval</Name>
									<Description>Indicates the minimum time that has to pass after a successful fetch, to perform a new automatic fetch (that is, when Fetching of Remote Values != Manual).</Description>
									<Type>Integer</Type>
									<Default>1440</Default>
								</Prop>
							</Children>
						</Group>
						<Prop hidden='1'>
							<Id>EnableLogging</Id>
							<Name>EnableLogging</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
						</Prop>
						<Group hidden='1'>
							<Id>loggingGroup</Id>
							<Name>Logging</Name>
							<Type>Group</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(EnableLogging) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>EnableLogging</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Children>
								<Prop hidden='1'>
									<Id>LoggingMaxSize</Id>
									<Name>Log Maximum Size in KBytes</Name>
									<Type>Integer</Type>
									<Default>5000</Default>
									<Options>
										<Option type='Not Show'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>LogLevelDefault</Id>
									<Name>Default Log Level</Name>
									<Description>Off = No log is saved, Error = Only errors are saved, Warning = Error and warnings are saved, Info = Error, warnings and any other relevant information is saved, Debug = As info level plus usefull information for the developer</Description>
									<Type>Combo</Type>
									<Default>Off</Default>
									<Values>
										<Value id='Off' desc='Off'/>
										<Value id='Error' desc='Error'/>
										<Value id='Warning' desc='Warning'/>
										<Value id='Info' desc='Info'/>
										<Value id='Debug' desc='Debug'/>
									</Values>
								</Prop>
								<Prop hidden='1'>
									<Id>LogLevelOfflineSync</Id>
									<Name>Offline Synchronization Log Level</Name>
									<Description>Off = No log is saved, Error = Only errors are saved, Warning = Error and warnings are saved, Info = Error, warnings and any other relevant information is saved, Debug = As info level plus usefull information for the developer</Description>
									<Type>Combo</Type>
									<Values>
										<Value id='Off' desc='Off'/>
										<Value id='Error' desc='Error'/>
										<Value id='Warning' desc='Warning'/>
										<Value id='Info' desc='Info'/>
										<Value id='Debug' desc='Debug'/>
									</Values>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LogLevelDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>LogLevelHttpConnections</Id>
									<Name>Http Connections Log Level</Name>
									<Description>Off = No log is saved, Error = Only errors are saved, Warning = Error and warnings are saved, Info = Error, warnings and any other relevant information is saved, Debug = As info level plus usefull information for the developer</Description>
									<Type>Combo</Type>
									<Values>
										<Value id='Off' desc='Off'/>
										<Value id='Error' desc='Error'/>
										<Value id='Warning' desc='Warning'/>
										<Value id='Info' desc='Info'/>
										<Value id='Debug' desc='Debug'/>
									</Values>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LogLevelDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>LogLevelOfflineDataBaseAccess</Id>
									<Name>Offline Data Base Access Log Level</Name>
									<Description>Off = No log is saved, Error = Only errors are saved, Warning = Error and warnings are saved, Info = Error, warnings and any other relevant information is saved, Debug = As info level plus usefull information for the developer</Description>
									<Type>Combo</Type>
									<Values>
										<Value id='Off' desc='Off'/>
										<Value id='Error' desc='Error'/>
										<Value id='Warning' desc='Warning'/>
										<Value id='Info' desc='Info'/>
										<Value id='Debug' desc='Debug'/>
									</Values>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LogLevelDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Group hidden='1'>
							<Id>securityGroup</Id>
							<Name>Security</Name>
							<Type>Group</Type>
							<Children>
								<Prop hidden='1'>
									<Id>AllowWebviewExecuteJavascript</Id>
									<Name>Allow Webview execute javascript</Name>
									<Description>Set if allow WebView execute javascript.</Description>
									<Type>Boolean</Type>
									<Default>true</Default>
								</Prop>
								<Prop hidden='1'>
									<Id>AllowWebviewExecuteLocalFiles</Id>
									<Name>Allow Webview execute local files</Name>
									<Description>Set if allow WebView execute local files.</Description>
									<Type>Boolean</Type>
									<Default>true</Default>
								</Prop>
								<Prop hidden='1'>
									<Id>ShareSessionToWebview</Id>
									<Name>Share session to Webview</Name>
									<Description>Set if want to copy the session from native app to WebView component.</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
								</Prop>
							</Children>
						</Group>
						<Group hidden='1'>
							<Id>iOS_ATS</Id>
							<Name>App Transport Security</Name>
							<Type>Group</Type>
							<Children>
								<Prop hidden='1'>
									<Id>ATSAllowsArbitraryLoads</Id>
									<Name>Allows Arbitrary Loads</Name>
									<Description>Used to disable App Transport Security for any domains not listed in Exception Domains</Description>
									<Type>Boolean</Type>
								</Prop>
								<Prop hidden='1'>
									<Id>ATSAllowsArbitraryLoadsInMedia</Id>
									<Name>Allows Arbitrary Loads In Media</Name>
									<Description>Disables all App Transport Security restrictions for media. Use only for loading media that are already encrypted, such as files protected by FairPlay or by secure HLS, and that do not contain personalized information.</Description>
									<Type>Boolean</Type>
								</Prop>
								<Prop hidden='1'>
									<Id>ATSAllowsArbitraryLoadsInWebContent</Id>
									<Name>Allows Arbitrary Loads In Web Content</Name>
									<Description>Obtain exemption from ATS policies in your app's web views, without affecting the ATS-mandated security of your other connections.</Description>
									<Type>Boolean</Type>
								</Prop>
								<Prop hidden='1'>
									<Id>ATSAllowsLocalNetworking</Id>
									<Name>Allows Local Networking</Name>
									<Description>Removes App Transport Security protections for connections to unqualified domains and to .local domains, without disabling ATS for the rest of your app.</Description>
									<Type>Boolean</Type>
								</Prop>
								<Prop hidden='1'>
									<Id>ATSExceptionDomains</Id>
									<Name>Exception Domains</Name>
									<Description>App Transport Security exceptions for specific domains</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.ExceptionDomains, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
								</Prop>
							</Children>
						</Group>
						<Prop hidden='1'>
							<Id>Synchronizer</Id>
							<Name>OfflineDatabase</Name>
							<Description>Offline Database</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(idConnectivitySupport) == idOffline</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idConnectivitySupport</PropName>
											<Value>idOffline</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=70B6075C-331C-0000-0038-AC3B65316DD0,UseDesignModel=true, DeclareReferences=Weak),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Group hidden='1'>
							<Id>idMiscellaneousGroup</Id>
							<Name>Miscellaneous</Name>
							<Type>Group</Type>
							<Children>
								<Prop hidden='1'>
									<Id>GenerateObject</Id>
									<Name>GenerateObject</Name>
									<Description>Generate object</Description>
									<Type>Boolean</Type>
									<Default>true</Default>
									<Metadata>
										<Value name='FlagRedundantValue'>true</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Prop hidden='1'>
							<Id>directionsServiceRequest</Id>
							<Name>Directions Service Request</Name>
							<Description>REST procedure to be called when smart device directions services requests occurs.</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(IsMain) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsMain</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=84a12160-f59b-4ad7-a683-ea4481ac23e9),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SDDirectionsServiceRequestDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.SDDirectionsServiceRequestValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>IsPrompt</Id>
					<Name>IsPrompt</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsUserPrompt</Id>
					<Name>Is User Prompt</Name>
					<Description>Prompt was modified by user, it will not be generated automatically if associated table changes</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(IsPrompt) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsPrompt</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>PMPTAssocTable</Id>
					<Name>Associated table</Name>
					<Description>Associated table</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(IsPrompt) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsPrompt</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=857CA50E-7905-0000-0007-C5D9FF2975EC,DeclareReferences=Weak),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='TypeConverter'>Artech.Genexus.Common.Converters.TableCompositionConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
					</Options>
				</Prop>
				<Prop>
					<Id>caption</Id>
					<Name>Caption</Name>
					<Description>Literal to appear in the Form's caption.</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SDPanelCaptionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSerializeToMetadata'>false</Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Id>idSPC_WARNING_MESSAGES_GROUP</Id>
					<Name>Warning messages</Name>
					<Description>Configure warning messages handling options.</Description>
					<Type>Group</Type>
					<Metadata>
						<Value name='FlagCategories'>Output</Value>
					</Metadata>
					<Children>
						<Prop>
							<Id>SPC_WARNINGS_DISABLED</Id>
							<Name>Disabled warnings</Name>
							<Description>Type a space separated list of warning message codes you want to be disabled.</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DisabledWarningsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>AppearanceGroup</Id>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop hidden='1'>
							<Id>showApplicationBars</Id>
							<Name>Show Application Bars</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Metadata>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>applicationBarsClass</Id>
							<Name>Application Bars Class</Name>
							<Description>Theme class for application bars.</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ApplicationBarsThemeClassReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(showApplicationBars) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>showApplicationBars</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ApplicationBarsClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>showAds</Id>
							<Name>Show Ads</Name>
							<Description>Show ads in this panel</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>adsPosition</Id>
							<Name>Ads Position</Name>
							<Description>Ads position in this panel.</Description>
							<Type>Combo</Type>
							<Default>Bottom</Default>
							<Values>
								<Value id='Top' desc='Top'/>
								<Value id='Bottom' desc='Bottom'/>
							</Values>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>DataSelectorGroup</Id>
					<Name>Data Selector</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>dataSelector</Id>
							<Name>Data Selector</Name>
							<Description>Data Selector for the panel.</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=ffd44be7-3bb4-4d01-9e7e-d1c1a3c095af),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>dataSelectorParameters</Id>
							<Name>Data Selector Parameters</Name>
							<Description>Parameters for the Data Selector (optional).</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>RefreshTimeoutGroup</Id>
					<Name>Refresh timeout</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>autoRefreshTime</Id>
							<Name>Lapse</Name>
							<Description>Automatic refresh in seconds (0 = off)</Description>
							<Type>Integer</Type>
							<Metadata>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IsSDPanelVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>CacheGroup</Id>
					<Name>Caching</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>CacheEnabled</Id>
							<Name>Enable Data Caching</Name>
							<Description>Enable data caching in the device</Description>
							<Type>Boolean</Type>
							<Default>true</Default>
						</Prop>
						<Prop>
							<Id>CacheCheckForNewData</Id>
							<Name>Check For New Data</Name>
							<Type>Combo</Type>
							<Default>CacheCheckForNewDataEveryTime</Default>
							<Values>
								<Value id='CacheCheckForNewDataEveryTime' desc='Every time'/>
								<Value id='CacheCheckForNewDataAfterLapse' desc='After elapsed time'/>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(CacheEnabled) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>CacheEnabled</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>CacheCheckForNewDataLapse</Id>
							<Name>Check For New Data After Minutes Elapsed</Name>
							<Type>Integer</Type>
							<Default>5</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(CacheEnabled) != true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>CacheEnabled</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(CacheCheckForNewData) != CacheCheckForNewDataAfterLapse</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>CacheCheckForNewData</PropName>
											<Value>CacheCheckForNewDataAfterLapse</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>IntegratedSecurityGroup</Id>
					<Name>Integrated Security</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(IsMaster) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsMaster</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Children>
						<Prop hidden='1'>
							<Id>EnableIntegratedSecurity</Id>
							<Name>Enable Integrated Security</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SDEnableIntegratedSecurityDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOnlyDefault'></Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityLevel</Id>
							<Name>Integrated Security Level</Name>
							<Type>Combo</Type>
							<Values>
								<Value id='SecurityNone' desc='None'/>
								<Value id='SecurityLow' desc='Authentication'/>
								<Value id='SecurityHigh' desc='Authorization'/>
							</Values>
							<Metadata>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.SDIntegratedSecurityLevelValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SDIntegratedSecurityLevelDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityShowLogoutButton</Id>
							<Name>Show Logout Button</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.ShowLogoutButtonApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityPermissionPrefix</Id>
							<Name>Permission Prefix</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecuritySDPermissionPrefixDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityPermissionPrefixApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityAnonymous</Id>
							<Name>Auto-register Anonymous User</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityAnonymousApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IntegratedSecurityObjClientID</Id>
							<Name>Security Client ID</Name>
							<Description>This property identifies an SD application in GAM. The Client Id can be used by more than one SD application, note that to reuse the Client Id implies that just one application will exist in GAM.</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(IsMain) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsMain</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityApplicationClientApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientIdDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagUIValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientIdUIValidator, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientIdValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.IntegratedSecurityClientIdAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IntegratedSecurityObjClientSecret</Id>
							<Name>Security Client Secret</Name>
							<Description>The Client Secret is a key used, in conjuntion with Client Id, to identify and to authorize an application when an user is authenticated.</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(IsMain) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsMain</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityApplicationClientApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientSecretDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagUIValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientSecretUIValidator, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientSecretValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.IntegratedSecurityClientSecretAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IntegratedSecurityObjClientEncriptionKey</Id>
							<Name>Security Client Encription Key</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientEncryptionKeyDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.IntegratedSecurityClientEncryptionKeyAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
								<Option type='Password'/>
							</Options>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityEnableBiometrics</Id>
							<Name>Enable Biometrics</Name>
							<Description>Establish whether or not the application will use biometrics to authenticate the user, only requiring to login once.</Description>
							<Type>Boolean</Type>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityBiometricsReuseDuration</Id>
							<Name>Biometrics Reuse Duration</Name>
							<Description>Time (in seconds) after which the biometrics authentication will be required again, if zero the credentials will be asked every time.</Description>
							<Type>Integer</Type>
							<Default>300</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(IntegratedSecurityEnableBiometrics) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IntegratedSecurityEnableBiometrics</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityBlurOnBackground</Id>
							<Name>Secure Application Content</Name>
							<Description>Blur the application's screen when it goes to background in the OS's application switcher. Prevent the user to capture screenshots, videos or cast to another display.</Description>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>value(IntegratedSecurityEnableBiometrics) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IntegratedSecurityEnableBiometrics</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>idObjectCompatibilityGroup</Id>
					<Name>Compatibility</Name>
					<Type>Group</Type>
					<Metadata>
						<Value name='FlagCategories'>Compatibility</Value>
					</Metadata>
					<Children>
						<Prop>
							<Id>STD_FUNC_OBJECT</Id>
							<Name>Standard Functions</Name>
							<Description>Standard functions checking</Description>
							<Type>Combo</Type>
							<Default>UMPV</Default>
							<Values>
								<Value id='UMPV' desc='Use Environment property value'/>
								<Value id='Yes' desc='Only standard functions'/>
								<Value id='No' desc='Allow non-standard functions'/>
							</Values>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.StandardFunctionsForObjectsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.StandardFunctionsForObjectsValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
</Content>
