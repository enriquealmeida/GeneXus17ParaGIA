<?xml version='1.0' encoding='iso-8859-1'?>
<Content version='148254 $'>
	<Object id='EXOPROP' inheritance='EXOITEM '>
		<Group>
			<Name>ExternalObjectProperty</Name>
			<Type>Main</Type>
			<Children>
				<Prop>
					<Id>ExoPropAccessType</Id>
					<Name>Property Type</Name>
					<Type>Combo</Type>
					<Default>idGetSet</Default>
					<Values>
						<Value id='idGetSet' desc='Read/Write'/>
						<Value id='idGet' desc='Read'/>
						<Value id='idSet' desc='Write'/>
						<Value id='idMember' desc='Member'/>
					</Values>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoTypeRef</Id>
					<Name>ExternalObjectType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExternalObjectTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoCacheDefault'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>IntName</Id>
					<Name>Internal Name</Name>
					<Type>Text</Type>
				</Prop>
				<Prop>
					<Id>ExoItemDesc</Id>
					<Name>Description</Name>
					<Type>Text</Type>
				</Prop>
				<Prop>
					<Id>ExoItemType</Id>
					<Name>Type</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GenexusType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.Readonly.ExoItemTypeReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExoItemTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoItemLength</Id>
					<Name>Length</Name>
					<Type>Integer</Type>
					<Default>8</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExoItemLengthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoItemDecimals</Id>
					<Name>Decimals</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExoItemDecimalsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoItemSigned</Id>
					<Name>Signed</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExoItemSignedDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoItemIsCollection</Id>
					<Name>Collection</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExoItemCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ExoItemCollectionItemName</Id>
					<Name>Collection Item Name</Name>
					<Description>Collection Item Name</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(ExoItemIsCollection) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ExoItemIsCollection</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificationName'>CollectionItemName</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ExoItemBasedOn</Id>
					<Name>Based on</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.BasedOnReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.BasedOnValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.BasedOnExoItemAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationName'>basedon</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoMethodIsFactory</Id>
					<Name>Is Factory</Name>
					<Type>Boolean</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or (value(ExoTypeRef) == 5)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>5</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(ExoTypeRef) != 5</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>ExoTypeRef</PropName>
									<Value>5</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExoMethodIsFactoryDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.Visible.ExoMethodIsFactoryVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoMethodIsStatic</Id>
					<Name>Is Static</Name>
					<Type>Boolean</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or (value(ExoTypeRef) == 5)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>5</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExternalObjectIsStaticMethodDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.Readonly.ExternalObjectIsStaticMethodReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>ExoExternalMember</Id>
					<Name>External Member Type</Name>
					<Type>Combo</Type>
					<Default>idExoExternalMemberDefault</Default>
					<Values>
						<Value id='idExoExternalMemberDefault' desc='Default'/>
						<Value id='idExoExternalMemberStatic' desc='Static'/>
						<Value id='idExoExternalMemberInstance' desc='Instance'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or (value(ExoTypeRef) == 5)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>5</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop hidden='1'>
					<Id>DataTypeString</Id>
					<Name>DataTypeString</Name>
					<Type>Text</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataTypeStringDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>UserMode</Id>
					<Name>UserMode</Name>
					<Type>Integer</Type>
					<Default>1</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsEnumerated</Id>
					<Name>BasedOnEnumerated</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsEnumeratedDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDisplayName'>Based on Enumerated</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IDEnumDefinedValues</Id>
					<Name>EnumValues</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.EnumValues, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not (context(OBJ_TYPE) == id_OTYPE_DOM)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_DOM</Value>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(HAS_DOMAIN) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>HAS_DOMAIN</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.EnumValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EnumValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.EnumValuesAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Group>
					<Id>ControlInfoGroup</Id>
					<Name>Control Info</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(UserMode) != 1) or (context(FormType) == Text)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>ControlType</Id>
							<Name>ControlType</Name>
							<Type>Combo Int</Type>
							<Default>2</Default>
							<Values>
								<Value id='0' desc='Combo Box'/>
								<Value id='1' desc='Radio Button'/>
								<Value id='2' desc='Edit'/>
								<Value id='3' desc='Check Box'/>
								<Value id='4' desc='Dynamic Combo Box'/>
								<Value id='6' desc='List Box'/>
								<Value id='7' desc='Dynamic List Box'/>
								<Value id='20' desc='Image'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IsEnumerated)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IsEnumerated</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>in(Designtime)</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2</Value>
									<Cond>context(isVariable) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>isVariable</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.ControlTypeTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='UITypeEditor'>Artech.Packages.Genexus.UI.TypeEditors.ControlTypeUITypeEditor, Artech.Packages.GenexusUI, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControl</Id>
							<Name>IsUserControl</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithFixedValues</Id>
							<Name>IsUserControlWithFixedValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithFixedValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithDynamicValues</Id>
							<Name>IsUserControlWithDynamicValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithDynamicValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithCustomValues</Id>
							<Name>IsUserControlWithCustomValues</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithCustomValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataSourceFrom</Id>
							<Name>Data Source From</Name>
							<Type>Combo</Type>
							<Default>Values</Default>
							<Values>
								<Value id='Values' desc='Values'/>
								<Value id='Attributes' desc='Attributes'/>
								<Value id='DataProvider' desc='Data Provider'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithFixedValues) == true) or ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithFixedValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Attributes</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>DataProvider</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Values</Value>
									<Cond>(value(IsUserControlWithFixedValues) == false) or ((value(ControlType) == 4) or (value(ControlType) == 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Attributes</Value>
									<Cond>(value(ControlType) == 4) or (value(ControlType) == 7)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>7</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.DataSourceFromTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProvider</Id>
							<Name>Data Provider</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=2a9e9aba-d2de-4801-ae7f-5e3819222daf),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProviderParameters</Id>
							<Name>Parameters</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlValues</Id>
							<Name>Values</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.CT_GXTXVAL_type, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1))) and ((in(Designtime)) and (context(AttType) != 7))) or (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>0</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>6</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName source='context'>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == true) and (value(DataSourceFrom) != Values)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>Values</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>InputType</Id>
							<Name>InputType</Name>
							<Description>Enter and show data as values or as descriptions</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Values'/>
								<Value id='1' desc='Descriptions'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(idATTISFORMULA) != -1) and ((in(Designtime)) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>context(isVariable) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>isVariable</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InputTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EditAutocomplete</Id>
							<Name>Suggest</Name>
							<Description>Offer suggestions while editing</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='No'/>
								<Value id='1' desc='OnRequest'/>
								<Value id='2' desc='Incremental'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(InputType)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>InputType</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ControlItemDescription)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ControlItemDescription</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(idATTISFORMULA) != -1) and ((in(Designtime)) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SuggestDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.SuggestValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.SuggestApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemValues</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemValuesFieldSpecifier</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemDescriptionFieldSpecifier</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemDescription</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true)))) or ((value(ControlType) == 2) and (value(InputType) != 0))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>IsUserControlWithDynamicValues</PropName>
																					<Value>true</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>InputType</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
								<Value name='FlagCanBeNone'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>MaxItems</Id>
							<Name>SuggestMaxItems</Name>
							<Description>Maximum number of items in the suggestion list</Description>
							<Type>Integer</Type>
							<Default>5</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((in(Designtime)) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlSortDescription</Id>
							<Name>SortDescriptions</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((((value(IsUserControlWithFixedValues) == true) or (value(IsUserControlWithDynamicValues) == true)) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 2) and (value(EditAutocomplete) != 0))))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithFixedValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>2</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>context(isVariable) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>isVariable</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>CaseSensitive</Id>
							<Name>CaseSensitive</Name>
							<Description>Whether to consider case when filtering suggestions</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((in(Designtime)) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>context(isVariable) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>isVariable</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlDirection</Id>
							<Name>RadioDirection</Name>
							<Type>Combo Int</Type>
							<Default>1</Default>
							<Values>
								<Value id='0' desc='Horizontal'/>
								<Value id='1' desc='Vertical'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 1) and ((in(Designtime)) and ((value(IsUserControl) == false) and (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>FORMATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>1</Value>
									<Cond>context(isVariable) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>isVariable</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlTitle</Id>
							<Name>ControlTitle</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(ControlType) == 3) or ((value(ControlType) == 1) and (true))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlCheckValue</Id>
							<Name>CheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and (true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlUnCheckValue</Id>
							<Name>UncheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and (true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.UncheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlWhere</Id>
							<Name>Conditions</Name>
							<Description>Filter conditions</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ConditionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(in(Designtime)) and ((((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true))) and (value(DataSourceFrom) == Attributes)) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSFL</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLFS</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>FORMSFL</ObjectName>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName source='context'>GxObjClass</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>IsUserControlWithDynamicValues</PropName>
																							<Value>true</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Attributes</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>2</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>InputType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlWhereDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlRestrictedBy</Id>
							<Name>InstantiatedAttributes</Name>
							<Description>Additional restrictions by instantiated attributes list</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ParseAttributesList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or (value(ControlType) == 7))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlRestrictedByDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>count</Id>
							<Name>Count</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(ControlType) == 2) or ((value(ControlType) == 3) or ((value(ControlType) == 1) or (value(ControlType) == 20)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>20</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>in(Runtime)</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(IsStandardVariable) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>IsStandardVariable</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>AddEmptyItem</Id>
							<Name>EmptyItem</Name>
							<Description>Adds an item for 'none/all' selection</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(IsUserControlWithDynamicValues) == true) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and (in(Designtime))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EmptyItemText</Id>
							<Name>EmptyItemText</Name>
							<Description>Text associated with the empty item</Description>
							<Type>Text</Type>
							<Default>GX_EmptyItemText</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and ((value(AddEmptyItem) == true) and (in(Designtime)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithDynamicValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AddEmptyItem</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCorrection</Id>
							<Name>Auto correction</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((context(AttType) == 5) or ((context(AttType) == 13) or (context(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCorrectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCapitalization</Id>
							<Name>Auto capitalization</Name>
							<Type>Combo</Type>
							<Default>FirstWord</Default>
							<Values>
								<Value id='None' desc='None'/>
								<Value id='FirstWord' desc='First word'/>
								<Value id='EachWord' desc='First letter of each word'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((context(AttType) == 5) or ((context(AttType) == 13) or (context(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.Apply.AutoCapitalizationApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCapitalizationDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOPROPInfoXML</Id>
					<Name>XML Information</Name>
					<Description>XML Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(ExoTypeRef) == 2</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ExoTypeRef</PropName>
									<Value>2</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>ExoName</Id>
							<Name>XML Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>XmlName</Value>
								<Value name='FlagSpecificationName'>XmlName</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoNamespace</Id>
							<Name>XML Namespace</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>XmlNamespace</Value>
								<Value name='FlagSpecificationName'>XmlNamespace</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemExtType</Id>
							<Name>Soap Type</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalType</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemWRAPPEDCOLLECTION</Id>
							<Name>Collection Serialization</Name>
							<Description>Collection Serialization</Description>
							<Type>Combo</Type>
							<Default>idXmlCollectionWrapped</Default>
							<Values>
								<Value id='idXmlCollectionWrapped' desc='Wrapped'/>
								<Value id='idXmlCollectionSequence' desc='Sequence'/>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(ExoItemIsCollection) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoItemIsCollection</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationName'>CollectionSerialization</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOInfoCSHARP</Id>
					<Name>.NET Framework Information</Name>
					<Description>.NET Framework Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or ((context(ExoType) == 0) or ((value(ExoTypeRef) == 5) or (context(ExoType) == 5)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>ExoType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ExoTypeRef</PropName>
															<Value>5</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>ExoType</PropName>
															<Value>5</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>ExoNameCSHARP</Id>
							<Name>.Net External Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalNameCSHARP</Value>
								<Value name='FlagDisplayName'>.NET Framework External Name</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemExtTypeCSHARP</Id>
							<Name>.Net External Type</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalTypeCSHARP</Value>
								<Value name='FlagDisplayName'>.NET Framework External Type</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOInfoNETCORE</Id>
					<Name>.NET Information</Name>
					<Description>.NET Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or ((context(ExoType) == 0) or ((value(ExoTypeRef) == 5) or (context(ExoType) == 5)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>ExoType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ExoTypeRef</PropName>
															<Value>5</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>ExoType</PropName>
															<Value>5</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>ExoNameNETCORE</Id>
							<Name>.Net Core External Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExternalObjectNetCoreNameDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ConstantName'>ExternalNameNETCORE</Value>
								<Value name='FlagDisplayName'>.NET External Name</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemExtTypeNETCORE</Id>
							<Name>.Net Core External Type</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExternalObjectNetCoreTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ConstantName'>ExternalTypeNETCORE</Value>
								<Value name='FlagDisplayName'>.NET External Type</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOInfoJAVA</Id>
					<Name>Java Information</Name>
					<Description>Java Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or ((context(ExoType) == 0) or ((value(ExoTypeRef) == 5) or (context(ExoType) == 5)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>ExoType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ExoTypeRef</PropName>
															<Value>5</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>ExoType</PropName>
															<Value>5</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>ExoNameJAVA</Id>
							<Name>Java External Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalNameJAVA</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemExtTypeJAVA</Id>
							<Name>Java External Type</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalTypeJAVA</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExternalSetMethodJAVA</Id>
							<Name>Java External Set Method</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ExoPropAccessType) == idGetSet) or (value(ExoPropAccessType) == idSet)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idGetSet</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idSet</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>ExternalGetMethodJAVA</Id>
							<Name>Java External Get Method</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ExoPropAccessType) == idGetSet) or (value(ExoPropAccessType) == idGet)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idGetSet</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idGet</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOInfoRuby</Id>
					<Name>Ruby Information</Name>
					<Description>Ruby Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or (context(ExoType) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>ExoType</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagCategories'>Deprecated</Value>
					</Metadata>
					<Children>
						<Prop hidden='1'>
							<Id>ExoNameRuby</Id>
							<Name>Ruby External Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalNameRuby</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemExtTypeRuby</Id>
							<Name>Ruby External Type</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalTypeRuby</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOInfoIOS</Id>
					<Name>iOS Information</Name>
					<Description>iOS Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or (context(ExoType) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>ExoType</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>ExoNameIOS</Id>
							<Name>iOS External Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalNameIOS</Value>
								<Value name='FlagDisplayName'>iOS External Name</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemExtTypeIOS</Id>
							<Name>iOS External Type</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalTypeIOS</Value>
								<Value name='FlagDisplayName'>iOS External Type</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOInfoANDROID</Id>
					<Name>Android Information</Name>
					<Description>Android Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or (context(ExoType) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>ExoType</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>ExoNameANDROID</Id>
							<Name>Android External Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalNameAndroid</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExoItemExtTypeANDROID</Id>
							<Name>Android External Type</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='ConstantName'>ExternalTypeANDROID</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ExternalSetMethodANDROID</Id>
							<Name>Android External Set Method</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ExoPropAccessType) == idGetSet) or (value(ExoPropAccessType) == idSet)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idGetSet</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idSet</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>ExternalGetMethodANDROID</Id>
							<Name>Android External Get Method</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ExoPropAccessType) == idGetSet) or (value(ExoPropAccessType) == idGet)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idGetSet</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ExoPropAccessType</PropName>
													<Value>idGet</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
					</Children>
				</Group>
				<Group hidden='1'>
					<Id>EXOInfoJS</Id>
					<Name>Javascript Information</Name>
					<Description>Javascript Information</Description>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ExoTypeRef) == 0) or (context(ExoType) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ExoTypeRef</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>ExoType</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop hidden='1'>
							<Id>ExoNameJS</Id>
							<Name>Javascript External Name</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.ExternalObjectJSNameDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ConstantName'>ExternalNameJS</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
</Content>
