<?xml version='1.0' encoding='iso-8859-1'?>
<Content version='148254 $'>
	<Object id='ATT_CONTROL' inheritance='CONTROL '>
	</Object>
	<Object id='CONTROL'>
	</Object>
	<Object id='HTMLATT' inheritance='HTMLSFLATT HTMLOBJ ATT_CONTROL CONTROL '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Metadata>
				<Value name='ParentResolver'>Artech.Genexus.Common.Resolvers.ControlParentResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
			</Metadata>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>54</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttType</Id>
					<Name>AttType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EXT_ATT_TYPE_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseAttType</Id>
					<Name>BaseAttType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BaseAttTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>PROP_EXT_BASE_ATT_COLLECTION</Id>
					<Name>PROP_EXT_BASE_ATT_COLLECTION</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BaseAttCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttName</Id>
					<Name>AttName</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>FieldSpecName</Id>
					<Name>FieldSpecName</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttDateFormat</Id>
					<Name>AttDateFormat</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>GxObjClass</Id>
					<Name>GxObjClass</Name>
					<Type>Integer</Type>
					<Default>-1</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ObjClsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>isVariable</Id>
					<Name>isVariable</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsVariableDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>isAttribute</Id>
					<Name>isAttribute</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsAttributeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColCount</Id>
					<Name>ColCount</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttCOL_COUNTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RowCount</Id>
					<Name>RowCount</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttROW_COUNTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>AttID</Id>
					<Name>Attribute</Name>
					<Description>Attribute</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) != 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>PROP_SDT_ITEM_OBJECT</Id>
					<Name>SdtItemObject</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Common.Properties.IPropertyBag, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(ColAttId)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>ColAttId</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(FieldSpecifier)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>FieldSpecifier</PropName>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SdtItemObjectDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>Class</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>IsEnumerated</Id>
					<Name>BasedOnEnumerated</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsEnumeratedDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDisplayName'>Based on Enumerated</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IDEnumDefinedValues</Id>
					<Name>EnumValues</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.EnumValues, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not (context(OBJ_TYPE) == id_OTYPE_DOM)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_DOM</Value>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(HAS_DOMAIN) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>HAS_DOMAIN</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.EnumValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EnumValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.EnumValuesAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Group>
					<Id>ControlInfoGroup</Id>
					<Name>Control Info</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(context(UserMode) != 1) or (context(FormType) == Text)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>ControlType</Id>
							<Name>ControlType</Name>
							<Type>Combo Int</Type>
							<Default>2</Default>
							<Values>
								<Value id='0' desc='Combo Box'/>
								<Value id='1' desc='Radio Button'/>
								<Value id='2' desc='Edit'/>
								<Value id='3' desc='Check Box'/>
								<Value id='4' desc='Dynamic Combo Box'/>
								<Value id='6' desc='List Box'/>
								<Value id='7' desc='Dynamic List Box'/>
								<Value id='20' desc='Image'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IsEnumerated)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IsEnumerated</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.WebControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.WebControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.WebControlTypeTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.ControlTypeTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='UITypeEditor'>Artech.Packages.Genexus.UI.TypeEditors.ControlTypeUITypeEditor, Artech.Packages.GenexusUI, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControl</Id>
							<Name>IsUserControl</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithFixedValues</Id>
							<Name>IsUserControlWithFixedValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithFixedValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithDynamicValues</Id>
							<Name>IsUserControlWithDynamicValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithDynamicValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithCustomValues</Id>
							<Name>IsUserControlWithCustomValues</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithCustomValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataSourceFrom</Id>
							<Name>Data Source From</Name>
							<Type>Combo</Type>
							<Default>Values</Default>
							<Values>
								<Value id='Values' desc='Values'/>
								<Value id='Attributes' desc='Attributes'/>
								<Value id='DataProvider' desc='Data Provider'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithFixedValues) == true) or ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithFixedValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Attributes</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>DataProvider</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Values</Value>
									<Cond>(value(IsUserControlWithFixedValues) == false) or ((value(ControlType) == 4) or (value(ControlType) == 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Attributes</Value>
									<Cond>(value(ControlType) == 4) or (value(ControlType) == 7)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>7</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.DataSourceFromTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProvider</Id>
							<Name>Data Provider</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=2a9e9aba-d2de-4801-ae7f-5e3819222daf),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProviderParameters</Id>
							<Name>Parameters</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlValues</Id>
							<Name>Values</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.CT_GXTXVAL_type, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1))) and ((context(UserMode) == 1) and (value(AttType) != 7))) or (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>0</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>6</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == true) and (value(DataSourceFrom) != Values)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>Values</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>InputType</Id>
							<Name>InputType</Name>
							<Description>Enter and show data as values or as descriptions</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Values'/>
								<Value id='1' desc='Descriptions'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(idATTISFORMULA) != -1) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InputTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EditAutocomplete</Id>
							<Name>Suggest</Name>
							<Description>Offer suggestions while editing</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='No'/>
								<Value id='1' desc='OnRequest'/>
								<Value id='2' desc='Incremental'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(InputType)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>InputType</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ControlItemDescription)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ControlItemDescription</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(idATTISFORMULA) != -1) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SuggestDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.SuggestValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.SuggestApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemValues</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemValuesFieldSpecifier</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemDescriptionFieldSpecifier</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemDescription</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true)))) or ((value(ControlType) == 2) and (value(InputType) != 0))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>IsUserControlWithDynamicValues</PropName>
																					<Value>true</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>InputType</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
								<Value name='FlagCanBeNone'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>FilterOperator</Id>
							<Name>FilterOperator</Name>
							<Description>How the suggestions relate to the edit contents</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Begins with'/>
								<Value id='1' desc='Contains'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>MaxItems</Id>
							<Name>SuggestMaxItems</Name>
							<Description>Maximum number of items in the suggestion list</Description>
							<Type>Integer</Type>
							<Default>5</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlSortDescription</Id>
							<Name>SortDescriptions</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((((value(IsUserControlWithFixedValues) == true) or (value(IsUserControlWithDynamicValues) == true)) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 2) and (value(EditAutocomplete) != 0))))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithFixedValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>2</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>CaseSensitive</Id>
							<Name>CaseSensitive</Name>
							<Description>Whether to consider case when filtering suggestions</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlDirection</Id>
							<Name>RadioDirection</Name>
							<Type>Combo Int</Type>
							<Default>1</Default>
							<Values>
								<Value id='0' desc='Horizontal'/>
								<Value id='1' desc='Vertical'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 1) and ((context(UserMode) == 1) and ((value(IsUserControl) == false) and (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>FORMATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>1</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlTitle</Id>
							<Name>ControlTitle</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(ControlType) == 3) or ((value(ControlType) == 1) and (false))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlCheckValue</Id>
							<Name>CheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and ((not (value(ControlType) == 3)) or (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlUnCheckValue</Id>
							<Name>UncheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and ((not (value(ControlType) == 3)) or (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.UncheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlWhere</Id>
							<Name>Conditions</Name>
							<Description>Filter conditions</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ConditionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and ((((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true))) and (value(DataSourceFrom) == Attributes)) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSFL</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLFS</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>FORMSFL</ObjectName>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>GxObjClass</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>IsUserControlWithDynamicValues</PropName>
																							<Value>true</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Attributes</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>2</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>InputType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlWhereDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlRestrictedBy</Id>
							<Name>InstantiatedAttributes</Name>
							<Description>Additional restrictions by instantiated attributes list</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ParseAttributesList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or (value(ControlType) == 7))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlRestrictedByDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>count</Id>
							<Name>Count</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(ControlType) == 2) or ((value(ControlType) == 3) or ((value(ControlType) == 1) or (value(ControlType) == 20)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>20</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>AddEmptyItem</Id>
							<Name>EmptyItem</Name>
							<Description>Adds an item for 'none/all' selection</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(IsUserControlWithDynamicValues) == true) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EmptyItemText</Id>
							<Name>EmptyItemText</Name>
							<Description>Text associated with the empty item</Description>
							<Type>Text</Type>
							<Default>GX_EmptyItemText</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and ((value(AddEmptyItem) == true) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithDynamicValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AddEmptyItem</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCorrection</Id>
							<Name>Auto correction</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((value(AttType) == 5) or ((value(AttType) == 13) or (value(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCorrectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCapitalization</Id>
							<Name>Auto capitalization</Name>
							<Type>Combo</Type>
							<Default>FirstWord</Default>
							<Values>
								<Value id='None' desc='None'/>
								<Value id='FirstWord' desc='First word'/>
								<Value id='EachWord' desc='First letter of each word'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((value(AttType) == 5) or ((value(AttType) == 13) or (value(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.Apply.AutoCapitalizationApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCapitalizationDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>NotifyContextChange</Id>
							<Name>NotifyContextChange</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == false) and (context(idATTISFORMULA) != -1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>idATTISFORMULA</PropName>
													<Value>-1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>(value(AttNumDim) == 0) and ((value(BaseAttType) != 254) and ((value(BaseAttType) != 252) and (value(BaseAttType) != 251)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttNumDim</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>BaseAttType</PropName>
													<Value>254</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>BaseAttType</PropName>
															<Value>252</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>BaseAttType</PropName>
															<Value>251</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.ControlNameVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RowIndex</Id>
					<Name>RowIndex</Name>
					<Description>RowIndex</Description>
					<Type>Custom</Type>
					<Default>1</Default>
					<CustomType>Artech.Genexus.Common.CustomTypes.IndexExpression, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Required'>
							<Cond>value(AttNumDim) != 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>AttNumDim</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttNumDim) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttNumDim</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColIndex</Id>
					<Name>ColIndex</Name>
					<Description>ColIndex</Description>
					<Type>Custom</Type>
					<Default>1</Default>
					<CustomType>Artech.Genexus.Common.CustomTypes.IndexExpression, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Required'>
							<Cond>value(AttNumDim) == 2</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttNumDim</PropName>
									<Value>2</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttNumDim) != 2</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>AttNumDim</PropName>
									<Value>2</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>FieldSpecifier</Id>
					<Name>FieldSpecifier</Name>
					<Description>Field Specifier</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.SDTItemType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(value(BaseAttType) == 254) or ((value(BaseAttType) == 252) or ((value(BaseAttType) == 251) or ((value(BaseAttType) == 256) or (value(PROP_EXT_BASE_ATT_COLLECTION) == true))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>BaseAttType</PropName>
											<Value>254</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>BaseAttType</PropName>
													<Value>252</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>BaseAttType</PropName>
															<Value>251</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>BaseAttType</PropName>
																	<Value>256</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>PROP_EXT_BASE_ATT_COLLECTION</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfNotApply</Value>
					</Metadata>
					<Options>
						<Option type='Required'/>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Group hidden='1'>
					<Name>File</Name>
					<Type>Group</Type>
					<Children>
						<Prop hidden='1'>
							<Id>PROP_BLOB_FILENAME</Id>
							<Name>FileName</Name>
							<Description>File name</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) == 14) and (context(UserMode) == 0)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>PROP_BLOB_FILETYPE</Id>
							<Name>FileType</Name>
							<Description>File type</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) == 14) and (context(UserMode) == 0)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Behavior</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>EmptyAsNull</Id>
							<Name>EmptyAsNull</Name>
							<Type>Combo</Type>
							<Values>
								<Value id='No' desc='No Nulls'/>
								<Value id='Yes' desc='Empty as Null'/>
								<Value id='Blank' desc='Blank as Null'/>
								<Value id='Compatibility' desc='Compatible'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(HAS_DOMAIN)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>HAS_DOMAIN</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(OBJ_TYPE) != id_OTYPE_VAR) and ((context(OBJ_TYPE) != id_OTYPE_SDT) and (context(idATTISFORMULA) != -1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_TYPE</PropName>
													<Value>id_OTYPE_VAR</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EmptyAsNullDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.EmptyAsNullValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
								<Value name='FlagDisplayName'>Nulls in Forms</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ReadOnly</Id>
							<Name>ReadOnly</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>((value(isAttribute) == true) and (value(GxObjClass) == 13)) or ((value(visible) == false) or ((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>isAttribute</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>GxObjClass</PropName>
															<Value>13</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>visible</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>isAttribute</PropName>
																					<Value>true</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>GxObjClass</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>((value(isAttribute) == true) and (value(GxObjClass) == 13)) or ((value(visible) == false) or ((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>isAttribute</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>GxObjClass</PropName>
															<Value>13</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>visible</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>isAttribute</PropName>
																					<Value>true</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>GxObjClass</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(isAttribute) == true) and (value(GxObjClass) == 13)) or ((value(visible) == false) or ((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>isAttribute</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>GxObjClass</PropName>
															<Value>13</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>visible</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>isAttribute</PropName>
																					<Value>true</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>GxObjClass</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(isVariable) == true) and (value(GxObjClass) == 0)) or (((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0)))) or (value(ControlType) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>isVariable</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>GxObjClass</PropName>
															<Value>0</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>isAttribute</PropName>
																					<Value>true</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>GxObjClass</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop>
							<Id>Autocomplete</Id>
							<Name>InputHistory</Name>
							<Description>InputHistory</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Invalid'>
									<Value>-1</Value>
									<Cond>(value(EditAutocomplete) != 0) or (value(IsPassword) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsPassword</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>(value(EditAutocomplete) == 0) and ((value(IsPassword) != true) and ((value(AttType) == 4) or ((value(AttType) == 6) or ((value(AttType) == 12) or ((value(AttType) == 5) or (value(AttType) == 13))))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>IsPassword</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>6</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>12</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>AttType</PropName>
																							<Value>5</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>AttType</PropName>
																							<Value>13</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(EditAutocomplete) != 0) or (value(IsPassword) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsPassword</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(not (value(ReadOnly) == true)) and ((value(ControlType) == 2) and ((value(idIsSDControl) == false) or (context(UserMode) == 1)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ReadOnly</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>idIsSDControl</PropName>
																	<Value>false</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InputHistoryDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IsPassword</Id>
							<Name>IsPassword</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(idATTISFORMULA) != -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>idATTISFORMULA</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>not (value(ControlType) == 2)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or ((value(AttType) == 112) or ((value(AttType) == 93) or ((value(AttType) == 92) or ((value(AttType) == 14) or (value(AttType) == 45)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>112</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>93</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>92</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>14</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>45</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsPasswordDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>PROP_CTRL_RTPICTURE</Id>
							<Name>Picture</Name>
							<Description>To set the desired format to accept and display the value for an attributte or variable.</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop hidden='1'>
							<Id>PROP_BLOB_DISPLAY</Id>
							<Name>Display</Name>
							<Description>Defines how control is displayed on screen</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Inline'/>
								<Value id='1' desc='Link'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(AttType) == 14</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>PROP_BLOB_CONTENTTYPE</Id>
							<Name>ContentType</Name>
							<Description>Content type</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(AttType) == 14</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AutoResize</Id>
							<Name>AutoResize</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAutoResizeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AttAutoResizeAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>GxWidth</Id>
							<Name>Width</Name>
							<Description>Calculated width of the element</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Readonly'>
									<Cond>value(AutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AutoResize) == true) and ((value(AttType) == 7) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AutoResize</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>GxHeight</Id>
							<Name>Height</Name>
							<Description>Calculated height of the element</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) != 0) and (value(ControlType) != 4)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>ControlType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(AutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AutoResize) == true) and ((value(AttType) == 7) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AutoResize</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsMultiline</Id>
							<Name>IsMultiline</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.IsMultilineDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>MaxTextNumberLines</Id>
							<Name>MaximumNumberOfLines</Name>
							<Description>Maximum number of lines that the Text input will grow in order to show inner Text</Description>
							<Type>Integer</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>not ((value(AttType) == 13) or ((value(AttType) == 5) or (value(AttType) == 8)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>13</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>8</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificable'></Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Fill</Id>
							<Name>Fill</Name>
							<Description>Fill</Description>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and ((context(FormType) != Text) or (true))</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>(value(ControlType) == 2) and (value(ReadOnly) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ReadOnly</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BackColor</Id>
							<Name>BackColor</Name>
							<Description>BackColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(Fill) == false) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>Fill</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='NoSys Color'/>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ForeColor</Id>
							<Name>ForeColor</Name>
							<Description>ForeColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='NoSys Color'/>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ForeColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Font</Id>
							<Name>Font</Name>
							<Description>Font</Description>
							<Type>Custom</Type>
							<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Verdana,12</Value>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>HorizontalAlignment</Id>
							<Name>HorizontalAlignment</Name>
							<Description>HorizontalAlignment</Description>
							<Type>Combo</Type>
							<Default>left</Default>
							<Values>
								<Value id='left' desc='Left'/>
								<Value id='center' desc='Center'/>
								<Value id='right' desc='Right'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(ControlType) == 3</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ControlType</PropName>
											<Value>3</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAlignDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOldId'>Alignment</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>GxFormat</Id>
							<Name>Format</Name>
							<Type>Combo Int</Type>
							<Values>
								<Value id='0' desc='Text'/>
								<Value id='1' desc='HTML'/>
								<Value id='2' desc='Raw HTML'/>
								<Value id='3' desc='Text with meaningful spaces'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(ControlType) != 2) and (true)) or ((value(AttType) == 7) or ((value(AttType) == 14) or (value(AttType) == 45)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSPAN</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>KB</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>RPT_ATT</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>14</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>45</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>1</Value>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlAttFormatDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.FormatReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagBuildAction'>RebuildAll</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>BorderStyle</Id>
							<Name>BorderStyle</Name>
							<Description>BorderStyle</Description>
							<Type>Combo Int</Type>
							<Default>2</Default>
							<Values>
								<Value id='0' desc='None'/>
								<Value id='1' desc='Single'/>
								<Value id='2' desc='3D'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLEMBPAGE</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'/>
								<Depend type='Default'>
									<Value>1</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (value(ReadOnly) == true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ReadOnly</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>1</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (value(ReadOnly) == true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ReadOnly</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (value(ReadOnly) == true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ReadOnly</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (value(ReadOnly) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ReadOnly</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>1</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (value(ReadOnly) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ReadOnly</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (value(ReadOnly) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ReadOnly</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>Border</Id>
							<Name>BorderWidth</Name>
							<Description>Width of the border to be drawn around the control</Description>
							<Type>Text</Type>
							<Default>2</Default>
							<Dependencies>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(BorderStyle) != 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>BorderStyle</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) != 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBorderWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>alt</Id>
							<Name>AlternateText</Name>
							<Description>Optional text as an alternative to the graphic for rendering in nongraphical environments</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>title</Id>
							<Name>Tooltiptext</Name>
							<Description>Advisory information (a ToolTip) for the object</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Tooltip Text</Value>
								<Value name='FlagRuntimeName'>TooltipText</Value>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>invitemsg</Id>
							<Name>InviteMessage</Name>
							<Description>Text to invite the user to interact with the object</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) != 6) and ((value(AttType) != 14) and (value(AttType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>AttType</PropName>
													<Value>6</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>14</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InviteMessageDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>hspace</Id>
							<Name>HSpace</Name>
							<Description>Horizontal margins for the element in pixels</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(AttType) == 7) or (value(AttType) == 14)) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLIMG</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>14</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>vspace</Id>
							<Name>VSpace</Name>
							<Description>Vertical margins for the element in pixels</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(AttType) == 7) or (value(AttType) == 14)) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLIMG</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>14</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>LinkTarget</Id>
							<Name>LinkTarget</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(AttType) == 7) or (value(ControlType) == 2)) and ((context(UserMode) == 0) or ((value(AttType) == 14) and (value(PROP_BLOB_DISPLAY) == 1)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>14</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>PROP_BLOB_DISPLAY</PropName>
																	<Value>1</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Group hidden='1'>
							<Id>PROP_DATEPICKER_GROUP</Id>
							<Name>Date/DateTime specific</Name>
							<Type>Group</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) == 6) or (value(AttType) == 12)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>6</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>12</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Children>
								<Prop hidden='1'>
									<Id>USE_DATEPICKER</Id>
									<Name>DatePicker</Name>
									<Description>Use date picker for selection</Description>
									<Type>Boolean</Type>
									<Default>true</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>context(UserMode) == 1</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Default'>
											<Value>0</Value>
											<Cond>value(AttDateFormat) == idDATEFORMAT_NONE</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttDateFormat</PropName>
													<Value>idDATEFORMAT_NONE</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Invalid'>
											<Value>-1</Value>
											<Cond>value(AttDateFormat) == idDATEFORMAT_NONE</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttDateFormat</PropName>
													<Value>idDATEFORMAT_NONE</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Readonly'>
											<Cond>value(AttDateFormat) == idDATEFORMAT_NONE</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttDateFormat</PropName>
													<Value>idDATEFORMAT_NONE</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>FLAT_DATEPICKER</Id>
									<Name>DisplayFlat</Name>
									<Description>Show calendar always open</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(value(USE_DATEPICKER) == true) and (context(UserMode) == 1)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>USE_DATEPICKER</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>enabled</Id>
							<Name>enabled</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == true) or (context(UserMode) == 0)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(idIsSDControl) == false) and (not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or ((value(ControlType) == 7) or (value(ControlType) == 20)))))))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>1</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>4</Value>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>BooleanExpression</Type>
																									<FirstPart>
																										<Expression>
																											<Type>Comparison</Type>
																											<Operator>Equal</Operator>
																											<PropName>ControlType</PropName>
																											<Value>6</Value>
																										</Expression>
																									</FirstPart>
																									<Operator>or</Operator>
																									<SecondPart>
																										<Expression>
																											<Type>BooleanExpression</Type>
																											<FirstPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>ControlType</PropName>
																													<Value>7</Value>
																												</Expression>
																											</FirstPart>
																											<Operator>or</Operator>
																											<SecondPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>ControlType</PropName>
																													<Value>20</Value>
																												</Expression>
																											</SecondPart>
																										</Expression>
																									</SecondPart>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Enabled</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>AttNumDim</Id>
					<Name>Dimensions</Name>
					<Description>Dimensions</Description>
					<Type>Combo</Type>
					<Values>
						<Value id='0' desc='Scalar'/>
						<Value id='1' desc='Vector'/>
						<Value id='2' desc='Matrix'/>
					</Values>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Type)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Type</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(IDEnumDefinedValues)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>IDEnumDefinedValues</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(context(OBJ_TYPE) != id_OTYPE_ATT) and ((context(OBJ_DATATYPE) != DT_BLOB) and ((context(OBJ_DATATYPE) != DT_OBJECT) and (value(IsEnumerated) != true)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_DATATYPE</PropName>
													<Value>DT_BLOB</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>OBJ_DATATYPE</PropName>
															<Value>DT_OBJECT</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>IsEnumerated</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(VarDimsProtected) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>VarDimsProtected</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>1</Value>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>2</Value>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DimensionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttCollection</Id>
					<Name>Collection</Name>
					<Description>Collection</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttDomain)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttDomain</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(OBJ_TYPE) == id_OTYPE_ATT) or (context(OBJ_TYPE) != id_OTYPE_SDT)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>ATT</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>-1</Value>
							<Cond>context(OBJ_TYPE) == id_OTYPE_ATT</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>OBJ_TYPE</PropName>
									<Value>id_OTYPE_ATT</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttCollectionValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.AttCollectionReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Group hidden='1'>
					<Id>AttEditFlags</Id>
					<Name>EditFlags</Name>
					<Description>EditFlags</Description>
					<Type>Group</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
					<Children>
						<Prop hidden='1'>
							<Id>AttEditNameProtected</Id>
							<Name>AttEditNameProtected</Name>
							<Description>AttEditNameProtected</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsStandardVariable</Id>
							<Name>IsStandardVariable</Name>
							<Description>Is standard variable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>idIsAutoDefinedVariable</Id>
							<Name>IsAutoDefinedVariable</Name>
							<Description>Is autodefined variable</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDisableArrays</Id>
							<Name>AttEditDisableArrays</Name>
							<Description>AttEditDisableArrays</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditNewVariable</Id>
							<Name>AttEditNewVariable</Name>
							<Description>AttEditNewVariable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDontAssign</Id>
							<Name>AttEditDontAssign</Name>
							<Description>AttEditDontAssign</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>BackStyle</Id>
					<Name>BackStyle</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 0) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 2) or ((value(ControlType) == 3) or (value(ControlType) == 4))))))))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>4</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>6</Value>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>BooleanExpression</Type>
																									<FirstPart>
																										<Expression>
																											<Type>Comparison</Type>
																											<Operator>Equal</Operator>
																											<PropName>ControlType</PropName>
																											<Value>7</Value>
																										</Expression>
																									</FirstPart>
																									<Operator>or</Operator>
																									<SecondPart>
																										<Expression>
																											<Type>BooleanExpression</Type>
																											<FirstPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>ControlType</PropName>
																													<Value>0</Value>
																												</Expression>
																											</FirstPart>
																											<Operator>or</Operator>
																											<SecondPart>
																												<Expression>
																													<Type>BooleanExpression</Type>
																													<FirstPart>
																														<Expression>
																															<Type>Comparison</Type>
																															<Operator>Equal</Operator>
																															<PropName>ControlType</PropName>
																															<Value>2</Value>
																														</Expression>
																													</FirstPart>
																													<Operator>or</Operator>
																													<SecondPart>
																														<Expression>
																															<Type>BooleanExpression</Type>
																															<FirstPart>
																																<Expression>
																																	<Type>Comparison</Type>
																																	<Operator>Equal</Operator>
																																	<PropName>ControlType</PropName>
																																	<Value>3</Value>
																																</Expression>
																															</FirstPart>
																															<Operator>or</Operator>
																															<SecondPart>
																																<Expression>
																																	<Type>Comparison</Type>
																																	<Operator>Equal</Operator>
																																	<PropName>ControlType</PropName>
																																	<Value>4</Value>
																																</Expression>
																															</SecondPart>
																														</Expression>
																													</SecondPart>
																												</Expression>
																											</SecondPart>
																										</Expression>
																									</SecondPart>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ReturnOnClick</Id>
					<Name>ReturnOnClick</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(ReadOnly) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ReadOnly</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>-1</Value>
							<Cond>value(ReadOnly) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ReadOnly</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop>
					<Id>eventGX</Id>
					<Name>OnClickEvent</Name>
					<Description>{ Cancel | Help | Refresh | 'User Event' | ... }</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GxEventReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (((value(ControlType) == 2) or (value(ControlType) == 20)) or (false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLIMG</ObjectName>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>2</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>20</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>2</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>20</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>ColReadOnly</PropName>
																			<Value>-1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.OnClickEventVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>CaptionClass</Id>
					<Name>CaptionClass</Name>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>CaptionStyle</Id>
					<Name>CaptionStyle</Name>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>CaptionPosition</Id>
					<Name>CaptionPosition</Name>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>CaptionExpression</Id>
					<Name>Caption</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.TextExpressionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CaptionExpressionAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CaptionExpressionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>CaptionValue</Id>
					<Name>CaptionValue</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(CaptionExpression)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>CaptionExpression</PropName>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnCaptionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='CustomAttribute'>Artech.Common.Properties.PropertyBindingAttribute(Property=CaptionExpression), Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagPropertyBind'>CaptionExpression</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>LayoutClass</Id>
					<Name>LayoutClass</Name>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>FontBold</Id>
					<Name>FontBold</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontItalic</Id>
					<Name>FontItalic</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontName</Id>
					<Name>FontName</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontSize</Id>
					<Name>FontSize</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontStrikethru</Id>
					<Name>FontStrikethru</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontUnderline</Id>
					<Name>FontUnderline</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(FontStrikethru) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>FontStrikethru</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Link</Id>
					<Name>Link</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ControlType) == 2) and (context(UserMode) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>((value(AttType) == 7) or (value(AttType) == 14)) and (context(UserMode) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>Text</Id>
					<Name>InternalCaption</Name>
					<Description>InternalCaption</Description>
					<Type>Text</Type>
					<Default>Text</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>((value(ControlType) == 0) or (value(ControlType) == 4)) and (context(UserMode) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLBODY' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>63</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>bgColor</Id>
					<Name>Backcolor</Name>
					<Description>Background color behind the element</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>text</Id>
					<Name>TextColor</Name>
					<Description>Current text (foreground) color for the document body</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>backgroundGX</Id>
					<Name>Background</Name>
					<Description>The picture is tiled behind the text and graphics</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>bgProperties</Id>
					<Name>BackgroundProperties</Name>
					<Description>Properties for the background picture</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>noWrap</Id>
					<Name>WordWrap</Name>
					<Description>Enables or disables automatic wordwrapping for the element</Description>
					<Type>Boolean</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Group>
					<Name>Links Color</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>aLink</Id>
							<Name>ActiveLinkColor</Name>
							<Description>Color for the active link</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Options>
								<Option type='StrVal Color'/>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>link</Id>
							<Name>NotVisitedLinkColor</Name>
							<Description>Color of links that have not yet been visited</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Options>
								<Option type='StrVal Color'/>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>vLink</Id>
							<Name>VisitedLinkColor</Name>
							<Description>Color of links that have been visited</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Options>
								<Option type='StrVal Color'/>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Margins</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>topMargin</Id>
							<Name>TopMargin</Name>
							<Description>Margin, in pixels, for the top of the page and overrides the default margin</Description>
							<Type>Text</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDontUseHtmlDefault'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>bottomMargin</Id>
							<Name>BottomMargin</Name>
							<Description>Margin, in pixels, for the bottom of the page and overrides the default margin</Description>
							<Type>Text</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDontUseHtmlDefault'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>leftMargin</Id>
							<Name>LeftMargin</Name>
							<Description>Left margin, in pixels, for the entire body of the page and overrides the default margin</Description>
							<Type>Text</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDontUseHtmlDefault'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>rightMargin</Id>
							<Name>RightMargin</Name>
							<Description>Right margin, in pixels, for the entire body of the page and overrides the default margin</Description>
							<Type>Text</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDontUseHtmlDefault'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>Caption</Id>
					<Name>InternalCaption</Name>
					<Description>InternalCaption</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Event)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Event</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(CaptionExpression)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>CaptionExpression</PropName>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnCaptionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='CustomAttribute'>Artech.Common.Properties.PropertyBindingAttribute(Property=CaptionExpression), Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagPropertyBind'>CaptionExpression</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>CaptionExpression</Id>
					<Name>Caption</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.TextExpressionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CaptionExpressionAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CaptionExpressionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLBTN' inheritance='HTMLOBJ '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>55</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>Class</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Event</Id>
					<Name>OnClickEvent</Name>
					<Description>{ Cancel | Help | Refresh | 'User Event' | ... }</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GxEventReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Caption)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Caption</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Required'/>
						<Depend type='Default'>
							<Value>Enter</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnEventDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>Caption</Id>
					<Name>InternalCaption</Name>
					<Description>InternalCaption</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Event)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Event</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(CaptionExpression)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>CaptionExpression</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Required'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnCaptionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='CustomAttribute'>Artech.Common.Properties.PropertyBindingAttribute(Property=CaptionExpression), Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagPropertyBind'>CaptionExpression</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>CaptionExpression</Id>
					<Name>Caption</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.TextExpressionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CaptionExpressionAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CaptionExpressionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>accesskey</Id>
					<Name>AccessKey</Name>
					<Description>Access Key</Description>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>Font</Id>
							<Name>Font</Name>
							<Description>Font</Description>
							<Type>Custom</Type>
							<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Microsoft Sans Serif,10</Value>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ForeColor</Id>
							<Name>ForeColor</Name>
							<Description>ForeColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>WindowText</Value>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ForeColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BackColor</Id>
							<Name>BackColor</Name>
							<Description>BackColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>ButtonFace</Value>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Border</Id>
							<Name>BorderWidth</Name>
							<Description>Width of the border to be drawn around the control</Description>
							<Type>Text</Type>
							<Default>2</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBorderWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BorderColor</Id>
							<Name>BorderColor</Name>
							<Type>Color</Type>
							<Default>ButtonHighlight</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BorderColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ButtonBorderStyle</Id>
							<Name>BorderStyle</Name>
							<Description>BorderStyle</Description>
							<Type>Combo</Type>
							<Default>standard</Default>
							<Values>
								<Value id='standard' desc='Standard'/>
								<Value id='rounded' desc='Rounded'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnBorderStyleDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>enabled</Id>
							<Name>enabled</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == true) or (context(UserMode) == 0)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Enabled</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontBold</Id>
					<Name>FontBold</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontItalic</Id>
					<Name>FontItalic</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontName</Id>
					<Name>FontName</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontSize</Id>
					<Name>FontSize</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontStrikethru</Id>
					<Name>FontStrikethru</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontUnderline</Id>
					<Name>FontUnderline</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(FontStrikethru) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>FontStrikethru</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLCONTHOLDER' inheritance='HTML_PROP_EXT_USRMODE '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>88</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>PROP_OBJ_CTRL_PGMNAME</Id>
					<Name>Pgmname</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>PROP_OBJ_CTRL_PGMDESC</Id>
					<Name>Pgmdesc</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLDATAREA' inheritance='HTML_PROP_EXT_USRMODE '>
		<Group hidden='1'>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>87</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLDIV' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>91</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>id</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>height</Id>
					<Name>Height</Name>
					<Description>Calculated height of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>width</Id>
					<Name>Width</Name>
					<Description>Calculated width of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
					</Metadata>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((context(idIsSDControl) == -1) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>idIsSDControl</PropName>
																			<Value>-1</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>align</Id>
							<Name>Align</Name>
							<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
							<Type>Combo</Type>
							<Default>left</Default>
							<Values>
								<Value id='center' desc='Center'/>
								<Value id='left' desc='Left'/>
								<Value id='right' desc='Right'/>
								<Value id='textTop' desc='TextTop'/>
								<Value id='top' desc='Top'/>
								<Value id='middle' desc='Middle'/>
								<Value id='absMiddle' desc='AbsMiddle'/>
								<Value id='bottom' desc='Bottom'/>
								<Value id='absBottom' desc='AbsBottom'/>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsAbstractLayoutControl) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>textTop</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>top</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>middle</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>absMiddle</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>bottom</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>absBottom</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>vAlign</Id>
							<Name>VerticalAlign</Name>
							<Description>How the text and other content of an element is vertically aligned within the element</Description>
							<Type>Combo</Type>
							<Default>middle</Default>
							<Values>
								<Value id='baseline' desc='BaseLine' help='Aligns the baseline of the first line of text with the baselines in adjacent elements.'/>
								<Value id='bottom' desc='Bottom' help='Aligns the text at the bottom of the element.'/>
								<Value id='middle' desc='Middle' help='Aligns the text in the middle of the element. This is the default value for this property.'/>
								<Value id='top' desc='Top' help='Aligns the text at the top of the element.'/>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(IsAbstractLayoutControl) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>top</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>baseline</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>SemanticContent</Id>
					<Name>SemanticContent</Name>
					<Type>Combo</Type>
					<Default>div</Default>
					<Values>
						<Value id='header' desc='Header'/>
						<Value id='h1' desc='Subtitle1'/>
						<Value id='h2' desc='Subtitle2'/>
						<Value id='h3' desc='Subtitle3'/>
						<Value id='h4' desc='Subtitle4'/>
						<Value id='h5' desc='Subtitle5'/>
						<Value id='h6' desc='Subtitle6'/>
						<Value id='section' desc='Section'/>
						<Value id='main' desc='Main'/>
						<Value id='footer' desc='Footer'/>
						<Value id='div' desc='General'/>
						<Value id='address' desc='Address'/>
						<Value id='nav' desc='Navigation menu'/>
						<Value id='article' desc='Reference container'/>
						<Value id='aside' desc='Related'/>
					</Values>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLELEM'>
	</Object>
	<Object id='HTMLEMBPAGE' inheritance='HTML_PROP_EXT_USRMODE '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>69</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>BorderStyle</Id>
					<Name>BorderStyle</Name>
					<Description>BorderStyle</Description>
					<Type>Combo Int</Type>
					<Default>2</Default>
					<Values>
						<Value id='0' desc='None'/>
						<Value id='1' desc='Single'/>
						<Value id='2' desc='3D'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Default'>
							<Value>2</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>1</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>PROP_EMBPAGE_scrolling</Id>
					<Name>ScrollBars</Name>
					<Type>Combo</Type>
					<Default>auto</Default>
					<Values>
						<Value id='auto' desc='Automatic'/>
						<Value id='yes' desc='Yes'/>
						<Value id='no' desc='No'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop>
					<Id>PROP_EMBPAGE_src</Id>
					<Name>Source</Name>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>GxWidth</Id>
					<Name>Width</Name>
					<Description>Calculated width of the element</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 112</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>112</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificationFormat'>measure</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>GxHeight</Id>
					<Name>Height</Name>
					<Description>Calculated height of the element</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(ControlType) != 0) and (context(ControlType) != 4)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>ControlType</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>ControlType</PropName>
											<Value>4</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 112</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>112</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificationFormat'>measure</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>GxWidthUnit</Id>
					<Name>WidthUnit</Name>
					<Description>Unit used in width of the element</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>GxHeightUnit</Id>
					<Name>HeightUnit</Name>
					<Description>Unit used in height of the element</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>align</Id>
					<Name>Align</Name>
					<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
					<Type>Combo</Type>
					<Default>left</Default>
					<Values>
						<Value id='center' desc='Center'/>
						<Value id='left' desc='Left'/>
						<Value id='right' desc='Right'/>
						<Value id='textTop' desc='TextTop'/>
						<Value id='top' desc='Top'/>
						<Value id='middle' desc='Middle'/>
						<Value id='absMiddle' desc='AbsMiddle'/>
						<Value id='bottom' desc='Bottom'/>
						<Value id='absBottom' desc='AbsBottom'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>true</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Default'>
							<Value>center</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>textTop</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>top</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>middle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absMiddle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>bottom</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absBottom</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLERRVW' inheritance='HTML_PROP_EXT_USRMODE '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>67</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>Class</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>DisplayMode</Id>
					<Name>DisplayMode</Name>
					<Type>Combo Int</Type>
					<Default>1</Default>
					<Values>
						<Value id='1' desc='Bullet List'/>
						<Value id='2' desc='List'/>
					</Values>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ForeColor</Id>
					<Name>ForeColor</Name>
					<Description>ForeColor</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Default'>
							<Value>WindowText</Value>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLSFLCOL</ObjectName>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 102</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>102</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 103</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>103</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 104</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>104</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 105</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>105</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(FormType) != Text</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>FormType</PropName>
									<Value>Text</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='NoSys Color'/>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ForeColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Font</Id>
					<Name>Font</Name>
					<Description>Font</Description>
					<Type>Custom</Type>
					<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Default'>
							<Value>Microsoft Sans Serif,10</Value>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 112</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>112</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Fill</Id>
					<Name>Fill</Name>
					<Description>Fill</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 102</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>102</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 103</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>103</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 104</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>104</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 105</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>105</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and ((context(FormType) != Text) or (true))</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>BackColor</Id>
					<Name>BackColor</Name>
					<Description>BackColor</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(Fill) == false) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>Fill</PropName>
											<Value>false</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLSFLCOL</ObjectName>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 102</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>102</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 103</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>103</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 104</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>104</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 105</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>105</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(FormType) != Text</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>FormType</PropName>
									<Value>Text</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='NoSys Color'/>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLFIELDSET' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>89</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>Caption</Id>
					<Name>InternalCaption</Name>
					<Description>InternalCaption</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Event)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Event</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(CaptionExpression)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>CaptionExpression</PropName>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnCaptionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='CustomAttribute'>Artech.Common.Properties.PropertyBindingAttribute(Property=CaptionExpression), Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagPropertyBind'>CaptionExpression</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>CaptionExpression</Id>
					<Name>Caption</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.TextExpressionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Default'>
							<Value>Group</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CaptionExpressionAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CaptionExpressionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>id</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>height</Id>
					<Name>Height</Name>
					<Description>Calculated height of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>width</Id>
					<Name>Width</Name>
					<Description>Calculated width of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLIMG' inheritance='HTMLELEM IMG_CONTROL CONTROL '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>65</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>id</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>src</Id>
					<Name>Source</Name>
					<Description>Image to be shown</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>srcname</Id>
					<Name>srcname</Name>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ImageNameDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>imagereference</Id>
					<Name>Image</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='FlagSpecificationName'>src</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>lowsrc</Id>
					<Name>LowResSource</Name>
					<Description>Lower-resolution image to display</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificationName'>lowsrc</Value>
						<Value name='FlagDisplayName'>LowRes Source</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>lowimagereference</Id>
					<Name>LowResolutionImage</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='FlagSpecificationName'>lowsrc</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>height</Id>
							<Name>Height</Name>
							<Description>Calculated height of the element</Description>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) or (context(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AutoResize) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AutoResize</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>width</Id>
							<Name>Width</Name>
							<Description>Calculated width of the element</Description>
							<Type>Text</Type>
							<Default></Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) or (context(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>context(AutoResize) == -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AutoResize</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>border</Id>
							<Name>BorderWidth</Name>
							<Description>Width of the border to be drawn around the TABLE</Description>
							<Type>Text</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or ((value(IsAbstractLayoutControl) == false) or (false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLTBL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBorderWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>alt</Id>
							<Name>AlternateText</Name>
							<Description>Optional text as an alternative to the graphic for rendering in nongraphical environments</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>title</Id>
							<Name>Tooltiptext</Name>
							<Description>Advisory information (a ToolTip) for the object</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Tooltip Text</Value>
								<Value name='FlagRuntimeName'>TooltipText</Value>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>hspace</Id>
							<Name>HSpace</Name>
							<Description>Horizontal margins for the element in pixels</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>vspace</Id>
							<Name>VSpace</Name>
							<Description>Vertical margins for the element in pixels</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>align</Id>
							<Name>Align</Name>
							<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
							<Type>Combo</Type>
							<Default>left</Default>
							<Values>
								<Value id='center' desc='Center'/>
								<Value id='left' desc='Left'/>
								<Value id='right' desc='Right'/>
								<Value id='textTop' desc='TextTop'/>
								<Value id='top' desc='Top'/>
								<Value id='middle' desc='Middle'/>
								<Value id='absMiddle' desc='AbsMiddle'/>
								<Value id='bottom' desc='Bottom'/>
								<Value id='absBottom' desc='AbsBottom'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>enabled</Id>
							<Name>enabled</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == true) or (context(UserMode) == 0)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Enabled</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Behavior</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>useMap</Id>
							<Name>UseMap</Name>
							<Description>Sets a URL, often with a bookmark extension (#name), to use as a client-side image map</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>ReturnOnClick</Id>
					<Name>ReturnOnClick</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>eventGX</Id>
					<Name>OnClickEvent</Name>
					<Description>{ Cancel | Help | Refresh | 'User Event' | ... }</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GxEventReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Bitmap</Id>
					<Name>Bitmap</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Link</Id>
					<Name>Link</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>LinkTarget</Id>
					<Name>LinkTarget</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLLAYOUT' inheritance='HTML_PROP_EXT_USRMODE '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>95</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>formId</Id>
					<Name>FormId</Name>
					<Type>Integer</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLLINK' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>66</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>href</Id>
					<Name>URL</Name>
					<Description>Destination URL</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLOBJ'>
	</Object>
	<Object id='HTMLSFL' inheritance='HTMLOBJ '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>56</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>GxObjClass</Id>
					<Name>GxObjClass</Name>
					<Type>Integer</Type>
					<Default>-1</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ObjClsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ControlBaseTable</Id>
					<Name>BaseTrn</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.BaseTableType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (not (value(GxObjClass) == 0))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ControlOrder</Id>
					<Name>Order</Name>
					<Description>Grid order</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.OrderType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (not (value(GxObjClass) == 0))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlWhere</Id>
					<Name>Conditions</Name>
					<Description>Filter conditions</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ConditionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and ((value(GxObjClass) != 0) or ((((context(ControlType) == 4) or ((context(ControlType) == 7) or (context(IsUserControlWithDynamicValues) == -1))) and (context(DataSourceFrom) == Attributes)) or ((context(ControlType) == 2) and ((context(EditAutocomplete) != 0) or (context(InputType) != 0)))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSFLFS</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>FORMSFL</ObjectName>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>GxObjClass</PropName>
															<Value>0</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName source='context'>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName source='context'>IsUserControlWithDynamicValues</PropName>
																					<Value>-1</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName source='context'>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName source='context'>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(IsUserControlWithDynamicValues) == 0) and (context(IsUserControl) == -1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>IsUserControlWithDynamicValues</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>IsUserControl</PropName>
											<Value>-1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlWhereDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ControlUnique</Id>
					<Name>Unique</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.UniqueType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (not (value(GxObjClass) == 0))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>SAVE_STATE</Id>
					<Name>SaveState</Name>
					<Description>Enables or disables state saving. When it is enabled, the grid state information such as pagination position, filtering and sorting will be saved in the Web Session. When the grid container page is reloaded, the grid state will be restored to the last known configuration</Description>
					<Type>Boolean</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.SaveStateApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>idDataSelector</Id>
					<Name>DataSelector</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(GxObjClass) != 0) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>DATASELECTOR</ObjectName>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLFS</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=ffd44be7-3bb4-4d01-9e7e-d1c1a3c095af,SelfExclude=true,CheckCyclicReference=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>idDataSelectorParms</Id>
					<Name>Parameters</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(GxObjClass) != 0) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>DATASELECTOR</ObjectName>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLFS</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.DataSelectorParamsApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>SdtColMember</Id>
					<Name>Collection</Name>
					<Description>Collection</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.SDTLevelType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) != 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>SflRender</Id>
							<Name>CustomRender</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.UserControlReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>BaseClass</Id>
							<Name>BaseClass</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop>
							<Id>Class</Id>
							<Name>Class</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagNoSpecifyValue'>(none)</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>PROP_EMPTYDATASETTEXT</Id>
							<Name>EmptyGridText</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AutoResize</Id>
							<Name>AutoResize</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>GxWidth</Id>
							<Name>Width</Name>
							<Description>Calculated width of the element</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Readonly'>
									<Cond>value(AutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>GxHeight</Id>
							<Name>Height</Name>
							<Description>Calculated height of the element</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(ControlType) != 0) and (context(ControlType) != 4)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>ControlType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(AutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Valid'/>
							</Options>
						</Prop>
						<Prop>
							<Id>backgroundGX</Id>
							<Name>Background</Name>
							<Description>The picture is tiled behind the text and graphics</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Border</Id>
							<Name>BorderWidth</Name>
							<Description>Width of the border to be drawn around the control</Description>
							<Type>Text</Type>
							<Default>2</Default>
							<Dependencies>
								<Depend type='Default'>
									<Value>1</Value>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBorderWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BackColorStyle</Id>
							<Name>BackColorStyle</Name>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='None'/>
								<Value id='1' desc='Uniform'/>
								<Value id='2' desc='Header'/>
								<Value id='3' desc='Report'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BackStyle</Id>
							<Name>BackStyle</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(BackColorStyle) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>BackColorStyle</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AllBackColor</Id>
							<Name>BackColor</Name>
							<Type>Color</Type>
							<Default>Window</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(BackColorStyle) != 1) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>BackColorStyle</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AllBackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>BackColorOdd</Id>
							<Name>BackColorOdd</Name>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>BackColorEven</Id>
							<Name>BackColorEven</Name>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>borderColor</Id>
							<Name>BorderColor</Name>
							<Description>Sets the border color</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or ((value(IsAbstractLayoutControl) == false) or (false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLTBL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BorderColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='StrVal Color'/>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>MaxCols</Id>
							<Name>Columns</Name>
							<Description>Max Columns, 0 = Unlimited</Description>
							<Type>Integer</Type>
							<Default>1</Default>
							<Dependencies>
								<Depend type='Not Show'/>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(SflRender) == FlexGrid</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>SflRender</PropName>
											<Value>FlexGrid</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagSpecificable'></Value>
								<Value name='FlagOnlyDefault'>IfNotVisible</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>MaxRows</Id>
							<Name>Rows</Name>
							<Description>Max Rows</Description>
							<Type>Integer</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(MaxCols) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>MaxCols</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>5</Value>
									<Cond>value(GxObjClass) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>GxObjClass</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Group>
							<Id>GROUP_PAGINGMODE</Id>
							<Name>PagingMode</Name>
							<Description>Paging Mode</Description>
							<Type>Group</Type>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.PagingModeApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Children>
								<Prop>
									<Id>InfiniteScrolling</Id>
									<Name>Paging</Name>
									<Description>Paging Mode</Description>
									<Type>Combo Int</Type>
									<Default>0</Default>
									<Values>
										<Value id='0' desc='One page at a time'/>
										<Value id='1' desc='Infinite scrolling'/>
									</Values>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
										<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.PagingModeApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>ScrollBar</Id>
									<Name>ScrollBar</Name>
									<Description>Show Scroll Bar</Description>
									<Type>Combo Int</Type>
									<Default>0</Default>
									<Values>
										<Value id='0' desc='Grid'/>
										<Value id='1' desc='Form'/>
									</Values>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(InfiniteScrolling) == 1</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>InfiniteScrolling</PropName>
													<Value>1</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
										<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.PagingModeApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Prop>
							<Id>header</Id>
							<Name>Header</Name>
							<Description>Header text displayed above the table</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>title</Id>
							<Name>Tooltiptext</Name>
							<Description>Advisory information (a ToolTip) for the object</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Tooltip Text</Value>
								<Value name='FlagRuntimeName'>TooltipText</Value>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Group>
							<Name>Lines</Name>
							<Type>Group</Type>
							<Children>
								<Prop>
									<Id>LinesColor</Id>
									<Name>LinesColor</Name>
									<Type>Color</Type>
									<Default>WindowText</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(context(UserMode) == 1) and (context(FormType) != Text)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>FormType</PropName>
															<Value>Text</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LinesForeColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
									<Options>
										<Option type='NoSys Color'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>LinesBackColor</Id>
									<Name>LinesBackColor</Name>
									<Type>Color</Type>
									<Default>Window</Default>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>value(BackColorStyle) &lt; 2</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Less</Operator>
													<PropName>BackColorStyle</PropName>
													<Value>2</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Apply'>
											<Cond>(context(UserMode) == 1) and (context(FormType) != Text)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>FormType</PropName>
															<Value>Text</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LinesBackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>LinesBackColor2</Id>
									<Name>LinesBackColorEven</Name>
									<Type>Color</Type>
									<Default>Window</Default>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>value(BackColorStyle) &lt; 3</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Less</Operator>
													<PropName>BackColorStyle</PropName>
													<Value>3</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Apply'>
											<Cond>context(UserMode) == 1</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LinesBackColorEvenDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
									<Options>
										<Option type='NoSys Color'/>
									</Options>
								</Prop>
								<Prop>
									<Id>LinesFont</Id>
									<Name>LinesFont</Name>
									<Type>Custom</Type>
									<Default>Courier New,9</Default>
									<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(context(UserMode) == 1) and (context(FormType) != Text)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>FormType</PropName>
															<Value>Text</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LinesFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Group>
							<Name>Title</Name>
							<Type>Group</Type>
							<Children>
								<Prop>
									<Id>TitleColor</Id>
									<Name>TitleForeColor</Name>
									<Type>Color</Type>
									<Default>WindowText</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>context(UserMode) == 1</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TitleForeColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
									<Options>
										<Option type='NoSys Color'/>
									</Options>
								</Prop>
								<Prop>
									<Id>TitleBackColor</Id>
									<Name>TitleBackColor</Name>
									<Type>Color</Type>
									<Default>Window</Default>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>(value(BackColorStyle) &lt; 2) and (context(UserMode) == 1)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Less</Operator>
															<PropName>BackColorStyle</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Apply'>
											<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TitleBackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
										<Value name='FlagWebLayoutProperty'></Value>
									</Metadata>
									<Options>
										<Option type='NoSys Color'/>
									</Options>
								</Prop>
								<Prop>
									<Id>TitleFont</Id>
									<Name>TitleFont</Name>
									<Type>Custom</Type>
									<Default>Microsoft Sans Serif,8,style=Bold</Default>
									<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>context(UserMode) == 1</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TitleFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Paging</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>IdRecordCount</Id>
							<Name>RecordCount</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IdPageCount</Id>
							<Name>PageCount</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IdCurrentPage</Id>
							<Name>CurrentPage</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Layout</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>align</Id>
							<Name>Align</Name>
							<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
							<Type>Combo</Type>
							<Default>left</Default>
							<Values>
								<Value id='center' desc='Center'/>
								<Value id='left' desc='Left'/>
								<Value id='right' desc='Right'/>
								<Value id='textTop' desc='TextTop'/>
								<Value id='top' desc='Top'/>
								<Value id='middle' desc='Middle'/>
								<Value id='absMiddle' desc='AbsMiddle'/>
								<Value id='bottom' desc='Bottom'/>
								<Value id='absBottom' desc='AbsBottom'/>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>textTop</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>top</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>middle</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>absMiddle</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>bottom</Value>
								</Depend>
								<Depend type='Invalid'>
									<Value>absBottom</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>cellPadding</Id>
							<Name>CellPadding</Name>
							<Description>Amount of space between the border of the cell and the contents of the cell</Description>
							<Type>Text</Type>
							<Default>1</Default>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>cellSpacing</Id>
							<Name>CellSpacing</Name>
							<Description>Amount of space between cells in a table</Description>
							<Type>Text</Type>
							<Default>2</Default>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Behavior</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>Sortable</Id>
							<Name>Sortable</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AllowDrop</Id>
							<Name>AllowDrop</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AllowDrag</Id>
							<Name>AllowDrag</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>NotifyContextChange</Id>
							<Name>NotifyContextChange</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AllowCollapsing</Id>
							<Name>AllowCollapsing</Name>
							<Description>Allow the grid to collapse/expand</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Collapsed</Id>
							<Name>Collapsed</Name>
							<Description>If collapsable, displays item collapsed</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(AllowCollapsing) == false) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AllowCollapsing</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AllowSelection</Id>
							<Name>AllowSelection</Name>
							<Description>Allow Selection of Rows with the Mouse</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>SelectionColor</Id>
							<Name>SelectionColor</Name>
							<Description>Color of Selected Row</Description>
							<Type>Color</Type>
							<Default>128, 255, 255</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(AllowSelection) == false) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AllowSelection</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AllowHover</Id>
							<Name>AllowHovering</Name>
							<Description>Mark Rows as Mouse Hovers over them</Description>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(AllowSelection) == false) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AllowSelection</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>HoverColor</Id>
							<Name>HoveringColor</Name>
							<Description>Color of Row over which the Mouse Hovers</Description>
							<Type>Color</Type>
							<Default>0, 192, 192</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>((value(AllowSelection) == false) or (value(AllowHover) == false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AllowSelection</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AllowHover</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>InverseLoading</Id>
							<Name>InverseLoading</Name>
							<Description>Inverse Loading</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(InfiniteScrolling) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>InfiniteScrolling</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>rules</Id>
					<Name>Rules</Name>
					<Description>Specifies which dividing lines are displayed</Description>
					<Type>Combo</Type>
					<Default>none</Default>
					<Values>
						<Value id='all' desc='All'/>
						<Value id='cols' desc='Columns'/>
						<Value id='rows' desc='Rows'/>
						<Value id='none' desc='None'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLSFLATT' inheritance='HTMLOBJ ATT_CONTROL CONTROL '>
	</Object>
	<Object id='HTMLSFLCOL' inheritance='HTMLSFLATT HTMLOBJ ATT_CONTROL CONTROL '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Metadata>
				<Value name='ParentResolver'>Artech.Genexus.Common.Resolvers.ControlParentResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
			</Metadata>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>58</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsEnumerated</Id>
					<Name>BasedOnEnumerated</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsEnumeratedDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDisplayName'>Based on Enumerated</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttType</Id>
					<Name>AttType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EXT_ATT_TYPE_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseAttType</Id>
					<Name>BaseAttType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BaseAttTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>PROP_EXT_BASE_ATT_COLLECTION</Id>
					<Name>PROP_EXT_BASE_ATT_COLLECTION</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BaseAttCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttName</Id>
					<Name>AttName</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColEXTSdtCtrlName</Id>
					<Name>ColEXTSdtCtrlName</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttDateFormat</Id>
					<Name>AttDateFormat</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>GxObjClass</Id>
					<Name>GxObjClass</Name>
					<Type>Integer</Type>
					<Default>-1</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ObjClsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>isVariable</Id>
					<Name>isVariable</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsVariableDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>isAttribute</Id>
					<Name>isAttribute</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsAttributeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColCount</Id>
					<Name>ColCount</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttCOL_COUNTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RowCount</Id>
					<Name>RowCount</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttROW_COUNTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ColAttId</Id>
					<Name>Attribute</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>FieldSpecifier</Id>
					<Name>FieldSpecifier</Name>
					<Description>Field Specifier</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.SDTItemType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(value(BaseAttType) == 254) or ((value(BaseAttType) == 252) or ((value(BaseAttType) == 251) or ((value(BaseAttType) == 256) or (value(PROP_EXT_BASE_ATT_COLLECTION) == true))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>BaseAttType</PropName>
											<Value>254</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>BaseAttType</PropName>
													<Value>252</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>BaseAttType</PropName>
															<Value>251</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>BaseAttType</PropName>
																	<Value>256</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>PROP_EXT_BASE_ATT_COLLECTION</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfNotApply</Value>
					</Metadata>
					<Options>
						<Option type='Required'/>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>PROP_SDT_ITEM_OBJECT</Id>
					<Name>SdtItemObject</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Common.Properties.IPropertyBag, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(ColAttId)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>ColAttId</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(FieldSpecifier)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>FieldSpecifier</PropName>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SdtItemObjectDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>(value(AttNumDim) == 0) and ((value(BaseAttType) != 254) and ((value(BaseAttType) != 252) and (value(BaseAttType) != 251)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttNumDim</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>BaseAttType</PropName>
													<Value>254</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>BaseAttType</PropName>
															<Value>252</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>BaseAttType</PropName>
															<Value>251</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.ControlNameVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>Class</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ColumnClass</Id>
					<Name>ColumnClass</Name>
					<Description>Column class applied to this column</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GridColumnClassThemeStyle, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.GridColumnClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>PROP_THEME_COLUMN_HEADER_CLASS_OBJ</Id>
					<Name>ColumnHeaderClass</Name>
					<Description>Column class applied to this column's header</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GridColumnClassThemeStyle, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Id>ControlInfoGroup</Id>
					<Name>Control Info</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(context(UserMode) != 1) or (context(FormType) == Text)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>ControlType</Id>
							<Name>ControlType</Name>
							<Type>Combo Int</Type>
							<Default>2</Default>
							<Values>
								<Value id='0' desc='Combo Box'/>
								<Value id='1' desc='Radio Button'/>
								<Value id='2' desc='Edit'/>
								<Value id='3' desc='Check Box'/>
								<Value id='4' desc='Dynamic Combo Box'/>
								<Value id='6' desc='List Box'/>
								<Value id='7' desc='Dynamic List Box'/>
								<Value id='20' desc='Image'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IsEnumerated)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IsEnumerated</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.WebControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.WebControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.WebControlTypeTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.ControlTypeTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='UITypeEditor'>Artech.Packages.Genexus.UI.TypeEditors.ControlTypeUITypeEditor, Artech.Packages.GenexusUI, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControl</Id>
							<Name>IsUserControl</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithFixedValues</Id>
							<Name>IsUserControlWithFixedValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithFixedValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithDynamicValues</Id>
							<Name>IsUserControlWithDynamicValue</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithDynamicValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsUserControlWithCustomValues</Id>
							<Name>IsUserControlWithCustomValues</Name>
							<Type>Boolean</Type>
							<Metadata>
								<Value name='FlagSerializeToMetadata'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsUserControlWithCustomValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataSourceFrom</Id>
							<Name>Data Source From</Name>
							<Type>Combo</Type>
							<Default>Values</Default>
							<Values>
								<Value id='Values' desc='Values'/>
								<Value id='Attributes' desc='Attributes'/>
								<Value id='DataProvider' desc='Data Provider'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithFixedValues) == true) or ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithFixedValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Attributes</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>DataProvider</Value>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and ((value(ControlType) != 4) and (value(ControlType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>Values</Value>
									<Cond>(value(IsUserControlWithFixedValues) == false) or ((value(ControlType) == 4) or (value(ControlType) == 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>4</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Attributes</Value>
									<Cond>(value(ControlType) == 4) or (value(ControlType) == 7)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>7</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.DataSourceFromTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataSourceFromDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProvider</Id>
							<Name>Data Provider</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=2a9e9aba-d2de-4801-ae7f-5e3819222daf),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DataProviderParameters</Id>
							<Name>Parameters</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(DataSourceFrom) == DataProvider) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>DataProvider</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlValues</Id>
							<Name>Values</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.CT_GXTXVAL_type, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1))) and ((context(UserMode) == 1) and (value(AttType) != 7))) or (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>0</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>6</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithFixedValues) == true) and (value(DataSourceFrom) != Values)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithFixedValues</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>DataSourceFrom</PropName>
													<Value>Values</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsEnumerated) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsEnumerated</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>InputType</Id>
							<Name>InputType</Name>
							<Description>Enter and show data as values or as descriptions</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Values'/>
								<Value id='1' desc='Descriptions'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(idATTISFORMULA) != -1) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InputTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EditAutocomplete</Id>
							<Name>Suggest</Name>
							<Description>Offer suggestions while editing</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='No'/>
								<Value id='1' desc='OnRequest'/>
								<Value id='2' desc='Incremental'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(InputType)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>InputType</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ControlItemDescription)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ControlItemDescription</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(idATTISFORMULA) != -1) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.SuggestDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.SuggestValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.SuggestApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemValues</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemValuesFieldSpecifier</Id>
							<Name>ItemValues</Name>
							<Description>Load Values from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>DPItemDescriptionFieldSpecifier</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from dataprovider using this field specifier</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(DataSourceFrom) == DataProvider) and ((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or (value(ControlType) == 7)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>DataSourceFrom</PropName>
															<Value>DataProvider</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.DataProviderItemDescriptionsValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlItemDescription</Id>
							<Name>ItemDescriptions</Name>
							<Description>Load Descriptions from this attribute</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true)))) or ((value(ControlType) == 2) and (value(InputType) != 0))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>IsUserControlWithDynamicValues</PropName>
																					<Value>true</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>InputType</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagHideVariables'>true</Value>
								<Value name='FlagCanBeNone'>true</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>FilterOperator</Id>
							<Name>FilterOperator</Name>
							<Description>How the suggestions relate to the edit contents</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Begins with'/>
								<Value id='1' desc='Contains'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>MaxItems</Id>
							<Name>SuggestMaxItems</Name>
							<Description>Maximum number of items in the suggestion list</Description>
							<Type>Integer</Type>
							<Default>5</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlSortDescription</Id>
							<Name>SortDescriptions</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((((value(IsUserControlWithFixedValues) == true) or (value(IsUserControlWithDynamicValues) == true)) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 2) and (value(EditAutocomplete) != 0))))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithFixedValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>IsUserControlWithDynamicValues</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>2</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>CaseSensitive</Id>
							<Name>CaseSensitive</Name>
							<Description>Whether to consider case when filtering suggestions</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(EditAutocomplete) != 0) and ((context(UserMode) == 1) and (value(IsUserControl) == false)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>EditAutocomplete</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlDirection</Id>
							<Name>RadioDirection</Name>
							<Type>Combo Int</Type>
							<Default>1</Default>
							<Values>
								<Value id='0' desc='Horizontal'/>
								<Value id='1' desc='Vertical'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 1) and ((context(UserMode) == 1) and ((value(IsUserControl) == false) and (true)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControl</PropName>
																	<Value>false</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>FORMATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>1</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlTitle</Id>
							<Name>ControlTitle</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(ControlType) == 3) or ((value(ControlType) == 1) and (true))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLATT</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlCheckValue</Id>
							<Name>CheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and (true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlUnCheckValue</Id>
							<Name>UncheckedValue</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(IDEnumDefinedValues)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>IDEnumDefinedValues</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 3) and ((value(IsUserControl) == false) and (true))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLCOL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>HTMLATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>ATT</ObjectName>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</FirstPart>
																					<Operator>and</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>IsObject</Type>
																							<ObjectName>FORMSFC</ObjectName>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>IsObject</Type>
																									<ObjectName>FORMATT</ObjectName>
																								</Expression>
																							</FirstPart>
																							<Operator>and</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>3</Value>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>UserMode</PropName>
																			<Value>1</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Required'>
									<Cond>(value(ControlType) == 3) and (value(IsEnumerated) != true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>3</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>IsEnumerated</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.UncheckedValueDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.CheckedUncheckedValueValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlWhere</Id>
							<Name>Conditions</Name>
							<Description>Filter conditions</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ConditionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and ((((value(ControlType) == 4) or ((value(ControlType) == 7) or (value(IsUserControlWithDynamicValues) == true))) and (value(DataSourceFrom) == Attributes)) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSFL</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLSFLFS</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>FORMSFL</ObjectName>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>GxObjClass</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>IsUserControlWithDynamicValues</PropName>
																							<Value>true</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Attributes</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>2</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>EditAutocomplete</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>NotEqual</Operator>
																					<PropName>InputType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsUserControlWithDynamicValues) == false) and (value(IsUserControl) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControlWithDynamicValues</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsUserControl</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlWhereDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>ControlRestrictedBy</Id>
							<Name>InstantiatedAttributes</Name>
							<Description>Additional restrictions by instantiated attributes list</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ParseAttributesList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(DataSourceFrom) == Attributes) and ((value(ControlType) == 4) or (value(ControlType) == 7))) or ((value(ControlType) == 2) and ((value(EditAutocomplete) != 0) or (value(InputType) != 0)))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlRestrictedByDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>count</Id>
							<Name>Count</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(ControlType) == 2) or ((value(ControlType) == 3) or ((value(ControlType) == 1) or (value(ControlType) == 20)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>3</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>20</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(IsStandardVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsStandardVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>AddEmptyItem</Id>
							<Name>EmptyItem</Name>
							<Description>Adds an item for 'none/all' selection</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(((value(IsUserControlWithDynamicValues) == true) and ((value(DataSourceFrom) == Values) or ((value(DataSourceFrom) == Attributes) or (value(DataSourceFrom) == DataProvider)))) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>IsUserControlWithDynamicValues</PropName>
																	<Value>true</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>DataSourceFrom</PropName>
																			<Value>Values</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>Attributes</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>DataSourceFrom</PropName>
																					<Value>DataProvider</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EmptyItemText</Id>
							<Name>EmptyItemText</Name>
							<Description>Text associated with the empty item</Description>
							<Type>Text</Type>
							<Default>GX_EmptyItemText</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(IsUserControlWithDynamicValues) == true) or ((value(ControlType) == 4) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 6) or (value(ControlType) == 1)))))) and ((value(AddEmptyItem) == true) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControlWithDynamicValues</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>1</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AddEmptyItem</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCorrection</Id>
							<Name>Auto correction</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((value(AttType) == 5) or ((value(AttType) == 13) or (value(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCorrectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>AutoCapitalization</Id>
							<Name>Auto capitalization</Name>
							<Type>Combo</Type>
							<Default>FirstWord</Default>
							<Values>
								<Value id='None' desc='None'/>
								<Value id='FirstWord' desc='First word'/>
								<Value id='EachWord' desc='First letter of each word'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((value(IsUserControl) == false) and ((value(AttType) == 5) or ((value(AttType) == 13) or (value(AttType) == 8))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsUserControl</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>5</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>13</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>8</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.Apply.AutoCapitalizationApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.AutoCapitalizationDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>NotifyContextChange</Id>
							<Name>NotifyContextChange</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == false) and (context(idATTISFORMULA) != -1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>idATTISFORMULA</PropName>
													<Value>-1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>ColCtrlName</Id>
					<Name>ColumnName</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(AttNumDim) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttNumDim</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RowIndex</Id>
					<Name>RowIndex</Name>
					<Description>RowIndex</Description>
					<Type>Custom</Type>
					<Default>1</Default>
					<CustomType>Artech.Genexus.Common.CustomTypes.IndexExpression, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Required'>
							<Cond>value(AttNumDim) != 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>AttNumDim</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttNumDim) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttNumDim</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColIndex</Id>
					<Name>ColIndex</Name>
					<Description>ColIndex</Description>
					<Type>Custom</Type>
					<Default>1</Default>
					<CustomType>Artech.Genexus.Common.CustomTypes.IndexExpression, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Required'>
							<Cond>value(AttNumDim) == 2</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttNumDim</PropName>
									<Value>2</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttNumDim) != 2</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>AttNumDim</PropName>
									<Value>2</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Group>
					<Name>Behavior</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>ColReadOnly</Id>
							<Name>ReadOnly</Name>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>((value(isAttribute) == true) and (value(GxObjClass) == 13)) or ((value(ColVisible) == false) or ((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>isAttribute</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>GxObjClass</PropName>
															<Value>13</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ColVisible</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>isAttribute</PropName>
																					<Value>true</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>GxObjClass</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>((value(isAttribute) == true) and (value(GxObjClass) == 13)) or ((value(ColVisible) == false) or ((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>isAttribute</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>GxObjClass</PropName>
															<Value>13</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ColVisible</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>isAttribute</PropName>
																					<Value>true</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>GxObjClass</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>((value(isAttribute) == true) and (value(GxObjClass) == 13)) or ((value(ColVisible) == false) or ((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>isAttribute</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>GxObjClass</PropName>
															<Value>13</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ColVisible</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>isAttribute</PropName>
																					<Value>true</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>GxObjClass</PropName>
																					<Value>0</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(ControlType) == 1) or ((value(AttType) == 7) and (not ((value(isAttribute) == true) and (value(GxObjClass) == 0))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>isAttribute</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>GxObjClass</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>not</Operator>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Autocomplete</Id>
							<Name>InputHistory</Name>
							<Description>InputHistory</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Dependencies>
								<Depend type='Invalid'>
									<Value>-1</Value>
									<Cond>(value(EditAutocomplete) != 0) or (value(IsPassword) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsPassword</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
									<Cond>(value(EditAutocomplete) == 0) and ((value(IsPassword) != true) and ((value(AttType) == 4) or ((value(AttType) == 6) or ((value(AttType) == 12) or ((value(AttType) == 5) or (value(AttType) == 13))))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>IsPassword</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>4</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>6</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>12</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>AttType</PropName>
																							<Value>5</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>AttType</PropName>
																							<Value>13</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(EditAutocomplete) != 0) or (value(IsPassword) == true)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>EditAutocomplete</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsPassword</PropName>
													<Value>true</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(not (value(ColReadOnly) == true)) and ((value(ControlType) == 2) and ((value(idIsSDControl) == false) or (context(UserMode) == 1)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ColReadOnly</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>idIsSDControl</PropName>
																	<Value>false</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>UserMode</PropName>
																	<Value>1</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InputHistoryDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificable'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>EmptyAsNull</Id>
							<Name>EmptyAsNull</Name>
							<Type>Combo</Type>
							<Values>
								<Value id='No' desc='No Nulls'/>
								<Value id='Yes' desc='Empty as Null'/>
								<Value id='Blank' desc='Blank as Null'/>
								<Value id='Compatibility' desc='Compatible'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Type)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Type</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(HAS_DOMAIN)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>HAS_DOMAIN</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(OBJ_TYPE) != id_OTYPE_VAR) and ((context(OBJ_TYPE) != id_OTYPE_SDT) and (context(idATTISFORMULA) != -1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_TYPE</PropName>
													<Value>id_OTYPE_VAR</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>OBJ_TYPE</PropName>
															<Value>id_OTYPE_SDT</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>idATTISFORMULA</PropName>
															<Value>-1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EmptyAsNullDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.EmptyAsNullValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDeklarit'></Value>
								<Value name='FlagDisplayName'>Nulls in Forms</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IsPassword</Id>
							<Name>IsPassword</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(idATTISFORMULA) != -1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>idATTISFORMULA</PropName>
											<Value>-1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>not (value(ControlType) == 2)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(AttType) == 7) or ((value(AttType) == 112) or ((value(AttType) == 93) or ((value(AttType) == 92) or ((value(AttType) == 14) or (value(AttType) == 45)))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>112</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>93</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>92</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>14</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>AttType</PropName>
																					<Value>45</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsPasswordDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>PROP_CTRL_RTPICTURE</Id>
							<Name>Picture</Name>
							<Description>To set the desired format to accept and display the value for an attributte or variable.</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop hidden='1'>
							<Id>PROP_BLOB_DISPLAY</Id>
							<Name>Display</Name>
							<Description>Defines how control is displayed on screen</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Inline'/>
								<Value id='1' desc='Link'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(AttType) == 14</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(isVariable) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>isVariable</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Dyn Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>PROP_BLOB_CONTENTTYPE</Id>
							<Name>ContentType</Name>
							<Description>Content type</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(AttType) == 14</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(IsUserControl) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsUserControl</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ColAutoResize</Id>
							<Name>AutoResize</Name>
							<Type>Boolean</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>-1</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ColumnAutoResizeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ColWidth</Id>
							<Name>Width</Name>
							<Type>Text</Type>
							<Default>30</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ColTitle)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColTitle</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ColAutoResize)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAutoResize</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(ColAutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ColAutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>value(ColAutoResize) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ColAutoResize</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.WebColWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagSpecificable'></Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Height</Id>
							<Name>Height</Name>
							<Description>Height</Description>
							<Type>Text</Type>
							<OldIds>
								<Id>Position.Height</Id>
							</OldIds>
							<Default>17</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(Font)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Font</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(BorderStyle)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>BorderStyle</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(BorderWidth)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>BorderWidth</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(Border)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>Border</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(AutoResize)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AutoResize</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(ColAutoResize) == true) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ColAutoResize</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>(value(ColAutoResize) == true) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ColAutoResize</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.WebColHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSpecificationFormat'>measure</Value>
								<Value name='FlagSpecificable'></Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='No Default'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>ColPosition</Id>
							<Name>Position</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop>
							<Id>ColLinesFont</Id>
							<Name>Font</Name>
							<Type>Custom</Type>
							<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and ((value(AttType) != 7) or (value(AttType) == 14))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>14</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ColumnLinesFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ColLinesColor</Id>
							<Name>ForeColor</Name>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and ((value(AttType) != 7) or (value(AttType) == 14))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>14</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ColumnLinesColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>ColTitle</Id>
							<Name>InternalTitle</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(ColTitleExpression)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColTitleExpression</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ColTitleDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.PropertyBindingAttribute(Property=ColTitleExpression), Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagPropertyBind'>ColTitleExpression</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ColTitleExpression</Id>
							<Name>Title</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.TextExpressionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.ColTitleExpressionAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ColTitleExpressionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagNoSpecify'></Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ColTitleFont</Id>
							<Name>TitleFont</Name>
							<Type>Custom</Type>
							<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ColumnTitleFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ColTitleColor</Id>
							<Name>TitleForeColor</Name>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(ColAttId)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>ColAttId</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ColumnTitleColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>HorizontalAlignment</Id>
							<Name>HorizontalAlignment</Name>
							<Description>HorizontalAlignment</Description>
							<Type>Combo</Type>
							<Default>left</Default>
							<Values>
								<Value id='left' desc='Left'/>
								<Value id='center' desc='Center'/>
								<Value id='right' desc='Right'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(ControlType) == 3</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ControlType</PropName>
											<Value>3</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttAlignDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOldId'>Alignment</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>GxFormat</Id>
							<Name>Format</Name>
							<Type>Combo Int</Type>
							<Values>
								<Value id='0' desc='Text'/>
								<Value id='1' desc='HTML'/>
								<Value id='2' desc='Raw HTML'/>
								<Value id='3' desc='Text with meaningful spaces'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(ControlType) != 2) and (true)) or ((value(AttType) == 7) or ((value(AttType) == 14) or (value(AttType) == 45)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSPAN</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>not</Operator>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>KB</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>RPT_ATT</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>14</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>45</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Readonly'>
									<Cond>(value(ColReadOnly) == false) or (value(ControlType) != 2)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ColReadOnly</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>1</Value>
									<Cond>value(ControlType) != 2</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlAttFormatDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagBuildAction'>RebuildAll</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ColVisible</Id>
							<Name>Visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>BorderStyle</Id>
							<Name>BorderStyle</Name>
							<Description>BorderStyle</Description>
							<Type>Combo Int</Type>
							<Default>2</Default>
							<Values>
								<Value id='0' desc='None'/>
								<Value id='1' desc='Single'/>
								<Value id='2' desc='3D'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(ControlType) == 2) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLEMBPAGE</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'/>
								<Depend type='Default'>
									<Value>1</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (context(ReadOnly) == -1)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ReadOnly</PropName>
																	<Value>-1</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>1</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (context(ReadOnly) == -1)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ReadOnly</PropName>
																	<Value>-1</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (context(ReadOnly) == -1)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ReadOnly</PropName>
																	<Value>-1</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>2</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (context(ReadOnly) == 0)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ReadOnly</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>1</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (context(ReadOnly) == 0)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ReadOnly</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>0</Value>
									<Cond>(value(IsAbstractLayoutControl) == false) and ((value(ControlType) == 2) and ((value(AttType) != 7) and (context(ReadOnly) == 0)))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>2</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>NotEqual</Operator>
																	<PropName>AttType</PropName>
																	<Value>7</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ReadOnly</PropName>
																	<Value>0</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>Border</Id>
							<Name>BorderWidth</Name>
							<Description>Width of the border to be drawn around the control</Description>
							<Type>Text</Type>
							<Default>2</Default>
							<Dependencies>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(AttType) == 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(BorderStyle) != 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>BorderStyle</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) != 7</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBorderWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>alt</Id>
							<Name>AlternateText</Name>
							<Description>Optional text as an alternative to the graphic for rendering in nongraphical environments</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>title</Id>
							<Name>Tooltiptext</Name>
							<Description>Advisory information (a ToolTip) for the object</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Tooltip Text</Value>
								<Value name='FlagRuntimeName'>TooltipText</Value>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>invitemsg</Id>
							<Name>InviteMessage</Name>
							<Description>Text to invite the user to interact with the object</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) != 6) and ((value(AttType) != 14) and (value(AttType) != 7))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>AttType</PropName>
													<Value>6</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>14</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>AttType</PropName>
															<Value>7</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagIndexable'>true</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.InviteMessageDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>hspace</Id>
							<Name>HSpace</Name>
							<Description>Horizontal margins for the element in pixels</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(AttType) == 7) or (value(AttType) == 14)) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLIMG</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>14</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>vspace</Id>
							<Name>VSpace</Name>
							<Description>Vertical margins for the element in pixels</Description>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>((value(AttType) == 7) or (value(AttType) == 14)) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLIMG</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>7</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>AttType</PropName>
																			<Value>14</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Group hidden='1'>
							<Id>PROP_DATEPICKER_GROUP</Id>
							<Name>Date/DateTime specific</Name>
							<Type>Group</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(AttType) == 6) or (value(AttType) == 12)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>6</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>12</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Children>
								<Prop hidden='1'>
									<Id>USE_DATEPICKER</Id>
									<Name>DatePicker</Name>
									<Description>Use date picker for selection</Description>
									<Type>Boolean</Type>
									<Default>true</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>context(UserMode) == 1</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Default'>
											<Value>0</Value>
											<Cond>value(AttDateFormat) == idDATEFORMAT_NONE</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttDateFormat</PropName>
													<Value>idDATEFORMAT_NONE</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Invalid'>
											<Value>-1</Value>
											<Cond>value(AttDateFormat) == idDATEFORMAT_NONE</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttDateFormat</PropName>
													<Value>idDATEFORMAT_NONE</Value>
												</Expression>
											</Condition>
										</Depend>
										<Depend type='Readonly'>
											<Cond>value(AttDateFormat) == idDATEFORMAT_NONE</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttDateFormat</PropName>
													<Value>idDATEFORMAT_NONE</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>FLAT_DATEPICKER</Id>
									<Name>DisplayFlat</Name>
									<Description>Show calendar always open</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>(value(USE_DATEPICKER) == true) and (context(UserMode) == 1)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>USE_DATEPICKER</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Prop>
							<Id>enabled</Id>
							<Name>enabled</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == true) or (context(UserMode) == 0)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(idIsSDControl) == false) and (not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or ((value(ControlType) == 7) or (value(ControlType) == 20)))))))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>1</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>3</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>4</Value>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>BooleanExpression</Type>
																									<FirstPart>
																										<Expression>
																											<Type>Comparison</Type>
																											<Operator>Equal</Operator>
																											<PropName>ControlType</PropName>
																											<Value>6</Value>
																										</Expression>
																									</FirstPart>
																									<Operator>or</Operator>
																									<SecondPart>
																										<Expression>
																											<Type>BooleanExpression</Type>
																											<FirstPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>ControlType</PropName>
																													<Value>7</Value>
																												</Expression>
																											</FirstPart>
																											<Operator>or</Operator>
																											<SecondPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>ControlType</PropName>
																													<Value>20</Value>
																												</Expression>
																											</SecondPart>
																										</Expression>
																									</SecondPart>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Enabled</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>ReturnOnClick</Id>
					<Name>ReturnOnClick</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(ColReadOnly) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ColReadOnly</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>-1</Value>
							<Cond>value(ColReadOnly) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ColReadOnly</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>eventGX</Id>
					<Name>OnClickEvent</Name>
					<Description>{ Cancel | Help | Refresh | 'User Event' | ... }</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GxEventReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (((value(ControlType) == 2) or (value(ControlType) == 20)) and (value(ColReadOnly) == true))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLIMG</ObjectName>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLATT</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>2</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>20</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>2</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>20</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ColReadOnly</PropName>
																			<Value>true</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>LinkTarget</Id>
					<Name>LinkTarget</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>((value(AttType) == 7) or (value(ControlType) == 2)) and ((context(UserMode) == 0) or ((value(AttType) == 14) and (value(PROP_BLOB_DISPLAY) == 1)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AttType</PropName>
															<Value>14</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>PROP_BLOB_DISPLAY</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>Fill</Id>
					<Name>Fill</Name>
					<Description>Fill</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 102</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>102</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 103</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>103</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 104</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>104</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 105</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>105</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Default'>
							<Value>-1</Value>
							<Cond>(context(BackColorStyle) == 1) or ((context(BackColorStyle) == 2) or (context(BackColorStyle) == 3))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>BackColorStyle</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>BackColorStyle</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>BackColorStyle</PropName>
													<Value>3</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>TitleFormat</Id>
					<Name>TitleFormat</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>AttNumDim</Id>
					<Name>Dimensions</Name>
					<Description>Dimensions</Description>
					<Type>Combo</Type>
					<Values>
						<Value id='0' desc='Scalar'/>
						<Value id='1' desc='Vector'/>
						<Value id='2' desc='Matrix'/>
					</Values>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Type)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Type</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(IDEnumDefinedValues)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>IDEnumDefinedValues</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(context(OBJ_TYPE) != id_OTYPE_ATT) and ((context(OBJ_DATATYPE) != DT_BLOB) and ((context(OBJ_DATATYPE) != DT_OBJECT) and (value(IsEnumerated) != true)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_DATATYPE</PropName>
													<Value>DT_BLOB</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>OBJ_DATATYPE</PropName>
															<Value>DT_OBJECT</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>IsEnumerated</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(VarDimsProtected) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>VarDimsProtected</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>1</Value>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>2</Value>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DimensionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttCollection</Id>
					<Name>Collection</Name>
					<Description>Collection</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttDomain)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttDomain</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(OBJ_TYPE) == id_OTYPE_ATT) or (context(OBJ_TYPE) != id_OTYPE_SDT)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>ATT</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>-1</Value>
							<Cond>context(OBJ_TYPE) == id_OTYPE_ATT</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>OBJ_TYPE</PropName>
									<Value>id_OTYPE_ATT</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttCollectionValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.AttCollectionReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Group hidden='1'>
					<Id>AttEditFlags</Id>
					<Name>EditFlags</Name>
					<Description>EditFlags</Description>
					<Type>Group</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
					<Children>
						<Prop hidden='1'>
							<Id>AttEditNameProtected</Id>
							<Name>AttEditNameProtected</Name>
							<Description>AttEditNameProtected</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsStandardVariable</Id>
							<Name>IsStandardVariable</Name>
							<Description>Is standard variable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>idIsAutoDefinedVariable</Id>
							<Name>IsAutoDefinedVariable</Name>
							<Description>Is autodefined variable</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDisableArrays</Id>
							<Name>AttEditDisableArrays</Name>
							<Description>AttEditDisableArrays</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditNewVariable</Id>
							<Name>AttEditNewVariable</Name>
							<Description>AttEditNewVariable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDontAssign</Id>
							<Name>AttEditDontAssign</Name>
							<Description>AttEditDontAssign</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>TitleBackColor</Id>
					<Name>TitleBackColor</Name>
					<Type>Color</Type>
					<Default>Window</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLSFL</ObjectName>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>0</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TitleBackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>TitleBackStyle</Id>
					<Name>TitleBackStyle</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>TitleFontName</Id>
					<Name>TitleFontName</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>TitleFontSize</Id>
					<Name>TitleFontSize</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>TitleFontBold</Id>
					<Name>TitleFontBold</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>TitleFontItalic</Id>
					<Name>TitleFontItalic</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>TitleFontUnderline</Id>
					<Name>TitleFontUnderline</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>TitleFontStrikethru</Id>
					<Name>TitleFontStrikethru</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontBold</Id>
					<Name>FontBold</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontItalic</Id>
					<Name>FontItalic</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontName</Id>
					<Name>FontName</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontSize</Id>
					<Name>FontSize</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontStrikethru</Id>
					<Name>FontStrikethru</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontUnderline</Id>
					<Name>FontUnderline</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or (value(ControlType) == 7)))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>4</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>6</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>7</Value>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(FontStrikethru) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>FontStrikethru</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Link</Id>
					<Name>Link</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(ControlType) == 2) and (context(UserMode) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ControlType</PropName>
											<Value>2</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>((value(AttType) == 7) or (value(AttType) == 14)) and (context(UserMode) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>BackColor</Id>
					<Name>BackColor</Name>
					<Description>BackColor</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(Fill) == false) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>Fill</PropName>
											<Value>false</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>((value(IsAbstractLayoutControl) == true) or (true)) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 102</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>102</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 103</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>103</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 104</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>104</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 105</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>105</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(FormType) != Text</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>FormType</PropName>
									<Value>Text</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='NoSys Color'/>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ForeColor</Id>
					<Name>ForeColor</Name>
					<Description>ForeColor</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>((value(IsAbstractLayoutControl) == true) or (true)) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 102</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>102</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 103</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>103</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 104</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>104</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 105</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>105</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(FormType) != Text</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>FormType</PropName>
									<Value>Text</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='NoSys Color'/>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ForeColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>BackStyle</Id>
					<Name>BackStyle</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not ((value(ControlType) == 2) or ((value(ControlType) == 0) or ((value(ControlType) == 1) or ((value(ControlType) == 3) or ((value(ControlType) == 0) or ((value(ControlType) == 4) or ((value(ControlType) == 6) or ((value(ControlType) == 7) or ((value(ControlType) == 0) or ((value(ControlType) == 2) or ((value(ControlType) == 3) or (value(ControlType) == 4))))))))))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>2</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ControlType</PropName>
															<Value>0</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>ControlType</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>ControlType</PropName>
																			<Value>3</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>ControlType</PropName>
																					<Value>0</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>BooleanExpression</Type>
																					<FirstPart>
																						<Expression>
																							<Type>Comparison</Type>
																							<Operator>Equal</Operator>
																							<PropName>ControlType</PropName>
																							<Value>4</Value>
																						</Expression>
																					</FirstPart>
																					<Operator>or</Operator>
																					<SecondPart>
																						<Expression>
																							<Type>BooleanExpression</Type>
																							<FirstPart>
																								<Expression>
																									<Type>Comparison</Type>
																									<Operator>Equal</Operator>
																									<PropName>ControlType</PropName>
																									<Value>6</Value>
																								</Expression>
																							</FirstPart>
																							<Operator>or</Operator>
																							<SecondPart>
																								<Expression>
																									<Type>BooleanExpression</Type>
																									<FirstPart>
																										<Expression>
																											<Type>Comparison</Type>
																											<Operator>Equal</Operator>
																											<PropName>ControlType</PropName>
																											<Value>7</Value>
																										</Expression>
																									</FirstPart>
																									<Operator>or</Operator>
																									<SecondPart>
																										<Expression>
																											<Type>BooleanExpression</Type>
																											<FirstPart>
																												<Expression>
																													<Type>Comparison</Type>
																													<Operator>Equal</Operator>
																													<PropName>ControlType</PropName>
																													<Value>0</Value>
																												</Expression>
																											</FirstPart>
																											<Operator>or</Operator>
																											<SecondPart>
																												<Expression>
																													<Type>BooleanExpression</Type>
																													<FirstPart>
																														<Expression>
																															<Type>Comparison</Type>
																															<Operator>Equal</Operator>
																															<PropName>ControlType</PropName>
																															<Value>2</Value>
																														</Expression>
																													</FirstPart>
																													<Operator>or</Operator>
																													<SecondPart>
																														<Expression>
																															<Type>BooleanExpression</Type>
																															<FirstPart>
																																<Expression>
																																	<Type>Comparison</Type>
																																	<Operator>Equal</Operator>
																																	<PropName>ControlType</PropName>
																																	<Value>3</Value>
																																</Expression>
																															</FirstPart>
																															<Operator>or</Operator>
																															<SecondPart>
																																<Expression>
																																	<Type>Comparison</Type>
																																	<Operator>Equal</Operator>
																																	<PropName>ControlType</PropName>
																																	<Value>4</Value>
																																</Expression>
																															</SecondPart>
																														</Expression>
																													</SecondPart>
																												</Expression>
																											</SecondPart>
																										</Expression>
																									</SecondPart>
																								</Expression>
																							</SecondPart>
																						</Expression>
																					</SecondPart>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(value(AttType) == 7) or (value(AttType) == 14)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>7</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttType</PropName>
											<Value>14</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>Text</Id>
					<Name>InternalCaption</Name>
					<Description>InternalCaption</Description>
					<Type>Text</Type>
					<Default>Text</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>((value(ControlType) == 0) or (value(ControlType) == 4)) and (context(UserMode) == 0)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>ControlType</PropName>
													<Value>4</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLSFLFS' inheritance='HTMLOBJ '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>57</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>GxObjClass</Id>
					<Name>GxObjClass</Name>
					<Type>Integer</Type>
					<Default>-1</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ObjClsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>SdtColMember</Id>
					<Name>Collection</Name>
					<Description>Collection</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.SDTLevelType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) != 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>RenderingMode</Id>
					<Name>RenderingMode</Name>
					<Type>Combo</Type>
					<Values>
						<Value id='Responsive' desc='Responsive'/>
						<Value id='Tabular' desc='Tabular'/>
					</Values>
					<Dependencies>
						<Depend type='Default'>
							<Value>Responsive</Value>
							<Cond>value(IsAbstractLayoutControl) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsAbstractLayoutControl</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Default'>
							<Value>Tabular</Value>
							<Cond>value(IsAbstractLayoutControl) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsAbstractLayoutControl</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(IsAbstractLayoutControl) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsAbstractLayoutControl</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(SflRender) == FlexGrid</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>SflRender</PropName>
									<Value>FlexGrid</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagWebLayoutSendDefault'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>SAVE_STATE</Id>
					<Name>SaveState</Name>
					<Description>Enables or disables state saving. When it is enabled, the grid state information such as pagination position, filtering and sorting will be saved in the Web Session. When the grid container page is reloaded, the grid state will be restored to the last known configuration</Description>
					<Type>Boolean</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.SaveStateApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>Class</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>idDataSelector</Id>
					<Name>DataSelector</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(GxObjClass) != 0) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>DATASELECTOR</ObjectName>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLFS</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=ffd44be7-3bb4-4d01-9e7e-d1c1a3c095af,SelfExclude=true,CheckCyclicReference=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>idDataSelectorParms</Id>
					<Name>Parameters</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(value(GxObjClass) != 0) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>DATASELECTOR</ObjectName>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLFS</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.DataSelectorParamsApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ControlBaseTable</Id>
					<Name>BaseTrn</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.BaseTableType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (not (value(GxObjClass) == 0))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ControlOrder</Id>
					<Name>Order</Name>
					<Description>Grid order</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.OrderType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (not (value(GxObjClass) == 0))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlWhere</Id>
					<Name>Conditions</Name>
					<Description>Filter conditions</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ConditionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and ((value(GxObjClass) != 0) or ((((context(ControlType) == 4) or ((context(ControlType) == 7) or (context(IsUserControlWithDynamicValues) == -1))) and (context(DataSourceFrom) == Attributes)) or ((context(ControlType) == 2) and ((context(EditAutocomplete) != 0) or (context(InputType) != 0)))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>HTMLSFLFS</ObjectName>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>IsObject</Type>
																			<ObjectName>FORMSFL</ObjectName>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>GxObjClass</PropName>
															<Value>0</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName source='context'>ControlType</PropName>
																			<Value>4</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName source='context'>ControlType</PropName>
																					<Value>7</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>or</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName source='context'>IsUserControlWithDynamicValues</PropName>
																					<Value>-1</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>DataSourceFrom</PropName>
																	<Value>Attributes</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName source='context'>ControlType</PropName>
																	<Value>2</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName source='context'>EditAutocomplete</PropName>
																			<Value>0</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>or</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>NotEqual</Operator>
																			<PropName source='context'>InputType</PropName>
																			<Value>0</Value>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(IsUserControlWithDynamicValues) == 0) and (context(IsUserControl) == -1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>IsUserControlWithDynamicValues</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>IsUserControl</PropName>
											<Value>-1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlWhereDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ControlUnique</Id>
					<Name>Unique</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.UniqueType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and (not (value(GxObjClass) == 0))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>GxObjClass</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>not</Operator>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>AllowDrop</Id>
					<Name>AllowDrop</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>AllowDrag</Id>
					<Name>AllowDrag</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>NotifyContextChange</Id>
					<Name>NotifyContextChange</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>align</Id>
					<Name>Align</Name>
					<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
					<Type>Combo</Type>
					<Default>left</Default>
					<Values>
						<Value id='center' desc='Center'/>
						<Value id='left' desc='Left'/>
						<Value id='right' desc='Right'/>
						<Value id='textTop' desc='TextTop'/>
						<Value id='top' desc='Top'/>
						<Value id='middle' desc='Middle'/>
						<Value id='absMiddle' desc='AbsMiddle'/>
						<Value id='bottom' desc='Bottom'/>
						<Value id='absBottom' desc='AbsBottom'/>
					</Values>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>true</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>textTop</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>top</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>middle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absMiddle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>bottom</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absBottom</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>backgroundGX</Id>
					<Name>Background</Name>
					<Description>The picture is tiled behind the text and graphics</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>borderColor</Id>
					<Name>BorderColor</Name>
					<Description>Sets the border color</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or ((value(IsAbstractLayoutControl) == false) or (false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLTBL</ObjectName>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BorderColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>GxWidth</Id>
					<Name>Width</Name>
					<Description>Calculated width of the element</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>context(AutoResize) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AutoResize</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 112</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>112</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificationFormat'>measure</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>GxHeight</Id>
					<Name>Height</Name>
					<Description>Calculated height of the element</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(ControlType) != 0) and (context(ControlType) != 4)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>ControlType</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>ControlType</PropName>
											<Value>4</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AutoResize) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AutoResize</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 112</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>112</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagSpecificationFormat'>measure</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Valid'/>
					</Options>
				</Prop>
				<Prop>
					<Id>rules</Id>
					<Name>Rules</Name>
					<Description>Specifies which dividing lines are displayed</Description>
					<Type>Combo</Type>
					<Default>none</Default>
					<Values>
						<Value id='all' desc='All'/>
						<Value id='cols' desc='Columns'/>
						<Value id='rows' desc='Rows'/>
						<Value id='none' desc='None'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>cellPadding</Id>
					<Name>CellPadding</Name>
					<Description>Amount of space between the border of the cell and the contents of the cell</Description>
					<Type>Text</Type>
					<Default>1</Default>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>cellSpacing</Id>
					<Name>CellSpacing</Name>
					<Description>Amount of space between cells in a table</Description>
					<Type>Text</Type>
					<Default>2</Default>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Border</Id>
					<Name>BorderWidth</Name>
					<Description>Width of the border to be drawn around the control</Description>
					<Type>Text</Type>
					<Default>2</Default>
					<Dependencies>
						<Depend type='Default'>
							<Value>1</Value>
						</Depend>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBorderWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>SflRender</Id>
							<Name>CustomRender</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.UserControlReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>MaxCols</Id>
							<Name>Columns</Name>
							<Description>Max Columns, 0 = Unlimited</Description>
							<Type>Integer</Type>
							<Default>1</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(SflRender) == FlexGrid</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>SflRender</PropName>
											<Value>FlexGrid</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
									<Cond>value(SflRender) == FlexGrid</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>SflRender</PropName>
											<Value>FlexGrid</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(RenderingMode) == Tabular</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RenderingMode</PropName>
											<Value>Tabular</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagSpecificable'></Value>
								<Value name='FlagOnlyDefault'>IfNotVisible</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>multi_columns</Id>
							<Name>MultiColumns</Name>
							<Description>Sets the number of Columns for each screen size.
Extra Small (Width &lt; 768px). Small (Width &gt;= 768px), Medium (Width &gt;= 992px), Large (Width &gt;= 1200px)</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.Objects.Themes.CustomTypes.MultipleColumnsType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(multi_columns_xs)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>multi_columns_xs</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(multi_columns_sm)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>multi_columns_sm</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(multi_columns_md)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>multi_columns_md</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(multi_columns_lg)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>multi_columns_lg</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>value(RenderingMode) == Responsive</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RenderingMode</PropName>
											<Value>Responsive</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(SflRender) == FlexGrid</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>SflRender</PropName>
											<Value>FlexGrid</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDisplayName'>Columns</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.MultipleColumnsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CompositeTypeAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagNoSpecify'></Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>multi_columns_xs</Id>
							<Name>MultiColumnsExtraSmall</Name>
							<Description>Max Columns for Extra Small screens (Width &lt; 768px)</Description>
							<Type>Integer</Type>
							<Default>1</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(RenderingMode) == Responsive</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RenderingMode</PropName>
											<Value>Responsive</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDisplayName'>Extra Small</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>multi_columns_sm</Id>
							<Name>MultiColumnsSmall</Name>
							<Description>Max Columns for Small screens (Width &gt;= 768px)</Description>
							<Type>Integer</Type>
							<Default>1</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(RenderingMode) == Responsive</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RenderingMode</PropName>
											<Value>Responsive</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDisplayName'>Small</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>multi_columns_md</Id>
							<Name>MultiColumnsMedium</Name>
							<Description>Max Columns for Medium screens (Width &gt;= 992px)</Description>
							<Type>Integer</Type>
							<Default>1</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(RenderingMode) == Responsive</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RenderingMode</PropName>
											<Value>Responsive</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDisplayName'>Medium</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>multi_columns_lg</Id>
							<Name>MultiColumnsLarge</Name>
							<Description>Max Columns for Large screens (Width &gt;= 1200px)</Description>
							<Type>Integer</Type>
							<Default>1</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(RenderingMode) == Responsive</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RenderingMode</PropName>
											<Value>Responsive</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagDisplayName'>Large</Value>
								<Value name='FlagSpecificable'>IfApply</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop>
							<Id>PROP_EMPTYDATASETTEXT</Id>
							<Name>EmptyGridText</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>MaxRows</Id>
							<Name>Rows</Name>
							<Description>Max Rows</Description>
							<Type>Integer</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(MaxCols) == 0) and (value(RenderingMode) == Tabular)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>MaxCols</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFL</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>RenderingMode</PropName>
															<Value>Tabular</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>5</Value>
									<Cond>value(GxObjClass) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>GxObjClass</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Group>
							<Id>GROUP_PAGINGMODE</Id>
							<Name>PagingMode</Name>
							<Description>Paging Mode</Description>
							<Type>Group</Type>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.PagingModeApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Children>
								<Prop>
									<Id>InfiniteScrolling</Id>
									<Name>Paging</Name>
									<Description>Paging Mode</Description>
									<Type>Combo Int</Type>
									<Default>0</Default>
									<Values>
										<Value id='0' desc='One page at a time'/>
										<Value id='1' desc='Infinite scrolling'/>
									</Values>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
										<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.PagingModeApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>ScrollBar</Id>
									<Name>ScrollBar</Name>
									<Description>Show Scroll Bar</Description>
									<Type>Combo Int</Type>
									<Default>0</Default>
									<Values>
										<Value id='0' desc='Grid'/>
										<Value id='1' desc='Form'/>
									</Values>
									<Dependencies>
										<Depend type='Apply'>
											<Cond>value(InfiniteScrolling) == 1</Cond>
											<Condition>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>InfiniteScrolling</PropName>
													<Value>1</Value>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
										<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.PagingModeApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Group>
							<Name>Collapsing</Name>
							<Type>Group</Type>
							<Children>
								<Prop>
									<Id>AllowCollapsing</Id>
									<Name>AllowCollapsing</Name>
									<Description>Allow the grid to collapse/expand</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
									</Metadata>
								</Prop>
								<Prop>
									<Id>Collapsed</Id>
									<Name>Collapsed</Name>
									<Description>If collapsable, displays item collapsed</Description>
									<Type>Boolean</Type>
									<Default>false</Default>
									<Dependencies>
										<Depend type='Not Show'>
											<Cond>(value(AllowCollapsing) == false) and (context(UserMode) == 1)</Cond>
											<Condition>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>AllowCollapsing</PropName>
															<Value>false</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</Condition>
										</Depend>
									</Dependencies>
									<Metadata>
										<Value name='FlagWebLayoutProperty'></Value>
									</Metadata>
								</Prop>
							</Children>
						</Group>
						<Prop>
							<Id>BackColorStyle</Id>
							<Name>BackColorStyle</Name>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='None'/>
								<Value id='1' desc='Uniform'/>
								<Value id='2' desc='Header'/>
								<Value id='3' desc='Report'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Invalid'>
									<Value>2</Value>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BackColorOdd</Id>
							<Name>BackColorOdd</Name>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>BackColorEven</Id>
							<Name>BackColorEven</Name>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AllBackColor</Id>
							<Name>BackColor</Name>
							<Type>Color</Type>
							<Default>Window</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(BackColorStyle) != 1) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>BackColorStyle</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AllBackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>LinesBackColor</Id>
							<Name>LinesBackColor</Name>
							<Type>Color</Type>
							<Default>Window</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and (context(FormType) != Text)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>FormType</PropName>
													<Value>Text</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
						<Prop hidden='1'>
							<Id>LinesBackColor2</Id>
							<Name>LinesBackColorEven</Name>
							<Type>Color</Type>
							<Default>Window</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(BackColorStyle) &lt; 3</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Less</Operator>
											<PropName>BackColorStyle</PropName>
											<Value>3</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.LinesBackColorEvenDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='NoSys Color'/>
							</Options>
						</Prop>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Name>Paging</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>IdRecordCount</Id>
							<Name>RecordCount</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IdPageCount</Id>
							<Name>PageCount</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IdCurrentPage</Id>
							<Name>CurrentPage</Name>
							<Type>Integer</Type>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>InverseLoading</Id>
					<Name>InverseLoading</Name>
					<Description>Inverse Loading</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(InfiniteScrolling) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>InfiniteScrolling</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLSPAN' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>64</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>Caption</Id>
					<Name>InternalCaption</Name>
					<Description>InternalCaption</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Event)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Event</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(CaptionExpression)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>CaptionExpression</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Required'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnCaptionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='CustomAttribute'>Artech.Common.Properties.PropertyBindingAttribute(Property=CaptionExpression), Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagPropertyBind'>CaptionExpression</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>CaptionExpression</Id>
					<Name>Caption</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.TextExpressionType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Default'>
							<Value>Text Block</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CaptionExpressionAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CaptionExpressionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecify'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>id</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Required'/>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>Class</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
					</Metadata>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>GxFormat</Id>
							<Name>Format</Name>
							<Type>Combo Int</Type>
							<Values>
								<Value id='0' desc='Text'/>
								<Value id='1' desc='HTML'/>
								<Value id='2' desc='Raw HTML'/>
								<Value id='3' desc='Text with meaningful spaces'/>
							</Values>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>0</Value>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FormatDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagBuildAction'>RebuildAll</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>title</Id>
							<Name>Tooltiptext</Name>
							<Description>Advisory information (a ToolTip) for the object</Description>
							<Type>Text</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Tooltip Text</Value>
								<Value name='FlagRuntimeName'>TooltipText</Value>
								<Value name='FlagIndexable'>true</Value>
								<Value name='FlagWebLayoutProperty'></Value>
								<Value name='FlagTranslatableString'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Fill</Id>
							<Name>Fill</Name>
							<Description>Fill</Description>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 1) and ((context(FormType) != Text) or (true))</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttControlInheritDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>BackColor</Id>
							<Name>BackColor</Name>
							<Description>BackColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>Window</Value>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(Fill) == false) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>Fill</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='NoSys Color'/>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>ForeColor</Id>
							<Name>ForeColor</Name>
							<Description>ForeColor</Description>
							<Type>Color</Type>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Default'>
									<Value>WindowText</Value>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(context(AttType) == 7) or (context(AttType) == 14)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>7</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>AttType</PropName>
													<Value>14</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>((value(IsAbstractLayoutControl) == true) or (false)) and (context(UserMode) == 1)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>IsAbstractLayoutControl</PropName>
															<Value>true</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>HTMLSFLCOL</ObjectName>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 102</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>102</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 103</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>103</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 104</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>104</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 105</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>105</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(FormType) != Text</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>FormType</PropName>
											<Value>Text</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='NoSys Color'/>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ForeColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagWebLayoutProperty'></Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>Font</Id>
							<Name>Font</Name>
							<Description>Font</Description>
							<Type>Custom</Type>
							<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(AttID)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>AttID</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Apply'>
									<Cond>context(UserMode) == 1</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 93</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>93</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 92</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>92</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 112</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>112</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.FontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>enabled</Id>
							<Name>enabled</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(value(idIsSDControl) == true) or (context(UserMode) == 0)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idIsSDControl</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Enabled</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>Event</Id>
					<Name>OnClickEvent</Name>
					<Description>{ Cancel | Help | Refresh | 'User Event' | ... }</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.GxEventReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Caption)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Caption</PropName>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BtnEventDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ReturnOnClick</Id>
					<Name>ReturnOnClick</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontBold</Id>
					<Name>FontBold</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontItalic</Id>
					<Name>FontItalic</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontName</Id>
					<Name>FontName</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontSize</Id>
					<Name>FontSize</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontStrikethru</Id>
					<Name>FontStrikethru</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>FontUnderline</Id>
					<Name>FontUnderline</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(FontStrikethru) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>FontStrikethru</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Link</Id>
					<Name>Link</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>LinkTarget</Id>
					<Name>LinkTarget</Name>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLTBL' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>59</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>id</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>header</Id>
					<Name>Header</Name>
					<Description>Header text displayed above the table</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>align</Id>
					<Name>Align</Name>
					<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
					<Type>Combo</Type>
					<Default>left</Default>
					<Values>
						<Value id='center' desc='Center'/>
						<Value id='left' desc='Left'/>
						<Value id='right' desc='Right'/>
						<Value id='textTop' desc='TextTop'/>
						<Value id='top' desc='Top'/>
						<Value id='middle' desc='Middle'/>
						<Value id='absMiddle' desc='AbsMiddle'/>
						<Value id='bottom' desc='Bottom'/>
						<Value id='absBottom' desc='AbsBottom'/>
					</Values>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>true</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>textTop</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>top</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>middle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absMiddle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>bottom</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absBottom</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>backgroundGX</Id>
					<Name>Background</Name>
					<Description>The picture is tiled behind the text and graphics</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>bgColor</Id>
					<Name>Backcolor</Name>
					<Description>Background color behind the element</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TableBackColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>border</Id>
					<Name>BorderWidth</Name>
					<Description>Width of the border to be drawn around the TABLE</Description>
					<Type>Text</Type>
					<Default>0</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or ((value(IsAbstractLayoutControl) == false) or (true))</Cond>
							<Condition>
								<Expression>
									<Type>Constant</Type>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBorderWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.TabularTableApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>borderColor</Id>
					<Name>BorderColor</Name>
					<Description>Sets the border color</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or ((value(IsAbstractLayoutControl) == false) or (true))</Cond>
							<Condition>
								<Expression>
									<Type>Constant</Type>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BorderColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.TabularTableApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>cellPadding</Id>
					<Name>CellPadding</Name>
					<Description>Amount of space between the border of the cell and the contents of the cell</Description>
					<Type>Text</Type>
					<Default>1</Default>
					<Metadata>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.TabularTableApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>cellSpacing</Id>
					<Name>CellSpacing</Name>
					<Description>Amount of space between cells in a table</Description>
					<Type>Text</Type>
					<Default>2</Default>
					<Metadata>
						<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.TabularTableApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>height</Id>
					<Name>Height</Name>
					<Description>Calculated height of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>width</Id>
					<Name>Width</Name>
					<Description>Calculated width of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>rules</Id>
					<Name>Rules</Name>
					<Description>Specifies which dividing lines are displayed</Description>
					<Type>Combo</Type>
					<Default>none</Default>
					<Values>
						<Value id='all' desc='All'/>
						<Value id='cols' desc='Columns'/>
						<Value id='rows' desc='Rows'/>
						<Value id='none' desc='None'/>
					</Values>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Prop>
					<Id>Internalname</Id>
					<Name>InternalName</Name>
					<Description>Control name in Form</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLTBLCELL' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>60</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>id</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameEmptyValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>align</Id>
					<Name>Align</Name>
					<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
					<Type>Combo</Type>
					<Default>left</Default>
					<Values>
						<Value id='center' desc='Center'/>
						<Value id='left' desc='Left'/>
						<Value id='right' desc='Right'/>
						<Value id='textTop' desc='TextTop'/>
						<Value id='top' desc='Top'/>
						<Value id='middle' desc='Middle'/>
						<Value id='absMiddle' desc='AbsMiddle'/>
						<Value id='bottom' desc='Bottom'/>
						<Value id='absBottom' desc='AbsBottom'/>
					</Values>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>true</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>textTop</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>top</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>middle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absMiddle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>bottom</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absBottom</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>vAlign</Id>
					<Name>VerticalAlign</Name>
					<Description>How the text and other content of an element is vertically aligned within the element</Description>
					<Type>Combo</Type>
					<Default>middle</Default>
					<Values>
						<Value id='baseline' desc='BaseLine' help='Aligns the baseline of the first line of text with the baselines in adjacent elements.'/>
						<Value id='bottom' desc='Bottom' help='Aligns the text at the bottom of the element.'/>
						<Value id='middle' desc='Middle' help='Aligns the text in the middle of the element. This is the default value for this property.'/>
						<Value id='top' desc='Top' help='Aligns the text at the top of the element.'/>
					</Values>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>backgroundGX</Id>
					<Name>Background</Name>
					<Description>The picture is tiled behind the text and graphics</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLTBLCELL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLTBLCOL</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>bgColor</Id>
					<Name>Backcolor</Name>
					<Description>Background color behind the element</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>borderColor</Id>
					<Name>BorderColor</Name>
					<Description>Sets the border color</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or ((value(IsAbstractLayoutControl) == false) or (false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLTBL</ObjectName>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BorderColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>height</Id>
					<Name>Height</Name>
					<Description>Calculated height of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>width</Id>
					<Name>Width</Name>
					<Description>Calculated width of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>colspan</Id>
					<Name>ColSpan</Name>
					<Description>Sets how many columns in the TABLE object this cell should span</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Metadata>
						<Value name='FlagNoSpecifyValue'>0</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>rowspan</Id>
					<Name>RowSpan</Name>
					<Description>Sets how many rows in a TABLE this cell should span</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Metadata>
						<Value name='FlagNoSpecifyValue'>0</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLTBLCOL' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>62</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>Id</Id>
					<Name>Identifier</Name>
					<Description>Name of the element to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>align</Id>
					<Name>Align</Name>
					<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
					<Type>Combo</Type>
					<Default>left</Default>
					<Values>
						<Value id='center' desc='Center'/>
						<Value id='left' desc='Left'/>
						<Value id='right' desc='Right'/>
						<Value id='textTop' desc='TextTop'/>
						<Value id='top' desc='Top'/>
						<Value id='middle' desc='Middle'/>
						<Value id='absMiddle' desc='AbsMiddle'/>
						<Value id='bottom' desc='Bottom'/>
						<Value id='absBottom' desc='AbsBottom'/>
					</Values>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>true</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>textTop</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>top</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>middle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absMiddle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>bottom</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absBottom</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>vAlign</Id>
					<Name>VerticalAlign</Name>
					<Description>How the text and other content of an element is vertically aligned within the element</Description>
					<Type>Combo</Type>
					<Default>middle</Default>
					<Values>
						<Value id='baseline' desc='BaseLine' help='Aligns the baseline of the first line of text with the baselines in adjacent elements.'/>
						<Value id='bottom' desc='Bottom' help='Aligns the text at the bottom of the element.'/>
						<Value id='middle' desc='Middle' help='Aligns the text in the middle of the element. This is the default value for this property.'/>
						<Value id='top' desc='Top' help='Aligns the text at the top of the element.'/>
					</Values>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>backgroundGX</Id>
					<Name>Background</Name>
					<Description>The picture is tiled behind the text and graphics</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 1) and ((context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLTBLCELL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLTBLCOL</ObjectName>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>1</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>bgColor</Id>
					<Name>Backcolor</Name>
					<Description>Background color behind the element</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>width</Id>
					<Name>Width</Name>
					<Description>Calculated width of the element</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.MeasureValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>measure</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLTBLRCELL'>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>visible</Id>
					<Name>visible</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (false)) and (context(UserMode) == 1))</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'>Override</Value>
						<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDisplayName'>Visible</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLTBLROW' inheritance='HTMLELEM '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>61</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>id</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameEmptyValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>title</Id>
					<Name>Tooltiptext</Name>
					<Description>Advisory information (a ToolTip) for the object</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagDisplayName'>Tooltip Text</Value>
						<Value name='FlagRuntimeName'>TooltipText</Value>
						<Value name='FlagIndexable'>true</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.TooltipDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagTranslatableString'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>align</Id>
					<Name>Align</Name>
					<Description>Displays the element left-aligned, right-aligned, or centered relative to the display or table</Description>
					<Type>Combo</Type>
					<Default>left</Default>
					<Values>
						<Value id='center' desc='Center'/>
						<Value id='left' desc='Left'/>
						<Value id='right' desc='Right'/>
						<Value id='textTop' desc='TextTop'/>
						<Value id='top' desc='Top'/>
						<Value id='middle' desc='Middle'/>
						<Value id='absMiddle' desc='AbsMiddle'/>
						<Value id='bottom' desc='Bottom'/>
						<Value id='absBottom' desc='AbsBottom'/>
					</Values>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>(value(IsAbstractLayoutControl) == true) and (context(UserMode) == 1)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>true</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>1</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>textTop</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>top</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>middle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absMiddle</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>bottom</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>absBottom</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>vAlign</Id>
					<Name>VerticalAlign</Name>
					<Description>How the text and other content of an element is vertically aligned within the element</Description>
					<Type>Combo</Type>
					<Default>middle</Default>
					<Values>
						<Value id='baseline' desc='BaseLine' help='Aligns the baseline of the first line of text with the baselines in adjacent elements.'/>
						<Value id='bottom' desc='Bottom' help='Aligns the text at the bottom of the element.'/>
						<Value id='middle' desc='Middle' help='Aligns the text in the middle of the element. This is the default value for this property.'/>
						<Value id='top' desc='Top' help='Aligns the text at the top of the element.'/>
					</Values>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseClass</Id>
					<Name>BaseClass</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlBaseClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>classref</Id>
					<Name>Class</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ThemeClassReferenceList, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlClassDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagNoSpecifyValue'>(none)</Value>
						<Value name='FlagSpecificationName'>Class</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>bgColor</Id>
					<Name>Backcolor</Name>
					<Description>Background color behind the element</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or (value(IsAbstractLayoutControl) == false)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>IsAbstractLayoutControl</PropName>
											<Value>false</Value>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
				<Prop>
					<Id>borderColor</Id>
					<Name>BorderColor</Name>
					<Description>Sets the border color</Description>
					<Type>Color</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>(context(UserMode) == 0) or ((value(IsAbstractLayoutControl) == false) or (false))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>UserMode</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>IsAbstractLayoutControl</PropName>
													<Value>false</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>IsObject</Type>
													<ObjectName>HTMLTBL</ObjectName>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BorderColorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='StrVal Color'/>
						<Option type='NoSys Color'/>
					</Options>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='HTMLWEBCOMP' inheritance='HTML_PROP_EXT_USRMODE '>
		<Group>
			<Name>General</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>HelpKeyword</Id>
					<Name>HelpKeyword</Name>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>68</Value>
						</Depend>
					</Dependencies>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIsSDControl</Id>
					<Name>IsSmartDeviceControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IsAbstractLayoutControl</Id>
					<Name>IsAbstractLayoutControl</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
					</Metadata>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>Size</Id>
					<Name>Size</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Object</Id>
					<Name>Object</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.WebComponentReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=1DB606F2-AF09-4cf9-A3B5-B481519D28F6,AllowedType=C9584656-94B6-4ccd-890F-332D11FC2C25,SelfExclude=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>Params</Id>
					<Name>Parameters</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.ObjectParametersType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
				</Prop>
				<Group>
					<Name>Appearance</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>visible</Id>
							<Name>visible</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>(context(UserMode) == 0) or (((value(idIsSDControl) == true) and (true)) and (context(UserMode) == 1))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName source='context'>UserMode</PropName>
													<Value>0</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>IsObject</Type>
																	<ObjectName>HTMLSFLCOL</ObjectName>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>idIsSDControl</PropName>
																			<Value>true</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>IsObject</Type>
																					<ObjectName>HTMLTBLRCELL</ObjectName>
																				</Expression>
																			</FirstPart>
																			<Operator>not</Operator>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName source='context'>UserMode</PropName>
															<Value>1</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagWebLayoutProperty'>Override</Value>
								<Value name='CustomAttribute'>Artech.Common.Properties.RuntimePropertiesAttribute, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagDisplayName'>Visible</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
	<Object id='HTML_PROP_EXT_USRMODE'>
	</Object>
	<Object id='IMG_CONTROL' inheritance='CONTROL '>
	</Object>
	<Object id='RPT_ATT' inheritance='RPT_CTRL ATT_CONTROL CONTROL '>
		<Group>
			<Name>Attribute</Name>
			<Type>Main</Type>
			<Metadata>
				<Value name='ParentResolver'>Artech.Genexus.Common.Resolvers.ControlParentResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
			</Metadata>
			<Children>
				<Prop hidden='1'>
					<Id>RPT_TEXT_MODE</Id>
					<Name>TextMode</Name>
					<Description>Text Mode</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_INTERNAL_NAME</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='FlagCantReset'></Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_ID</Id>
					<Name>Id</Name>
					<Description>Control Id</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_VISIBLE</Id>
					<Name>Visible</Name>
					<Description>Visible</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ControlName</Id>
					<Name>ControlName</Name>
					<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>(value(AttNumDim) == 0) and ((value(BaseAttType) != 254) and ((value(BaseAttType) != 252) and (value(BaseAttType) != 251)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>AttNumDim</PropName>
											<Value>0</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName>BaseAttType</PropName>
													<Value>254</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>BaseAttType</PropName>
															<Value>252</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>BaseAttType</PropName>
															<Value>251</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.ControlName_RPT_ATT_VisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.ControlName_RPT_CTRL_VisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>AttID</Id>
					<Name>Attribute</Name>
					<Description>Attribute</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.AttributeVariableReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>context(UserMode) != 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttType</Id>
					<Name>AttType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EXT_ATT_TYPE_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>BaseAttType</Id>
					<Name>BaseAttType</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BaseAttTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>PROP_EXT_BASE_ATT_COLLECTION</Id>
					<Name>PROP_EXT_BASE_ATT_COLLECTION</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.BaseAttCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttName</Id>
					<Name>AttName</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>FieldSpecName</Id>
					<Name>FieldSpecName</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttDateFormat</Id>
					<Name>AttDateFormat</Name>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>GxObjClass</Id>
					<Name>GxObjClass</Name>
					<Type>Integer</Type>
					<Default>-1</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ObjClsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>isVariable</Id>
					<Name>isVariable</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsVariableDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>isAttribute</Id>
					<Name>isAttribute</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsAttributeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColCount</Id>
					<Name>ColCount</Name>
					<Type>Integer</Type>
					<Metadata>
						<Value name='FlagSpecificable'></Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptCOL_COUNTDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ControlType</Id>
					<Name>ControlType</Name>
					<Type>Combo Int</Type>
					<Default>2</Default>
					<Values>
						<Value id='0' desc='Combo Box'/>
						<Value id='1' desc='Radio Button'/>
						<Value id='2' desc='Edit'/>
						<Value id='3' desc='Check Box'/>
						<Value id='4' desc='Dynamic Combo Box'/>
						<Value id='6' desc='List Box'/>
						<Value id='7' desc='Dynamic List Box'/>
						<Value id='20' desc='Image'/>
					</Values>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(IsEnumerated)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>IsEnumerated</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(IDEnumDefinedValues)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>IDEnumDefinedValues</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>2</Value>
							<Cond>value(IsEnumerated) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsEnumerated</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
						<Depend type='Default'>
							<Value>2</Value>
							<Cond>value(isVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>isVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ControlTypeDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlTypeValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='TypeConverter'>Artech.Genexus.Common.Converters.ControlTypeTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='UITypeEditor'>Artech.Packages.Genexus.UI.TypeEditors.ControlTypeUITypeEditor, Artech.Packages.GenexusUI, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>IsEnumerated</Id>
					<Name>BasedOnEnumerated</Name>
					<Type>Boolean</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IsEnumeratedDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDisplayName'>Based on Enumerated</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IDEnumDefinedValues</Id>
					<Name>EnumValues</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.EnumValues, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>not (context(OBJ_TYPE) == id_OTYPE_DOM)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_DOM</Value>
										</Expression>
									</FirstPart>
									<Operator>not</Operator>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(HAS_DOMAIN) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>HAS_DOMAIN</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagIndexable'>true</Value>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.EnumValuesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.EnumValuesDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.EnumValuesAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type='Dyn Default'/>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RowIndex</Id>
					<Name>RowIndex</Name>
					<Description>RowIndex</Description>
					<Type>Custom</Type>
					<Default>1</Default>
					<CustomType>Artech.Genexus.Common.CustomTypes.IndexExpression, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Required'>
							<Cond>value(AttNumDim) != 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>AttNumDim</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttNumDim) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttNumDim</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>ColIndex</Id>
					<Name>ColIndex</Name>
					<Description>ColIndex</Description>
					<Type>Custom</Type>
					<Default>1</Default>
					<CustomType>Artech.Genexus.Common.CustomTypes.IndexExpression, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Required'>
							<Cond>value(AttNumDim) == 2</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttNumDim</PropName>
									<Value>2</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttNumDim) != 2</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>NotEqual</Operator>
									<PropName>AttNumDim</PropName>
									<Value>2</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>context(UserMode) == 1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>FieldSpecifier</Id>
					<Name>FieldSpecifier</Name>
					<Description>Field Specifier</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.SDTItemType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(value(BaseAttType) == 254) or ((value(BaseAttType) == 252) or ((value(BaseAttType) == 251) or ((value(BaseAttType) == 256) or (value(PROP_EXT_BASE_ATT_COLLECTION) == true))))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>BaseAttType</PropName>
											<Value>254</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>BaseAttType</PropName>
													<Value>252</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>BaseAttType</PropName>
															<Value>251</Value>
														</Expression>
													</FirstPart>
													<Operator>or</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>BaseAttType</PropName>
																	<Value>256</Value>
																</Expression>
															</FirstPart>
															<Operator>or</Operator>
															<SecondPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>PROP_EXT_BASE_ATT_COLLECTION</PropName>
																	<Value>true</Value>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>context(UserMode) == 0</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>UserMode</PropName>
									<Value>0</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfNotApply</Value>
					</Metadata>
					<Options>
						<Option type='Required'/>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttNumDim</Id>
					<Name>Dimensions</Name>
					<Description>Dimensions</Description>
					<Type>Combo</Type>
					<Values>
						<Value id='0' desc='Scalar'/>
						<Value id='1' desc='Vector'/>
						<Value id='2' desc='Matrix'/>
					</Values>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(Type)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>Type</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='On Change'>
							<Cond>onChange(IDEnumDefinedValues)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>IDEnumDefinedValues</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Apply'>
							<Cond>(context(OBJ_TYPE) != id_OTYPE_ATT) and ((context(OBJ_DATATYPE) != DT_BLOB) and ((context(OBJ_DATATYPE) != DT_OBJECT) and (value(IsEnumerated) != true)))</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</FirstPart>
									<Operator>and</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_DATATYPE</PropName>
													<Value>DT_BLOB</Value>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName source='context'>OBJ_DATATYPE</PropName>
															<Value>DT_OBJECT</Value>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>NotEqual</Operator>
															<PropName>IsEnumerated</PropName>
															<Value>true</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(VarDimsProtected) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>VarDimsProtected</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>1</Value>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>2</Value>
							<Cond>value(AttCollection) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttCollection</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.DimensionsDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagDeklarit'></Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
					<Options>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>AttCollection</Id>
					<Name>Collection</Name>
					<Description>Collection</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttDomain)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttDomain</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>context(AttEditReadonly) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttEditReadonly</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(IsStandardVariable) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IsStandardVariable</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>(context(OBJ_TYPE) == id_OTYPE_ATT) or (context(OBJ_TYPE) != id_OTYPE_SDT)</Cond>
							<Condition>
								<Expression>
									<Type>BooleanExpression</Type>
									<FirstPart>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>OBJ_TYPE</PropName>
											<Value>id_OTYPE_ATT</Value>
										</Expression>
									</FirstPart>
									<Operator>or</Operator>
									<SecondPart>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>ATT</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>not</Operator>
												</Expression>
											</FirstPart>
											<Operator>and</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>NotEqual</Operator>
													<PropName source='context'>OBJ_TYPE</PropName>
													<Value>id_OTYPE_SDT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</SecondPart>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Invalid'>
							<Value>-1</Value>
							<Cond>context(OBJ_TYPE) == id_OTYPE_ATT</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>OBJ_TYPE</PropName>
									<Value>id_OTYPE_ATT</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AttCollectionDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.AttCollectionValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.AttCollectionReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Group hidden='1'>
					<Id>AttEditFlags</Id>
					<Name>EditFlags</Name>
					<Description>EditFlags</Description>
					<Type>Group</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
					<Children>
						<Prop hidden='1'>
							<Id>AttEditNameProtected</Id>
							<Name>AttEditNameProtected</Name>
							<Description>AttEditNameProtected</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>IsStandardVariable</Id>
							<Name>IsStandardVariable</Name>
							<Description>Is standard variable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>idIsAutoDefinedVariable</Id>
							<Name>IsAutoDefinedVariable</Name>
							<Description>Is autodefined variable</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDisableArrays</Id>
							<Name>AttEditDisableArrays</Name>
							<Description>AttEditDisableArrays</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditNewVariable</Id>
							<Name>AttEditNewVariable</Name>
							<Description>AttEditNewVariable</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
						<Prop hidden='1'>
							<Id>AttEditDontAssign</Id>
							<Name>AttEditDontAssign</Name>
							<Description>AttEditDontAssign</Description>
							<Type>Boolean</Type>
							<Options>
								<Option type='Readonly'/>
								<Option type='Not Show'/>
								<Option type="Don't serialize"/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>RPT_TEXT</Id>
					<Name>Text</Name>
					<Description>Control text</Description>
					<Type>Text</Type>
					<Default>Text</Default>
					<Dependencies>
						<Depend type='Not Show'/>
					</Dependencies>
				</Prop>
				<Prop>
					<Id>RPT_X</Id>
					<Name>X</Name>
					<Description>Horizontal position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_Y</Id>
					<Name>Y</Name>
					<Description>Vertical position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_WIDTH</Id>
					<Name>Width</Name>
					<Description>Width</Description>
					<Type>Integer</Type>
					<Default>100</Default>
					<Dependencies>
						<Depend type='Default'>
							<Value>10</Value>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptAttWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_HEIGHT</Id>
					<Name>Height</Name>
					<Description>Height</Description>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptAttHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_FORECOLOR</Id>
					<Name>ForeColor</Name>
					<Description>Fore Color</Description>
					<Type>Color</Type>
					<Default>Black</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BACKCOLOR</Id>
					<Name>BackColor</Name>
					<Description>Back Color</Description>
					<Type>Color</Type>
					<Default>Transparent</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BORDERS</Id>
					<Name>Borders</Name>
					<Description>Borders</Description>
					<Type>Custom</Type>
					<Default>None</Default>
					<CustomType>Artech.Genexus.Common.Parts.Layout.ApplyBorders, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BORDERWIDTH</Id>
					<Name>BorderWidth</Name>
					<Description>Border Width</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.RptBorderWidthValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BORDERCOLOR</Id>
					<Name>BorderColor</Name>
					<Description>Border Color</Description>
					<Type>Color</Type>
					<Default>Black</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_ALIGNMENT</Id>
					<Name>Alignment</Name>
					<Description>Alignment</Description>
					<Type>Custom</Type>
					<Default>TopLeft</Default>
					<CustomType>Artech.Genexus.Common.Parts.Layout.Alignment, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 45</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>45</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptAttAlignmentDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_FONT</Id>
					<Name>Font</Name>
					<Description>Font</Description>
					<Type>Custom</Type>
					<Default>Microsoft Sans Serif,8</Default>
					<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>GxFormat</Id>
					<Name>Format</Name>
					<Type>Combo Int</Type>
					<Values>
						<Value id='0' desc='Text'/>
						<Value id='1' desc='HTML'/>
						<Value id='2' desc='Raw HTML'/>
						<Value id='3' desc='Text with meaningful spaces'/>
					</Values>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(AttID)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>AttID</PropName>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 45</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>45</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 93</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>93</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 92</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>92</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(AttType) == 112</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>AttType</PropName>
									<Value>112</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagBuildAction'>RebuildAll</Value>
						<Value name='FlagWebLayoutProperty'></Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_WORDWRAP</Id>
					<Name>WordWrap</Name>
					<Description>Word wrap</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='RPT_BAND' inheritance='RPT_CTRL '>
	</Object>
	<Object id='RPT_CTRL'>
	</Object>
	<Object id='RPT_GENERIC' inheritance='RPT_CTRL '>
		<Prop hidden='1'>
			<Id>RPT_TEXT_MODE</Id>
			<Name>TextMode</Name>
			<Description>Text Mode</Description>
			<Type>Boolean</Type>
			<Default>false</Default>
			<Options>
				<Option type='Not Show'/>
			</Options>
		</Prop>
		<Prop>
			<Id>RPT_INTERNAL_NAME</Id>
			<Name>Name</Name>
			<Description>Name</Description>
			<Type>Text</Type>
			<Metadata>
				<Value name='FlagCantReset'></Value>
				<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
			</Metadata>
			<Options>
				<Option type='No Default'/>
			</Options>
		</Prop>
		<Prop hidden='1'>
			<Id>GeneXusObject</Id>
			<Name>GeneXusObject</Name>
			<Description>GeneXus Object</Description>
			<Type>Custom</Type>
			<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
			<Options>
				<Option type='Not Show'/>
				<Option type="Don't serialize"/>
				<Option type='No Default'/>
			</Options>
		</Prop>
		<Prop hidden='1'>
			<Id>RPT_ID</Id>
			<Name>Id</Name>
			<Description>Control Id</Description>
			<Type>Integer</Type>
			<Default>1</Default>
			<Options>
				<Option type='Not Show'/>
			</Options>
		</Prop>
		<Prop hidden='1'>
			<Id>RPT_VISIBLE</Id>
			<Name>Visible</Name>
			<Description>Visible</Description>
			<Type>Boolean</Type>
			<Default>true</Default>
			<Options>
				<Option type='Not Show'/>
			</Options>
		</Prop>
		<Prop>
			<Id>ControlName</Id>
			<Name>ControlName</Name>
			<Description>Name of the control to refer from the code, can be any alphanumeric string that begins with a letter, and can include the underscore (_) character</Description>
			<Type>Text</Type>
			<Dependencies>
				<Depend type='Apply'>
					<Cond>context(UserMode) == 1</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName source='context'>UserMode</PropName>
							<Value>1</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.ControlNameValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
				<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.OBJ_CTRL_NAME_DefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
				<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.ControlName_RPT_CTRL_VisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
				<Value name='FlagSpecificationFormat'>normalizeControlName</Value>
				<Value name='FlagSpecificable'></Value>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop hidden='1'>
			<Id>RPT_TEXT</Id>
			<Name>Text</Name>
			<Description>Control text</Description>
			<Type>Text</Type>
			<Default>Text</Default>
			<Dependencies>
				<Depend type='Not Show'/>
			</Dependencies>
		</Prop>
		<Prop>
			<Id>RPT_X</Id>
			<Name>X</Name>
			<Description>Horizontal position</Description>
			<Type>Integer</Type>
			<Default>0</Default>
		</Prop>
		<Prop>
			<Id>RPT_Y</Id>
			<Name>Y</Name>
			<Description>Vertical position</Description>
			<Type>Integer</Type>
			<Default>0</Default>
		</Prop>
		<Prop>
			<Id>RPT_WIDTH</Id>
			<Name>Width</Name>
			<Description>Width</Description>
			<Type>Integer</Type>
			<Default>100</Default>
			<Dependencies>
				<Depend type='Default'>
					<Value>10</Value>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_HEIGHT</Id>
			<Name>Height</Name>
			<Description>Height</Description>
			<Type>Integer</Type>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_FORECOLOR</Id>
			<Name>ForeColor</Name>
			<Description>Fore Color</Description>
			<Type>Color</Type>
			<Default>Black</Default>
			<Dependencies>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_BACKCOLOR</Id>
			<Name>BackColor</Name>
			<Description>Back Color</Description>
			<Type>Color</Type>
			<Default>Transparent</Default>
			<Dependencies>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_BORDERS</Id>
			<Name>Borders</Name>
			<Description>Borders</Description>
			<Type>Custom</Type>
			<Default>None</Default>
			<CustomType>Artech.Genexus.Common.Parts.Layout.ApplyBorders, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
			<Dependencies>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_BORDERWIDTH</Id>
			<Name>BorderWidth</Name>
			<Description>Border Width</Description>
			<Type>Integer</Type>
			<Default>1</Default>
			<Dependencies>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.RptBorderWidthValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_BORDERCOLOR</Id>
			<Name>BorderColor</Name>
			<Description>Border Color</Description>
			<Type>Color</Type>
			<Default>Black</Default>
			<Dependencies>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_ALIGNMENT</Id>
			<Name>Alignment</Name>
			<Description>Alignment</Description>
			<Type>Custom</Type>
			<Default>TopLeft</Default>
			<CustomType>Artech.Genexus.Common.Parts.Layout.Alignment, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
			<Dependencies>
				<Depend type='Not Show'>
					<Cond>context(AttType) == 45</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName source='context'>AttType</PropName>
							<Value>45</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_FONT</Id>
			<Name>Font</Name>
			<Description>Font</Description>
			<Type>Custom</Type>
			<Default>Microsoft Sans Serif,8</Default>
			<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
			<Dependencies>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
		<Prop>
			<Id>RPT_WORDWRAP</Id>
			<Name>WordWrap</Name>
			<Description>Word wrap</Description>
			<Type>Boolean</Type>
			<Default>false</Default>
			<Dependencies>
				<Depend type='Readonly'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
				<Depend type='Not Show'>
					<Cond>value(RPT_TEXT_MODE) == true</Cond>
					<Condition>
						<Expression>
							<Type>Comparison</Type>
							<Operator>Equal</Operator>
							<PropName>RPT_TEXT_MODE</PropName>
							<Value>true</Value>
						</Expression>
					</Condition>
				</Depend>
			</Dependencies>
			<Metadata>
				<Value name='FlagOnlyDefault'>IfReadonly</Value>
			</Metadata>
		</Prop>
	</Object>
	<Object id='RPT_IMG' inheritance='RPT_CTRL IMG_CONTROL CONTROL '>
		<Group>
			<Name>Image</Name>
			<Type>Main</Type>
			<Children>
				<Prop>
					<Id>RPT_INTERNAL_NAME</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagCantReset'></Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_ID</Id>
					<Name>Id</Name>
					<Description>Control Id</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_VISIBLE</Id>
					<Name>Visible</Name>
					<Description>Visible</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_X</Id>
					<Name>X</Name>
					<Description>Horizontal position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_Y</Id>
					<Name>Y</Name>
					<Description>Vertical position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_WIDTH</Id>
					<Name>Width</Name>
					<Description>Width</Description>
					<Type>Integer</Type>
					<Default>100</Default>
					<Dependencies>
						<Depend type='Default'>
							<Value>10</Value>
							<Cond>context(RPT_TEXT_MODE) == -1</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>RPT_TEXT_MODE</PropName>
									<Value>-1</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptImgWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_HEIGHT</Id>
					<Name>Height</Name>
					<Description>Height</Description>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>100</Value>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptImgHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>imagereference</Id>
					<Name>Image</Name>
					<Type>Custom</Type>
					<CustomType>Artech.Genexus.Common.CustomTypes.LocalizableImageReference, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Metadata>
						<Value name='FlagSpecificationName'>src</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='RPT_LABEL' inheritance='RPT_CTRL TXT_CONTROL CONTROL '>
		<Group>
			<Name>Label</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>RPT_TEXT_MODE</Id>
					<Name>TextMode</Name>
					<Description>Text Mode</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_INTERNAL_NAME</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagCantReset'></Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_ID</Id>
					<Name>Id</Name>
					<Description>Control Id</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_VISIBLE</Id>
					<Name>Visible</Name>
					<Description>Visible</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_TEXT</Id>
					<Name>Text</Name>
					<Description>Control text</Description>
					<Type>Text</Type>
					<Default>Text</Default>
				</Prop>
				<Prop>
					<Id>RPT_X</Id>
					<Name>X</Name>
					<Description>Horizontal position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_Y</Id>
					<Name>Y</Name>
					<Description>Vertical position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_WIDTH</Id>
					<Name>Width</Name>
					<Description>Width</Description>
					<Type>Integer</Type>
					<Default>100</Default>
					<Dependencies>
						<Depend type='Default'>
							<Value>10</Value>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptLabelWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_HEIGHT</Id>
					<Name>Height</Name>
					<Description>Height</Description>
					<Type>Integer</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptLabelHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_FORECOLOR</Id>
					<Name>ForeColor</Name>
					<Description>Fore Color</Description>
					<Type>Color</Type>
					<Default>Black</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BACKCOLOR</Id>
					<Name>BackColor</Name>
					<Description>Back Color</Description>
					<Type>Color</Type>
					<Default>Transparent</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BORDERS</Id>
					<Name>Borders</Name>
					<Description>Borders</Description>
					<Type>Custom</Type>
					<Default>None</Default>
					<CustomType>Artech.Genexus.Common.Parts.Layout.ApplyBorders, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BORDERWIDTH</Id>
					<Name>BorderWidth</Name>
					<Description>Border Width</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.RptBorderWidthValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_BORDERCOLOR</Id>
					<Name>BorderColor</Name>
					<Description>Border Color</Description>
					<Type>Color</Type>
					<Default>Black</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_ALIGNMENT</Id>
					<Name>Alignment</Name>
					<Description>Alignment</Description>
					<Type>Custom</Type>
					<Default>TopLeft</Default>
					<CustomType>Artech.Genexus.Common.Parts.Layout.Alignment, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 45</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>45</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_FONT</Id>
					<Name>Font</Name>
					<Description>Font</Description>
					<Type>Custom</Type>
					<Default>Microsoft Sans Serif,8</Default>
					<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_WORDWRAP</Id>
					<Name>WordWrap</Name>
					<Description>Word wrap</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='RPT_LAYOUT' inheritance='RPT_CTRL '>
		<Group>
			<Name>Layout</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>RPT_TEXT_MODE</Id>
					<Name>TextMode</Name>
					<Description>Text Mode</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_PAPER_SIZE</Id>
					<Name>PaperSize</Name>
					<Description>Paper Size</Description>
					<Type>Combo Int</Type>
					<Default>256</Default>
					<Values>
						<Value id='256' desc='Custom'/>
						<Value id='1' desc='Letter'/>
						<Value id='5' desc='Legal'/>
						<Value id='7' desc='Executive'/>
						<Value id='8' desc='A3'/>
						<Value id='9' desc='A4'/>
						<Value id='11' desc='A5'/>
						<Value id='19' desc='Envelope #9'/>
						<Value id='20' desc='Envelope #10'/>
						<Value id='27' desc='Envelope DL'/>
						<Value id='28' desc='Envelope C5'/>
						<Value id='34' desc='Envelope B5'/>
						<Value id='37' desc='Envelope Monarch'/>
						<Value id='12' desc='B4'/>
						<Value id='13' desc='B5'/>
					</Values>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.PaperSizeAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_PAPER_ORIENTATION</Id>
					<Name>PaperOrientation</Name>
					<Description>Paper Orientation</Description>
					<Type>Combo Int</Type>
					<Default>0</Default>
					<Values>
						<Value id='0' desc='Portrait'/>
						<Value id='1' desc='Landscape'/>
					</Values>
				</Prop>
				<Prop>
					<Id>RPT_PAPER_WIDTH</Id>
					<Name>PaperWidth</Name>
					<Description>Paper Width</Description>
					<Type>Integer</Type>
					<Default>827</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.PaperWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.IsPaperCustomReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_PAPER_HEIGHT</Id>
					<Name>PaperHeight</Name>
					<Description>Paper Height</Description>
					<Type>Integer</Type>
					<Default>1169</Default>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.PaperHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.IsPaperCustomReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_RIGHT_MARGIN</Id>
					<Name>RightMargin</Name>
					<Description>Right Margin</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_ATT_FONT</Id>
					<Name>AttributeFont</Name>
					<Description>Attribute and Variable Font</Description>
					<Type>Custom</Type>
					<Default>Microsoft Sans Serif,8</Default>
					<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptAttFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_TXT_FONT</Id>
					<Name>TextBlockFont</Name>
					<Description>Text Block Font</Description>
					<Type>Custom</Type>
					<Default>Microsoft Sans Serif,8</Default>
					<CustomType>System.Drawing.Font, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</CustomType>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptTxtFontDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='RPT_LINE' inheritance='RPT_CTRL '>
		<Group>
			<Name>Line</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>RPT_TEXT_MODE</Id>
					<Name>TextMode</Name>
					<Description>Text Mode</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_INTERNAL_NAME</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagCantReset'></Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_ID</Id>
					<Name>Id</Name>
					<Description>Control Id</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_VISIBLE</Id>
					<Name>Visible</Name>
					<Description>Visible</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_X</Id>
					<Name>X</Name>
					<Description>Horizontal position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_Y</Id>
					<Name>Y</Name>
					<Description>Vertical position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_WIDTH</Id>
					<Name>Width</Name>
					<Description>Width</Description>
					<Type>Integer</Type>
					<Default>100</Default>
					<Dependencies>
						<Depend type='Default'>
							<Value>10</Value>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_LINEDIRECTION) == Vertical</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_LINEDIRECTION</PropName>
									<Value>Vertical</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(RPT_LINEDIRECTION) == Vertical</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_LINEDIRECTION</PropName>
									<Value>Vertical</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptLineWidthDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_HEIGHT</Id>
					<Name>Height</Name>
					<Description>Height</Description>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(RPT_LINEDIRECTION) == Horizontal</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_LINEDIRECTION</PropName>
									<Value>Horizontal</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Readonly'>
							<Cond>value(RPT_LINEDIRECTION) == Horizontal</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_LINEDIRECTION</PropName>
									<Value>Horizontal</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RptLineHeightDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_FORECOLOR</Id>
					<Name>ForeColor</Name>
					<Description>Fore Color</Description>
					<Type>Color</Type>
					<Default>Black</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_LINEDIRECTION</Id>
					<Name>LineDirection</Name>
					<Description>Line Direction</Description>
					<Type>Custom</Type>
					<Default>Horizontal</Default>
					<CustomType>Artech.Genexus.Common.Parts.Layout.Direction, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Invalid'>
							<Value>Slant</Value>
						</Depend>
						<Depend type='Invalid'>
							<Value>BackSlant</Value>
						</Depend>
					</Dependencies>
				</Prop>
				<Prop>
					<Id>RPT_LINEWIDTH</Id>
					<Name>LineWidth</Name>
					<Description>Line Width</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Dependencies>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_STYLE_LINE</Id>
					<Name>BorderStyle</Name>
					<Description>Line style</Description>
					<Type>Combo Int</Type>
					<Default>0</Default>
					<Values>
						<Value id='0' desc='Solid'/>
						<Value id='2' desc='Dotted'/>
						<Value id='3' desc='Dashed'/>
						<Value id='4' desc='LongDashed'/>
						<Value id='5' desc='LongDotDashed'/>
					</Values>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_ALIGNMENT</Id>
					<Name>Alignment</Name>
					<Description>Alignment</Description>
					<Type>Custom</Type>
					<Default>TopLeft</Default>
					<CustomType>Artech.Genexus.Common.Parts.Layout.Alignment, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>context(AttType) == 45</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName source='context'>AttType</PropName>
									<Value>45</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
						<Depend type='Readonly'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='RPT_PRINTB' inheritance='RPT_BAND RPT_CTRL '>
		<Group>
			<Name>Print Block</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>RPT_TEXT_MODE</Id>
					<Name>TextMode</Name>
					<Description>Text Mode</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_INTERNAL_NAME</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagCantReset'></Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_ID</Id>
					<Name>Id</Name>
					<Description>Control Id</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_VISIBLE</Id>
					<Name>Visible</Name>
					<Description>Visible</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_TEXT</Id>
					<Name>Text</Name>
					<Description>Control text</Description>
					<Type>Text</Type>
					<Default>Text</Default>
					<Dependencies>
						<Depend type='Not Show'/>
					</Dependencies>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_X</Id>
					<Name>X</Name>
					<Description>Horizontal position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
					<Dependencies>
						<Depend type='Not Show'/>
					</Dependencies>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_Y</Id>
					<Name>Y</Name>
					<Description>Vertical position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
					<Dependencies>
						<Depend type='Not Show'/>
					</Dependencies>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_WIDTH</Id>
					<Name>Width</Name>
					<Description>Width</Description>
					<Type>Integer</Type>
					<Default>100</Default>
					<Dependencies>
						<Depend type='Default'>
							<Value>10</Value>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Not Show'/>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_HEIGHT</Id>
					<Name>Height</Name>
					<Description>Height</Description>
					<Type>Integer</Type>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
			</Children>
		</Group>
	</Object>
	<Object id='RPT_RECT' inheritance='RPT_CTRL '>
		<Group>
			<Name>Rectangle</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>RPT_TEXT_MODE</Id>
					<Name>TextMode</Name>
					<Description>Text Mode</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_INTERNAL_NAME</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='FlagCantReset'></Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.RptNameReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
					<Options>
						<Option type='No Default'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_ID</Id>
					<Name>Id</Name>
					<Description>Control Id</Description>
					<Type>Integer</Type>
					<Default>1</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>RPT_VISIBLE</Id>
					<Name>Visible</Name>
					<Description>Visible</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>RPT_X</Id>
					<Name>X</Name>
					<Description>Horizontal position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_Y</Id>
					<Name>Y</Name>
					<Description>Vertical position</Description>
					<Type>Integer</Type>
					<Default>0</Default>
				</Prop>
				<Prop>
					<Id>RPT_WIDTH</Id>
					<Name>Width</Name>
					<Description>Width</Description>
					<Type>Integer</Type>
					<Default>100</Default>
					<Dependencies>
						<Depend type='Default'>
							<Value>10</Value>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>RPT_HEIGHT</Id>
					<Name>Height</Name>
					<Description>Height</Description>
					<Type>Integer</Type>
					<Dependencies>
						<Depend type='Default'>
							<Value>30</Value>
							<Cond>value(RPT_TEXT_MODE) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
						<Depend type='Default'>
							<Value>4</Value>
							<Cond>value(RPT_TEXT_MODE) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>RPT_TEXT_MODE</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
					</Metadata>
				</Prop>
				<Group>
					<Id>RPT_APPEARANCE</Id>
					<Name>Appearance</Name>
					<Description>Appearance</Description>
					<Type>Group</Type>
					<Children>
						<Prop hidden='1'>
							<Id>RPT_FORECOLOR</Id>
							<Name>ForeColor</Name>
							<Description>Fore Color</Description>
							<Type>Color</Type>
							<Default>Black</Default>
							<Dependencies>
								<Depend type='Readonly'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'/>
								<Depend type='Not Show'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_BACKCOLOR</Id>
							<Name>BackColor</Name>
							<Description>Back Color</Description>
							<Type>Color</Type>
							<Default>Transparent</Default>
							<Dependencies>
								<Depend type='Readonly'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_BORDERS</Id>
							<Name>Borders</Name>
							<Description>Borders</Description>
							<Type>Custom</Type>
							<Default>None</Default>
							<CustomType>Artech.Genexus.Common.Parts.Layout.ApplyBorders, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Default'>
									<Value>All</Value>
								</Depend>
								<Depend type='Readonly'/>
								<Depend type='Not Show'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_BORDERWIDTH</Id>
							<Name>BorderWidth</Name>
							<Description>Border Width</Description>
							<Type>Integer</Type>
							<Default>1</Default>
							<Dependencies>
								<Depend type='Readonly'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(RPT_TEXT_MODE) == true) or ((value(RPT_STYLE_TOP) == 1) and ((value(RPT_STYLE_RIGHT) == 1) and ((value(RPT_STYLE_BOTTOM) == 1) and (value(RPT_STYLE_LEFT) == 1))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>RPT_TEXT_MODE</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>RPT_RECT</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>RPT_STYLE_TOP</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>RPT_STYLE_RIGHT</PropName>
																			<Value>1</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>RPT_STYLE_BOTTOM</PropName>
																					<Value>1</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>RPT_STYLE_LEFT</PropName>
																					<Value>1</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.RptBorderWidthValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_BORDERCOLOR</Id>
							<Name>BorderColor</Name>
							<Description>Border Color</Description>
							<Type>Color</Type>
							<Default>Black</Default>
							<Dependencies>
								<Depend type='Readonly'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>(value(RPT_TEXT_MODE) == true) or ((value(RPT_STYLE_TOP) == 1) and ((value(RPT_STYLE_RIGHT) == 1) and ((value(RPT_STYLE_BOTTOM) == 1) and (value(RPT_STYLE_LEFT) == 1))))</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>RPT_TEXT_MODE</PropName>
													<Value>true</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>RPT_RECT</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>BooleanExpression</Type>
															<FirstPart>
																<Expression>
																	<Type>Comparison</Type>
																	<Operator>Equal</Operator>
																	<PropName>RPT_STYLE_TOP</PropName>
																	<Value>1</Value>
																</Expression>
															</FirstPart>
															<Operator>and</Operator>
															<SecondPart>
																<Expression>
																	<Type>BooleanExpression</Type>
																	<FirstPart>
																		<Expression>
																			<Type>Comparison</Type>
																			<Operator>Equal</Operator>
																			<PropName>RPT_STYLE_RIGHT</PropName>
																			<Value>1</Value>
																		</Expression>
																	</FirstPart>
																	<Operator>and</Operator>
																	<SecondPart>
																		<Expression>
																			<Type>BooleanExpression</Type>
																			<FirstPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>RPT_STYLE_BOTTOM</PropName>
																					<Value>1</Value>
																				</Expression>
																			</FirstPart>
																			<Operator>and</Operator>
																			<SecondPart>
																				<Expression>
																					<Type>Comparison</Type>
																					<Operator>Equal</Operator>
																					<PropName>RPT_STYLE_LEFT</PropName>
																					<Value>1</Value>
																				</Expression>
																			</SecondPart>
																		</Expression>
																	</SecondPart>
																</Expression>
															</SecondPart>
														</Expression>
													</SecondPart>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_STYLE</Id>
							<Name>BorderStyle</Name>
							<Description>Line style for the borders</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.Objects.Themes.CustomTypes.MultipleBorderStyleType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(RPT_STYLE_TOP)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_STYLE_TOP</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(RPT_STYLE_RIGHT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_STYLE_RIGHT</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(RPT_STYLE_BOTTOM)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_STYLE_BOTTOM</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(RPT_STYLE_LEFT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_STYLE_LEFT</PropName>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.RectangleBorderStyleDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CompositeTypeAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_STYLE_TOP</Id>
							<Name>BorderStyleTop</Name>
							<Description>Line style for the top border</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Solid'/>
								<Value id='1' desc='None'/>
								<Value id='2' desc='Dotted'/>
								<Value id='3' desc='Dashed'/>
								<Value id='4' desc='LongDashed'/>
								<Value id='5' desc='LongDotDashed'/>
							</Values>
							<Metadata>
								<Value name='FlagDisplayName'>Top</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_STYLE_RIGHT</Id>
							<Name>BorderStyleRight</Name>
							<Description>Line style for the right border</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Solid'/>
								<Value id='1' desc='None'/>
								<Value id='2' desc='Dotted'/>
								<Value id='3' desc='Dashed'/>
								<Value id='4' desc='LongDashed'/>
								<Value id='5' desc='LongDotDashed'/>
							</Values>
							<Metadata>
								<Value name='FlagDisplayName'>Right</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_STYLE_BOTTOM</Id>
							<Name>BorderStyleBottom</Name>
							<Description>Line style for the bottom border</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Solid'/>
								<Value id='1' desc='None'/>
								<Value id='2' desc='Dotted'/>
								<Value id='3' desc='Dashed'/>
								<Value id='4' desc='LongDashed'/>
								<Value id='5' desc='LongDotDashed'/>
							</Values>
							<Metadata>
								<Value name='FlagDisplayName'>Bottom</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_STYLE_LEFT</Id>
							<Name>BorderStyleLeft</Name>
							<Description>Line style for the left border</Description>
							<Type>Combo Int</Type>
							<Default>0</Default>
							<Values>
								<Value id='0' desc='Solid'/>
								<Value id='1' desc='None'/>
								<Value id='2' desc='Dotted'/>
								<Value id='3' desc='Dashed'/>
								<Value id='4' desc='LongDashed'/>
								<Value id='5' desc='LongDotDashed'/>
							</Values>
							<Metadata>
								<Value name='FlagDisplayName'>Left</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>RPT_ALIGNMENT</Id>
							<Name>Alignment</Name>
							<Description>Alignment</Description>
							<Type>Custom</Type>
							<Default>TopLeft</Default>
							<CustomType>Artech.Genexus.Common.Parts.Layout.Alignment, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>context(AttType) == 45</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>AttType</PropName>
											<Value>45</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'/>
								<Depend type='Readonly'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='Not Show'>
									<Cond>value(RPT_TEXT_MODE) == true</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>RPT_TEXT_MODE</PropName>
											<Value>true</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagOnlyDefault'>IfReadonly</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_CORNER_RADIUS</Id>
							<Name>CornerRadius</Name>
							<Description>Radius for the rectangle corners (in pixels)</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.Objects.Themes.CustomTypes.MultipleCornerRadiusType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='On Change'>
									<Cond>onChange(RPT_CORNER_RADIUS_TOPLEFT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_CORNER_RADIUS_TOPLEFT</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(RPT_CORNER_RADIUS_TOPRIGHT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_CORNER_RADIUS_TOPRIGHT</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(RPT_CORNER_RADIUS_BOTTOMLEFT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_CORNER_RADIUS_BOTTOMLEFT</PropName>
										</Expression>
									</Condition>
								</Depend>
								<Depend type='On Change'>
									<Cond>onChange(RPT_CORNER_RADIUS_BOTTOMRIGHT)</Cond>
									<Condition>
										<Expression>
											<Type>OnChange</Type>
											<PropName>RPT_CORNER_RADIUS_BOTTOMRIGHT</PropName>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.CornerRadiusDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.CompositeTypeAfterSetValueHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_CORNER_RADIUS_TOPLEFT</Id>
							<Name>CornerRadiusTopLeft</Name>
							<Description>Radius for the top left corner (in pixels)</Description>
							<Type>Integer</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Top Left</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_CORNER_RADIUS_TOPRIGHT</Id>
							<Name>CornerRadiusTopRight</Name>
							<Description>Radius for the top right corner (in pixels)</Description>
							<Type>Integer</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Top Right</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_CORNER_RADIUS_BOTTOMLEFT</Id>
							<Name>CornerRadiusBottomLeft</Name>
							<Description>Radius for the bottom left corner (in pixels)</Description>
							<Type>Integer</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Bottom Left</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>RPT_CORNER_RADIUS_BOTTOMRIGHT</Id>
							<Name>CornerRadiusBottomRight</Name>
							<Description>Radius for the bottom right corner (in pixels)</Description>
							<Type>Integer</Type>
							<Metadata>
								<Value name='FlagDisplayName'>Bottom Right</Value>
								<Value name='customVisibleResolver'>Artech.Common.Properties.Resolvers.IsDebugVisibleResolver, Artech.Common.Properties, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
	<Object id='TXT_CONTROL' inheritance='CONTROL '>
	</Object>
</Content>
