<?xml version='1.0' encoding='iso-8859-1'?>
<Content version='148254 $'>
	<Object id='SYNC' inheritance='BASE '>
		<Group>
			<Name>Base properties</Name>
			<Type>Main</Type>
			<Children>
				<Prop>
					<Id>ObjName</Id>
					<Name>Name</Name>
					<Description>Name</Description>
					<Alias>Name</Alias>
					<Type>Text</Type>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.ObjectNameAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagSpecificationName'>ObjName</Value>
						<Value name='FlagAssertSDTProperty'></Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type='Required'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Prop>
					<Id>ObjDesc</Id>
					<Name>Description</Name>
					<Description>Describe the content or purpose of the element</Description>
					<Alias>Description</Alias>
					<Type>Text</Type>
					<Dependencies>
						<Depend type='On Change'>
							<Cond>onChange(ObjName)</Cond>
							<Condition>
								<Expression>
									<Type>OnChange</Type>
									<PropName>ObjName</PropName>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Architecture.Common.Resolvers.ObjectDescriptionResolver, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='ShouldSerialize'>true</Value>
						<Value name='FlagSpecificable'></Value>
						<Value name='FlagSpecificationName'>ObjDesc</Value>
						<Value name='FlagAssertSDTProperty'></Value>
						<Value name='FlagDeklarit'></Value>
					</Metadata>
					<Options>
						<Option type="Don't serialize"/>
						<Option type='Dyn Default'/>
					</Options>
				</Prop>
			</Children>
		</Group>
		<Group>
			<Name>General</Name>
			<Description>Synchronizer Properties</Description>
			<Type>Main</Type>
			<Children>
				<Group>
					<Id>IntegratedSecurityGroup</Id>
					<Name>Integrated Security</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>IntegratedSecurityLevel</Id>
							<Name>Integrated Security Level</Name>
							<Type>Combo</Type>
							<Values>
								<Value id='SecurityNone' desc='None'/>
								<Value id='SecurityLow' desc='Authentication'/>
								<Value id='SecurityHigh' desc='Authorization'/>
							</Values>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityLevelApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customVisibleResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityVisibleResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityLevelDefaultResolverFormVersion, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagNoCacheDefault'></Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityPermissionPrefix</Id>
							<Name>Permission Prefix</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityPermissionPrefixDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityPermissionPrefixApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityPermissionPrefixValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityObjClientID</Id>
							<Name>Security Client ID</Name>
							<Description>This property identifies an SD application in GAM. The Client Id can be used by more than one SD application, note that to reuse the Client Id implies that just one application will exist in GAM.</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>context(IsMain) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>IsMain</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityApplicationClientApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientIdDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagUIValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientIdUIValidator, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientIdValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.IntegratedSecurityClientIdAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>IntegratedSecurityObjClientSecret</Id>
							<Name>Security Client Secret</Name>
							<Description>The Client Secret is a key used, in conjuntion with Client Id, to identify and to authorize an application when an user is authenticated.</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>context(IsMain) == 0</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName source='context'>IsMain</PropName>
											<Value>0</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityApplicationClientApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientSecretDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagUIValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientSecretUIValidator, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientSecretValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.IntegratedSecurityClientSecretAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>IntegratedSecurityObjClientEncriptionKey</Id>
							<Name>Security Client Encription Key</Name>
							<Type>Text</Type>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.IntegratedSecurityClientEncryptionKeyDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.IntegratedSecurityClientEncryptionKeyAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagSerializeToMetadata'>false</Value>
							</Metadata>
							<Options>
								<Option type='Not Show'/>
								<Option type='Password'/>
							</Options>
						</Prop>
					</Children>
				</Group>
				<Prop hidden='1'>
					<Id>Signatures</Id>
					<Name>Signatures</Name>
					<Type>Text</Type>
					<Default></Default>
					<Options>
						<Option type='Readonly'/>
						<Option type='Not Show'/>
						<Option type="Don't serialize"/>
					</Options>
				</Prop>
				<Group>
					<Id>DatabaseEncryption</Id>
					<Name>Encryption</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>idEncryptOfflineDatabase</Id>
							<Name>Encrypt Offline Database</Name>
							<Description>Indicates whether the database created locally on the devices will be encrypted (True) or not (False)</Description>
							<Type>Boolean</Type>
							<Default>false</Default>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>SyncReceive</Id>
					<Name>Receive</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>idDataSyncCriteria</Id>
							<Name>Data Receive Criteria</Name>
							<Description>Defines the criteria for synchronizing from the server to the local database</Description>
							<Type>Combo</Type>
							<Default>OnAppLaunch</Default>
							<Values>
								<Value id='OnAppLaunch' desc='On Application Launch'/>
								<Value id='ElapsedTime' desc='After Elapsed Time'/>
								<Value id='idManual' desc='Manual'/>
								<Value id='Never' desc='Never'/>
							</Values>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idMinTimeBetweenSync</Id>
							<Name>Minimum Time Between Receives</Name>
							<Description>Specifies the time (in seconds) to wait between database receives</Description>
							<Type>Integer</Type>
							<Default>600</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(idDataSyncCriteria) == idManual) or (value(idDataSyncCriteria) == Never)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idDataSyncCriteria</PropName>
													<Value>idManual</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idDataSyncCriteria</PropName>
													<Value>Never</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idDataSyncGranularity</Id>
							<Name>Data Receive Granularity</Name>
							<Description>Defines the granularity level for synchronizing from the server to the local database</Description>
							<Type>Combo</Type>
							<Default>idByRow</Default>
							<Values>
								<Value id='idByRow' desc='By Row'/>
								<Value id='idByTable' desc='By Table'/>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(idDataSyncCriteria) == Never</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idDataSyncCriteria</PropName>
											<Value>Never</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
								<Value name='FlagRedundantValue'>true</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idMinTimeBetweenCleans</Id>
							<Name>Minimum Time Between Table Purges</Name>
							<Description>Specifies the time (in seconds) to wait between the purge of synchronization tables in the server</Description>
							<Type>Integer</Type>
							<Default>3600</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(idDataSyncCriteria) == Never) or (value(idDataSyncGranularity) == idByTable)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idDataSyncCriteria</PropName>
													<Value>Never</Value>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>idDataSyncGranularity</PropName>
													<Value>idByTable</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idSyncTimeoutReceive</Id>
							<Name>Receive Timeout</Name>
							<Description>Specifies the time (in seconds) to wait for the server to respond on a Receive operation</Description>
							<Type>Integer</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(idDataSyncCriteria) == Never</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>idDataSyncCriteria</PropName>
											<Value>Never</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>SyncSend</Id>
					<Name>Send</Name>
					<Type>Group</Type>
					<Children>
						<Prop>
							<Id>LocalChangesProcessing</Id>
							<Name>Send Changes</Name>
							<Description>Defines when to send the updates to the server</Description>
							<Type>Combo</Type>
							<Default>WhenConnected</Default>
							<Values>
								<Value id='WhenConnected' desc='When connected'/>
								<Value id='UserDefined' desc='Manual'/>
								<Value id='Never' desc='Never'/>
							</Values>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>MinTimeBetweenSends</Id>
							<Name>Minimum Time Between Sends</Name>
							<Description>Specifies the time (in seconds) to wait between updates sended to the server</Description>
							<Type>Integer</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(LocalChangesProcessing) != WhenConnected</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>LocalChangesProcessing</PropName>
											<Value>WhenConnected</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagSerializeDefaultToMetadata'>True</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idSyncTimeoutSend</Id>
							<Name>Send Timeout</Name>
							<Description>Specifies the time (in seconds) to wait for the server to respond on a Send operation</Description>
							<Type>Integer</Type>
							<Default>0</Default>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(LocalChangesProcessing) == Never</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>LocalChangesProcessing</PropName>
											<Value>Never</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
</Content>
