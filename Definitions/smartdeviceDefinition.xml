<?xml version='1.0' encoding='iso-8859-1'?>
<Content version='148254 $'>
	<Object id='SMARTDEVICE'>
		<Group>
			<Name>SMARTDEVICE</Name>
			<Type>Main</Type>
			<Children>
				<Prop hidden='1'>
					<Id>MAIN_GEN</Id>
					<Name>Main generator</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>MAIN_DBMS</Id>
					<Name>Main DBMS</Name>
					<Type>Integer</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>IS_WEB_GEN</Id>
					<Name>Is web generator</Name>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>ANDROID</Id>
					<Name>Generate Android</Name>
					<Description>Specify if Android generation is enabled</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.GenerateAndroidAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>HUAWEI</Id>
					<Name>Generate Huawei</Name>
					<Description>Specify if Huawei app is generated</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(ANDROID) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ANDROID</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.GenerateAndroidAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>IOS</Id>
					<Name>Generate iOS</Name>
					<Description>Specify if Apple generation is enabled</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Metadata>
						<Value name='FlagDisplayName'>Generate Apple</Value>
						<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.GenerateiOSAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>idAndroidRebuild</Id>
					<Name>Rebuild Android</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idIOSRebuild</Id>
					<Name>Rebuild iOS</Name>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='FlagDisplayName'>Rebuild Apple</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>idMainMobilePlatform</Id>
					<Name>Main Platform</Name>
					<Description>Indicates what is the default target platform for prototyping</Description>
					<Type>Combo</Type>
					<Values>
						<Value id='ANDROID' desc='Android'/>
						<Value id='IOS' desc='Apple'/>
						<Value id='HUAWEI' desc='Huawei'/>
					</Values>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.Default.MainPlatformDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.MainPlatformValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValuesResolver'>Artech.Genexus.Common.Resolvers.Values.MainPlatformValuesResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>DynamicURL</Id>
					<Name>Dynamic Services URL</Name>
					<Description>Indicates if the Services location can be changed on runtime</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Metadata>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.Readonly.CheckIfTrialStandardReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagCategories'>Advanced</Value>
					</Metadata>
				</Prop>
				<Prop hidden='1'>
					<Id>DynamicURLConfigObj</Id>
					<Name>Services URL Configuration Panel</Name>
					<Description>Indicates the Panel to display when the Services location needs to be changed at runtime</Description>
					<Type>Custom</Type>
					<CustomType>Artech.Architecture.Common.Objects.KBObjectReference, Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(DynamicURL) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>DynamicURL</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='CustomAttribute'>Artech.Architecture.Common.Objects.KBObjectReferenceSettingsAttribute(AllowedType=D82625FD-5892-40B0-99C9-5C8559C197FC, UseDesignModel=true),Artech.Architecture.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.Readonly.CheckIfTrialStandardReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagCategories'>Advanced</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>ServicesURL</Id>
					<Name>Services URL</Name>
					<Description>Specify where the Devices Clients connect to the services</Description>
					<Type>Text</Type>
					<Metadata>
						<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ServicesUrlDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.Readonly.CheckIfTrialStandardReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.DynamicServicesURLValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagExport'>false</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>SSLPinningPinSet</Id>
					<Name>SSL Pinning Pin Set</Name>
					<Description>Specify SSL Pinning Server Pin Set to validate https conection</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='FlagExport'>true</Value>
					</Metadata>
				</Prop>
				<Prop>
					<Id>smart_cache_controller_generation</Id>
					<Name>Smart Devices Cache Management</Name>
					<Description>Server notifies Smart Devices when the data requested is up to date in order to avoid network traffic.</Description>
					<Type>Combo</Type>
					<Default>idEnableSmartCache</Default>
					<Values>
						<Value id='idEnableSmartCache' desc='On'/>
						<Value id='idDisableSmartCache' desc='Off'/>
					</Values>
				</Prop>
				<Prop hidden='1'>
					<Id>idSDCrashReportingEnabled</Id>
					<Name>Enable Crash Reporting</Name>
					<Description>Turns on crash reporting for Smart Devices applications. In addition to providing more detailed information than a standard crash log, this option will work even if the application is not installed from the official App Store.</Description>
					<Type>Boolean</Type>
					<Default>true</Default>
					<Metadata>
						<Value name='FlagCategories'>Advanced</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idSDCrashReportingFormKey</Id>
					<Name>Crash Reports Form Key</Name>
					<Description>Destination of the crash reports (corresponding to the form key for a Google Drive Form). Crash data will be sent to this spreadsheet.</Description>
					<Type>Text</Type>
					<Default>dFhYLU5MTV9Zay02Q2trZkNTSnFEMHc6MA</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(idSDCrashReportingEnabled) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>idSDCrashReportingEnabled</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagCategories'>Advanced</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idSDCrashReportingIncludeLogData</Id>
					<Name>Include Log Data in Crash Reports</Name>
					<Description>Sends the device's log information in the crash report. In Android (prior to Jelly Bean), this requires the READ_LOGS (read sensitive log data) permission.</Description>
					<Type>Boolean</Type>
					<Default>false</Default>
					<Dependencies>
						<Depend type='Apply'>
							<Cond>value(idSDCrashReportingEnabled) == true</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>idSDCrashReportingEnabled</PropName>
									<Value>true</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Metadata>
						<Value name='FlagCategories'>Advanced</Value>
					</Metadata>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop hidden='1'>
					<Id>idPrivacyPolicy</Id>
					<Name>Privacy Policy</Name>
					<Description>Public Privacy Policy URL</Description>
					<Type>Text</Type>
					<Options>
						<Option type='Not Show'/>
					</Options>
				</Prop>
				<Prop>
					<Id>SD_VisualTestingURL</Id>
					<Name>Visual Testing Repository URL</Name>
					<Description>Specifies the URL of the Visual Testing Repository for Mobile UI Tests</Description>
					<Type>Text</Type>
					<Default></Default>
					<Metadata>
						<Value name='customReadOnlyResolver'>Artech.Genexus.Common.Resolvers.Readonly.CheckIfTrialStandardReadonlyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
						<Value name='FlagOnlyDefault'>IfReadonly</Value>
						<Value name='FlagExport'>false</Value>
					</Metadata>
				</Prop>
				<Group>
					<Id>ANDROID_GROUP</Id>
					<Name>Android Specific</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(ANDROID) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>ANDROID</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>ANDROID_SDK_DIR</Id>
							<Name>Android SDK directory</Name>
							<Description>Path to the root of Android SDK</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.DirectoryType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.AndroidSDKDirDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.AndroidSDKDirAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.NonEmptyDirectoryValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop>
							<Id>JDK_DIR</Id>
							<Name>JDK Directory</Name>
							<Description>Path to the root of Java JDK</Description>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.DirectoryType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.JDKDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.JDKDirAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.NonEmptyDirectoryValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
							<Options>
								<Option type='Required'/>
							</Options>
						</Prop>
						<Prop>
							<Id>AndroidCopyAPKToCloud</Id>
							<Name>Android Copy APK to Cloud</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Metadata>
								<Value name='FlagExport'>true</Value>
								<Value name='FlagDisplayName'>Copy APK to Cloud</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.CopyAPKToCloudApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>AndroidCopyAPKToTomcat</Id>
							<Name>Android Copy APK to Tomcat</Name>
							<Type>Boolean</Type>
							<Default>true</Default>
							<Metadata>
								<Value name='FlagExport'>true</Value>
								<Value name='FlagDisplayName'>Copy APK to Tomcat</Value>
								<Value name='customApplyResolver'>Artech.Genexus.Common.Resolvers.CopyAPKToTomcatApplyResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>GradleOptions</Id>
							<Name>Gradle Options</Name>
							<Description>Check https://docs.gradle.org/current/userguide/gradle_command_line.html for more information.</Description>
							<Type>Text</Type>
							<Default>--no-daemon --parallel -Dorg.gradle.jvmargs=-Xmx3072m -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false</Default>
						</Prop>
						<Prop hidden='1'>
							<Id>InformationOnRequests</Id>
							<Name>Include Network Id in Client Information</Name>
							<Type>Boolean</Type>
							<Options>
								<Option type='Not Show'/>
							</Options>
						</Prop>
						<Prop>
							<Id>CompilationMode</Id>
							<Name>Compilation Mode</Name>
							<Type>Combo</Type>
							<Default>COMPILATION_MODE_DEVELOPMENT</Default>
							<Values>
								<Value id='COMPILATION_MODE_DEVELOPMENT' desc='Development'/>
								<Value id='COMPILATION_MODE_DISTRIBUTION' desc='Distribution'/>
							</Values>
						</Prop>
						<Group hidden='1'>
							<Id>KEYSTORE_GROUP</Id>
							<Name>Application Signing</Name>
							<Type>Group</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>(value(ANDROID) == false) or (value(CompilationMode) == COMPILATION_MODE_DEVELOPMENT)</Cond>
									<Condition>
										<Expression>
											<Type>BooleanExpression</Type>
											<FirstPart>
												<Expression>
													<Type>BooleanExpression</Type>
													<FirstPart>
														<Expression>
															<Type>IsObject</Type>
															<ObjectName>SMARTDEVICE</ObjectName>
														</Expression>
													</FirstPart>
													<Operator>and</Operator>
													<SecondPart>
														<Expression>
															<Type>Comparison</Type>
															<Operator>Equal</Operator>
															<PropName>ANDROID</PropName>
															<Value>false</Value>
														</Expression>
													</SecondPart>
												</Expression>
											</FirstPart>
											<Operator>or</Operator>
											<SecondPart>
												<Expression>
													<Type>Comparison</Type>
													<Operator>Equal</Operator>
													<PropName>CompilationMode</PropName>
													<Value>COMPILATION_MODE_DEVELOPMENT</Value>
												</Expression>
											</SecondPart>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Children>
								<Prop hidden='1'>
									<Id>KEYSTORE_FILE</Id>
									<Name>Key Store File</Name>
									<Description>File required for signing Android applications. A debug certificate will be used if left empty. Note that you should apply your own key before releasing the application.</Description>
									<Type>Custom</Type>
									<CustomType>Artech.Genexus.Common.CustomTypes.FileType, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
									<Metadata>
										<Value name='FlagExport'>false</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>idKeyAlias</Id>
									<Name>Key Alias</Name>
									<Description>Alias for the key. Only the first 8 characters are used.</Description>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagExport'>false</Value>
										<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AllowEmptyButNotWhiteSpacesValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
									</Metadata>
								</Prop>
								<Prop hidden='1'>
									<Id>KEYSTORE_PASSWORD</Id>
									<Name>Store Password</Name>
									<Description>Password for the keystore.</Description>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagExport'>false</Value>
									</Metadata>
									<Options>
										<Option type='Password'/>
									</Options>
								</Prop>
								<Prop hidden='1'>
									<Id>KEY_PASSWORD</Id>
									<Name>Key Password</Name>
									<Description>Password for the key (identified by the alias).</Description>
									<Type>Text</Type>
									<Metadata>
										<Value name='FlagExport'>false</Value>
									</Metadata>
									<Options>
										<Option type='Password'/>
									</Options>
								</Prop>
							</Children>
						</Group>
						<Prop>
							<Id>idAndroidMapsApi</Id>
							<Name>Android Maps API</Name>
							<Description>API used to display SD Maps controls in Android.</Description>
							<Type>Combo</Type>
							<Default>MAPS_GOOGLE_V2</Default>
							<Values>
							</Values>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(ANDROID) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ANDROID</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='TypeConverter'>Artech.Genexus.Common.Converters.MapsServiceTypeConverter, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='ServiceDirectory'>Maps</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idAndroidMapsApiKey</Id>
							<Name>Android Maps API Key</Name>
							<Description>API Key for Android Maps. Depending on the selected API, may have to be generated from a fingerprint of the certificate used for signing, and from the application's package name.</Description>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Not Show'>
									<Cond>value(ANDROID) == false</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>ANDROID</PropName>
											<Value>false</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
						</Prop>
					</Children>
				</Group>
				<Group>
					<Id>IOS_GROUP</Id>
					<Name>Apple Specific</Name>
					<Type>Group</Type>
					<Dependencies>
						<Depend type='Not Show'>
							<Cond>value(IOS) == false</Cond>
							<Condition>
								<Expression>
									<Type>Comparison</Type>
									<Operator>Equal</Operator>
									<PropName>IOS</PropName>
									<Value>false</Value>
								</Expression>
							</Condition>
						</Depend>
					</Dependencies>
					<Children>
						<Prop>
							<Id>idIOS_REQUIRED_XCODE_VERSION</Id>
							<Name>Required Xcode version</Name>
							<Description>The Xcode version to use when compiling modules</Description>
							<Type>Text</Type>
							<Default>13.2</Default>
							<Metadata>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.OneDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.RequiredXcodeVersionValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idIOS_MINIMUM_DEPLOYMENT_TARGET</Id>
							<Name>iOS Deployment Target</Name>
							<Description>The minimum iOS deployment target to use when generating the Xcode project</Description>
							<Type>Text</Type>
							<Default>12.0</Default>
							<Metadata>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TwoDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AppleMinimumDeploymentTargetValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idTVOS_MINIMUM_DEPLOYMENT_TARGET</Id>
							<Name>tvOS Deployment Target</Name>
							<Description>The minimum tvOS deployment target to use when generating the Xcode project</Description>
							<Type>Text</Type>
							<Default>12.0</Default>
							<Metadata>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TwoDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AppleMinimumDeploymentTargetValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>idWATCHOS_MINIMUM_DEPLOYMENT_TARGET</Id>
							<Name>watchOS Deployment Target</Name>
							<Description>The minimum watchOS deployment target to use when generating the Xcode project</Description>
							<Type>Text</Type>
							<Default>4.0</Default>
							<Metadata>
								<Value name='AfterSetValueHandler'>Artech.Genexus.Common.Resolvers.Handlers.TwoDigitVersionAutoCompleteAfterSetHandler, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='customValidResolver'>Artech.Genexus.Common.Resolvers.Valid.AppleMinimumDeploymentTargetValidResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>EXEC_TYPE</Id>
							<Name>Execution Type</Name>
							<Type>Combo</Type>
							<Default>KBN</Default>
							<Values>
								<Value id='SimMac' desc='Simulator (Mac)'/>
								<Value id='ConnMac' desc='iOS Device (Mac)'/>
								<Value id='ConnWin' desc='iTunes Sync (Local)'/>
								<Value id='BuildIPA' desc='Build IPA (Local)'/>
								<Value id='BuildDist' desc='Build for Distribution (Local)'>
									<Meta name='DeprecatedValue'></Meta>
								</Value>
								<Value id='KBN' desc='Knowledge Base Navigator (Device)'/>
							</Values>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EXEC_IOS_DIST_METHOD</Id>
							<Name>Apple Distribution Method</Name>
							<Description>Indicates what type of distribution should be used</Description>
							<Type>Combo</Type>
							<Default>Development</Default>
							<Values>
								<Value id='Development' desc='Development'/>
								<Value id='AppStore' desc='App Store'/>
								<Value id='Enterprise' desc='Enterprise'/>
								<Value id='AdHoc' desc='Ad Hoc'/>
							</Values>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(EXEC_TYPE) == BuildIPA</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>EXEC_TYPE</PropName>
											<Value>BuildIPA</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagDisplayName'>Distribution Method</Value>
							</Metadata>
						</Prop>
						<Prop hidden='1'>
							<Id>EXEC_IOS_SIM</Id>
							<Name>iOS Simulator</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ExecSimulator, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(EXEC_TYPE) == SimMac</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>EXEC_TYPE</PropName>
											<Value>SimMac</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='customDefaultResolver'>Artech.Genexus.Common.Resolvers.ExecSimulatorDefaultResolver, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</Value>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
								<Value name='FlagDisplayName'>iOS Simulator</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>EXEC_DEVICE</Id>
							<Name>Execution Device</Name>
							<Type>Custom</Type>
							<CustomType>Artech.Genexus.Common.CustomTypes.ExecSmartDevice, Artech.Genexus.Common, PublicKeyToken=6f5bf81c27b6b8aa</CustomType>
							<Dependencies>
								<Depend type='Apply'>
									<Cond>value(EXEC_TYPE) == KBN</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>Equal</Operator>
											<PropName>EXEC_TYPE</PropName>
											<Value>KBN</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>MAC_HOST</Id>
							<Name>Mac Host</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Required'>
									<Cond>value(EXEC_TYPE) != KBN</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>EXEC_TYPE</PropName>
											<Value>KBN</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>MAC_USER</Id>
							<Name>Mac User</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Required'>
									<Cond>value(EXEC_TYPE) != KBN</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>EXEC_TYPE</PropName>
											<Value>KBN</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
						</Prop>
						<Prop>
							<Id>MAC_PASS</Id>
							<Name>Mac Password</Name>
							<Type>Text</Type>
							<Dependencies>
								<Depend type='Required'>
									<Cond>value(EXEC_TYPE) != KBN</Cond>
									<Condition>
										<Expression>
											<Type>Comparison</Type>
											<Operator>NotEqual</Operator>
											<PropName>EXEC_TYPE</PropName>
											<Value>KBN</Value>
										</Expression>
									</Condition>
								</Depend>
							</Dependencies>
							<Metadata>
								<Value name='FlagStoreValueByUser'></Value>
								<Value name='FlagExport'>false</Value>
							</Metadata>
							<Options>
								<Option type='Password'/>
							</Options>
						</Prop>
					</Children>
				</Group>
			</Children>
		</Group>
	</Object>
</Content>
