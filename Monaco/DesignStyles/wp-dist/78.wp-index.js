(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[78],{

/***/ "../../node_modules/@genexus/gemini/dist/esm-es5/gxg-tree-item.entry.js":
/*!***********************************************************************************************************!*\
  !*** /__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/gxg-tree-item.entry.js ***!
  \***********************************************************************************************************/
/*! exports provided: gxg_tree_item */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gxg_tree_item\", function() { return GxgTreeItem; });\n/* harmony import */ var _index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-09b1517f.js */ \"../../node_modules/@genexus/gemini/dist/esm-es5/index-09b1517f.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar treeItemCss = \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible;}pre{font-family:monospace, monospace;font-size:1em;}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em;}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0;}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px;}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}:root{--ui-animaton-speed:0.2s}.gxg-title-01{font-family:var(--font-family-primary);font-weight:var(--font-weight-bold);font-size:var(--font-size-md);letter-spacing:var(--letter-spacing-md);color:var(--color-on-background);text-align:start;line-height:1.455em}.gxg-title-01--negative{font-family:var(--font-family-primary);font-weight:var(--font-weight-bold);font-size:var(--font-size-md);letter-spacing:var(--letter-spacing-md);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-on-primary)}.gxg-title-02{font-family:var(--font-family-primary);font-weight:var(--font-weight-bold);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-sm);color:var(--color-on-background);text-align:start;text-transform:uppercase;line-height:1.556em}.gxg-title-02--negative{font-family:var(--font-family-primary);font-weight:var(--font-weight-bold);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-sm);color:var(--color-on-background);text-align:start;text-transform:uppercase;line-height:1.556em;color:var(--color-on-primary)}.gxg-title-03{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-xs);letter-spacing:var(--letter-spacing-sm);color:var(--color-on-background);text-align:start;text-transform:uppercase;line-height:1.556em}.gxg-title-03--negative{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-xs);letter-spacing:var(--letter-spacing-sm);color:var(--color-on-background);text-align:start;text-transform:uppercase;line-height:1.556em;color:var(--color-on-primary)}.gxg-title-04{font-family:var(--font-family-primary);font-weight:var(--font-weight-semibold);font-size:var(--font-size-md);letter-spacing:var(--letter-spacing-md);color:var(--color-on-background);text-align:start;line-height:1.455em}.gxg-title-04--negative{font-family:var(--font-family-primary);font-weight:var(--font-weight-semibold);font-size:var(--font-size-md);letter-spacing:var(--letter-spacing-md);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-on-primary)}.gxg-title-05{font-family:var(--font-family-primary);font-weight:var(--font-weight-semibold);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-sm);color:var(--color-on-background);text-align:start;line-height:1.556em}.gxg-title-05--negative{font-family:var(--font-family-primary);font-weight:var(--font-weight-semibold);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-sm);color:var(--color-on-background);text-align:start;line-height:1.556em;color:var(--color-on-primary)}.gxg-text{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em}.gxg-text--negative{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-on-primary)}.gxg-text--gray{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--gray-05)}.gxg-quote{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;font-style:italic}.gxg-quote--negative{color:var(--color-on-primary)}.gxg-link{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-primary);text-decoration:underline;cursor:pointer;display:inline-block}.gxg-link:hover{color:var(--color-primary-hover)}.gxg-link:active{color:var(--color-primary-active)}.gxg-link-gray{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-primary);text-decoration:underline;cursor:pointer;display:inline-block;color:var(--gray-04)}.gxg-link-gray:hover{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-primary);text-decoration:underline;cursor:pointer;display:inline-block;color:var(--gray-04);color:var(--gray-06)}.gxg-alert-error{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-error-dark);display:inline-block}.gxg-alert-warning{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-warning-dark);display:inline-block}.gxg-alert-success{font-family:var(--font-family-primary);font-weight:var(--font-weight-regular);font-size:var(--font-size-sm);letter-spacing:var(--letter-spacing-xs);color:var(--color-on-background);text-align:start;line-height:1.455em;color:var(--color-success-dark);display:inline-block}.gxg-tab--disabled{color:var(--color-primary-disabled);pointer-events:none}.gxg-tab--disabled[disabled]{color:var(--color-primary-disabled);pointer-events:none}.gxg-label{font-family:var(--font-family-primary) !important;font-weight:var(--font-weight-semibold);font-size:var(--font-size-sm) !important;letter-spacing:var(--letter-spacing-xs);color:var(--color-primary-enabled);text-align:center;line-height:1.455em}.gxg-label:hover{color:var(--color-primary-hover)}.gxg-label:focud{color:var(--color-primary-active)}.gxg-label:active{color:var(--color-primary-active)}.gxg-label[disabled]{color:var(--color-primary-disabled)}.gxg-label--negative{color:var(--color-on-primary)}.gxg-label--negative[disabled]{color:var(--color-on-disabled)}.gxg-button-styles{font-family:var(--font-family-primary) !important;font-weight:var(--font-weight-semibold);font-size:var(--font-size-sm) !important;letter-spacing:var(--letter-spacing-xs);color:var(--color-primary-enabled);text-align:center;line-height:1.455em}:host{display:block}:host li{list-style:none;font-family:var(--font-family-primary);font-size:var(--font-size-sm);font-weight:var(--font-weight-regular);color:var(--color-on-background);height:20px;overflow:hidden}:host li.tree-open{height:auto}:host li .li-text{height:100%;padding:0 var(--spacing-comp-02);cursor:pointer;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative}:host li .li-text:hover{background-color:var(--gray-01)}:host li .li-text:active{background-color:var(--gray-02)}:host li .li-text:focus{outline:none;-webkit-box-shadow:inset 0px 0px 0px 2px var(--color-primary-active);box-shadow:inset 0px 0px 0px 2px var(--color-primary-active)}:host li .li-text--selected{background-color:var(--color-secondary-enabled)}:host li .li-text--selected:hover{background-color:var(--color-secondary-enabled)}:host li .vertical-line{position:absolute;width:1px;height:0;top:21px;left:15px;z-index:1;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(28%, var(--gray-04)), color-stop(0%, rgba(255, 255, 255, 0)));background-image:linear-gradient(var(--gray-04) 28%, rgba(255, 255, 255, 0) 0%);background-position:right;background-size:1px 4px;background-repeat:repeat-y}:host li .horizontal-line{position:absolute;width:16px;height:1px;top:11px;z-index:1;margin-left:-23px;top:10px;background-image:-webkit-gradient(linear, left top, right top, color-stop(33%, var(--gray-04)), color-stop(0%, rgba(255, 255, 255, 0)));background-image:linear-gradient(to right, var(--gray-04) 33%, rgba(255, 255, 255, 0) 0%);background-position:bottom;background-size:3px 1px;background-repeat:repeat-x}:host li .horizontal-line.display-none{display:none}:host li .closed-opened-icons{position:relative;display:-ms-flexbox;display:flex;margin-left:-2px}:host li .toggle-icon{position:relative;z-index:2;-webkit-transition-property:opacity;transition-property:opacity;-webkit-transition-duration:0.5s;transition-duration:0.5s;-webkit-transition-timing-function:ease;transition-timing-function:ease}:host .checkbox{margin-right:var(--spacing-comp-01)}:host .right-icon{-webkit-margin-start:auto;margin-inline-start:auto;position:relative;top:0;-webkit-transition-property:top;transition-property:top;-webkit-transition-duration:0.5s;transition-duration:0.5s;-webkit-transition-timing-function:ease;transition-timing-function:ease}:host .loading{opacity:1;display:inline;right:11px;top:-20px;position:absolute;z-index:1;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:0.5s;transition-duration:0.5s;-webkit-transition-timing-function:ease;transition-timing-function:ease;border-radius:50%;width:8px;height:8px;border:0.18rem solid var(--gray-04);border-top-color:var(--gray-01);-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear}:host .loading--double{border-style:double;border-width:0.5rem}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}:host([disabled]) li .text{color:var(--gray-05)}:host([disabled]) .toggle-icon{pointer-events:none}:host([downloading]){pointer-events:none}:host([downloading]) .right-icon{top:20px}:host([downloading]) .loading{top:3px}:host([downloaded]) .loading,:host([downloaded]) .right-icon{opacity:0}\";\nvar GxgTreeItem = /** @class */ (function () {\n    function class_1(hostRef) {\n        Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.liItemClicked = Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this, \"liItemClicked\", 7);\n        this.toggleIconClicked = Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this, \"toggleIconClicked\", 7);\n        this.checkboxClickedEvent = Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this, \"checkboxClickedEvent\", 7);\n        //PROPS\n        /**\n         * Set this attribute if you want the gxg-treeitem to display a checkbox\n         */\n        this.checkbox = false;\n        /**\n         * Set this attribute if you want the gxg-treeitem checkbox to be checked by default\n         */\n        this.checked = false;\n        /**\n         * Set this attribute if this tree-item has a resource to be downloaded;\n         */\n        this.download = false;\n        /**\n         * Set this attribute when you are downloading a resource\n         */\n        this.downloading = false;\n        /**\n         * Set this attribute when you have downloaded the resource\n         */\n        this.downloaded = false;\n        /**\n         * If this tree-item has a nested tree, set this attribute to make the tree open by default\n         */\n        this.opened = false;\n        /**\n         * The presence of this attribute sets the tree-item as selected\n         */\n        this.selected = false;\n        /**\n         * The presence of this attribute displays a +/- icon to toggle/untoggle the tree\n         */\n        this.isLeaf = undefined;\n        //PROPS\n        this.hasChildTree = false;\n        this.firstTreeItem = false;\n        this.disabled = false;\n        //STATE\n        this.numberOfParentTrees = 1;\n        //@State() verticalLineHeight: string;\n        this.horizontalLinePaddingLeft = 0;\n        this.lastTreeItem = false;\n        this.firstTreeItemOfParentTree = false;\n        this.lastTreeItemOfParentTree = false;\n        this.rightIconColor = \"auto\";\n        this.numberOfDirectTreeItemsDescendants = 0;\n    }\n    class_1.prototype.componentWillLoad = function () {\n        //Count number of parent trees in order to set the apporpiate padding-left\n        this.numberOfParentTrees = this.getParents(this.el);\n        //If tree item has not a tree-item inside, is leaf\n        var treeItemHasTree = this.el.querySelector('[slot=\"tree\"]');\n        if (this.isLeaf === undefined) {\n            if (treeItemHasTree === null) {\n                this.isLeaf = true;\n            }\n            else {\n                this.hasChildTree = true;\n            }\n        }\n        //If is first item of tree\n        var prevItem = this.el.previousElementSibling;\n        if (prevItem === null) {\n            this.firstTreeItem = true;\n        }\n        //If is last item of tree\n        var nextItem = this.el.nextElementSibling;\n        if (nextItem === null) {\n            this.lastTreeItem = true;\n        }\n        //If is first item of parent Tree\n        if (this.numberOfParentTrees === 1) {\n            var prevItem_1 = this.el.previousElementSibling;\n            if (prevItem_1 === null) {\n                this.firstTreeItemOfParentTree = true;\n            }\n        }\n        //If is last item of parent Tree\n        if (this.numberOfParentTrees === 1) {\n            var nextItem_1 = this.el.nextElementSibling;\n            if (nextItem_1 === null) {\n                this.lastTreeItemOfParentTree = true;\n            }\n        }\n        //Set right icon color\n        if (this.download && this.rightIcon.includes(\"download\")) {\n            this.rightIconColor = \"primary-enabled\";\n        }\n        else if (this.disabled) {\n            this.rightIconColor = \"disabled\";\n        }\n        //If this tree item has a source to download, this item has child tree, and is not leaf. Also, set the tree as not open\n        if (this.download) {\n            this.hasChildTree = true;\n            this.isLeaf = false;\n            this.opened = false;\n        }\n    };\n    class_1.prototype.getNumberOfVisibleDescendants = function () {\n        var directTree = this.el.querySelector(\":scope > gxg-tree\");\n        if (directTree !== null && this.opened) {\n            //if tree item has a tree inside and is open...\n            var visibleChildren = directTree.querySelectorAll(\"gxg-tree-item.visible\");\n            //direct descendants\n            var directDescendants = directTree.querySelectorAll(\":scope > gxg-tree-item.visible\");\n            //last direct descendant\n            var lastDirectDescendant = directDescendants[directDescendants.length - 1];\n            var lastDirectDescendantIsOpened = lastDirectDescendant\n                .opened;\n            var lastDirectDescendantTreeItemsLength = 0;\n            if (lastDirectDescendantIsOpened) {\n                var lastDirectDescendantTree = lastDirectDescendant.querySelector(\":scope > gxg-tree\");\n                lastDirectDescendantTreeItemsLength = lastDirectDescendantTree.querySelectorAll(\":scope > gxg-tree-item\").length;\n            }\n            if (visibleChildren.length > 0) {\n                this.numberOfDirectTreeItemsDescendants =\n                    visibleChildren.length - lastDirectDescendantTreeItemsLength;\n            }\n        }\n    };\n    class_1.prototype.setVisibleTreeItems = function () {\n        var directTree = this.el.querySelector(\":scope > gxg-tree\");\n        if (directTree !== null) {\n            var directTreeDirectTreeItems = directTree.querySelectorAll(\":scope > gxg-tree-item\");\n            if (this.opened) {\n                directTreeDirectTreeItems.forEach(function (item) {\n                    item.classList.remove(\"not-visible\");\n                    item.classList.add(\"visible\");\n                });\n            }\n            else {\n                directTreeDirectTreeItems.forEach(function (item) {\n                    item.classList.remove(\"visible\");\n                    item.classList.add(\"not-visible\");\n                });\n            }\n        }\n    };\n    class_1.prototype.componentDidLoad = function () {\n        this.setVisibleTreeItems();\n        this.getNumberOfVisibleDescendants();\n    };\n    class_1.prototype.watchHandler = function (newValue) {\n    };\n    class_1.prototype.getParents = function (elem) {\n        // Returns the number of parent tree items in order to set the appropriate paddding-left\n        // Set up a parent array\n        var numberOfTreeParents = [];\n        // Push each parent element to the array\n        for (; elem && elem !== document; elem = elem.parentNode) {\n            var elemTagNAme = elem.tagName;\n            if (elemTagNAme === \"GXG-TREE\") {\n                numberOfTreeParents.push(elem);\n            }\n        }\n        return numberOfTreeParents.length;\n    };\n    class_1.prototype.toggleTreeIconClicked = function () {\n        if (this.opened) {\n            this.opened = false;\n        }\n        else {\n            this.opened = true;\n        }\n        this.setVisibleTreeItems();\n        this.toggleIconClicked.emit();\n    };\n    class_1.prototype.updateTreeVerticalLineHeight = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.getNumberOfVisibleDescendants();\n                return [2 /*return*/];\n            });\n        });\n    };\n    class_1.prototype.liTextClicked = function () {\n        this.liItemClicked.emit();\n        this.selected = true;\n    };\n    class_1.prototype.liTextDoubleClicked = function () {\n        this.toggleTreeIconClicked();\n    };\n    class_1.prototype.liTextKeyDownPressed = function (e) {\n        if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\n            e.preventDefault(); //prevents scrolling\n        }\n        //ENTER\n        if (e.key === \"Enter\") {\n            //Enter should check/uncheck the checkbox (if present)\n            this.checkboxClicked();\n            if (this.download) {\n                //If the item has a resource to be downloaded, download.\n                this.el.click();\n            }\n        }\n        //LEFT/RIGHT NAVIGATION\n        if (e.key === \"ArrowRight\" && !this.isLeaf) {\n            //Toggle the tree\n            if (!this.opened) {\n                this.opened = true;\n            }\n            else {\n                var childTree = this.el.querySelector(\"gxg-tree\");\n                var childTreeFirstChildren = childTree.querySelector(\"gxg-tree-item\");\n                var childTreeFirstChildrenLiText = childTreeFirstChildren.shadowRoot.querySelector(\".li-text\");\n                childTreeFirstChildrenLiText.focus();\n            }\n            this.setVisibleTreeItems();\n            this.toggleIconClicked.emit(); //this recalculates the vertical line height\n        }\n        if (e.key === \"ArrowLeft\") {\n            var hasParent = false;\n            var parentGxgTreeItem = this.el.parentElement.parentElement;\n            var parentGxgTreeItemLiText = null;\n            if (parentGxgTreeItem.tagName === \"GXG-TREE-ITEM\") {\n                hasParent = true;\n                parentGxgTreeItemLiText = parentGxgTreeItem.shadowRoot.querySelector(\".li-text\");\n            }\n            if (this.isLeaf) {\n                if (hasParent) {\n                    parentGxgTreeItemLiText.focus();\n                }\n            }\n            else {\n                var li = this.el.shadowRoot.querySelector(\"li\");\n                if (li.classList.contains(\"tree-open\")) {\n                    this.opened = false;\n                }\n                else {\n                    if (hasParent) {\n                        parentGxgTreeItemLiText.focus();\n                    }\n                }\n            }\n            this.setVisibleTreeItems();\n            this.toggleIconClicked.emit(); //this recalculates the vertical line height\n        }\n        // UP/DOWN NAVIGATION\n        if (e.key === \"ArrowUp\" || (e.key === \"Tab\" && e.shiftKey)) {\n            e.preventDefault();\n            if (!this.firstTreeItemOfParentTree) {\n                //Is not the first element of the parent\n                //Set focus on the prev item\n                var prevItem = void 0;\n                var prevElementSibling = this.el.previousElementSibling;\n                if (e.shiftKey && e.key !== \"Tab\") {\n                    //if shift key was pressed, navigate to the previous sibling\n                    if (prevElementSibling !== null) {\n                        prevItem = prevElementSibling.shadowRoot.querySelector(\"li .li-text\");\n                    }\n                }\n                else {\n                    if (prevElementSibling === null) {\n                        var parentItem = this.el.parentElement;\n                        var parentParentItem = parentItem.parentElement;\n                        prevItem = parentParentItem.shadowRoot.querySelector(\"li .li-text\");\n                    }\n                    else {\n                        prevItem = prevElementSibling.shadowRoot.querySelector(\"li .li-text\");\n                        if (prevElementSibling !== null) {\n                            //If the preceding tree-item has tree inside...\n                            var prevElementSiblingHasChildTree = prevElementSibling\n                                .hasChildTree;\n                            if (prevElementSiblingHasChildTree) {\n                                var prevElementSiblingHasOpenTree = prevElementSibling\n                                    .opened;\n                                if (prevElementSiblingHasOpenTree && !this.download) {\n                                    //If preceding tree-item tree is opened, then the prev item is the last item of that tree\n                                    var prevElemSiblingTreeItem = this.el\n                                        .previousElementSibling;\n                                    var prevElemSiblingTreeItemTree = prevElemSiblingTreeItem.querySelector(\"gxg-tree\");\n                                    //\n                                    if (prevElemSiblingTreeItemTree.lastElementChild\n                                        .hasChildTree) {\n                                        if (prevElemSiblingTreeItemTree.lastElementChild.shadowRoot\n                                            .querySelector(\"li\")\n                                            .classList.contains(\"tree-open\")) {\n                                            prevItem = prevElemSiblingTreeItemTree.lastElementChild\n                                                .querySelector(\"gxg-tree\")\n                                                .lastElementChild.shadowRoot.querySelector(\"li .li-text\");\n                                        }\n                                        else {\n                                            prevItem = prevElemSiblingTreeItemTree.lastElementChild.shadowRoot.querySelector(\"li .li-text\");\n                                        }\n                                    }\n                                    else {\n                                        prevItem = prevElemSiblingTreeItemTree.lastElementChild.shadowRoot.querySelector(\"li .li-text\");\n                                    }\n                                    //\n                                }\n                                else {\n                                    //The preciding item has a tree, but it is closed\n                                    prevItem = this.el.previousElementSibling.shadowRoot.querySelector(\"li .li-text\");\n                                }\n                            }\n                        }\n                    }\n                }\n                if (prevItem !== null && prevItem !== undefined) {\n                    prevItem.focus();\n                }\n            }\n        }\n        if (e.key === \"ArrowDown\" || (e.key === \"Tab\" && !e.shiftKey)) {\n            e.preventDefault();\n            if (!this.lastTreeItemOfParentTree) {\n                //Set focus on the next item\n                var nextItem = void 0;\n                if (e.shiftKey) {\n                    //if shift key was pressed, navigate to the next sibling\n                    if (this.el.nextElementSibling !== null) {\n                        nextItem = this.el.nextElementSibling.shadowRoot.querySelector(\"li .li-text\");\n                    }\n                }\n                else {\n                    if (this.lastTreeItem) {\n                        if (this.hasChildTree && this.opened) {\n                            nextItem = this.el.firstElementChild.firstElementChild.shadowRoot.querySelector(\".li-text\");\n                        }\n                        else {\n                            var thisTree = this.el.parentElement;\n                            var thisTreeParent = thisTree.parentElement;\n                            var thisTreeParentNextTree = thisTreeParent.nextElementSibling;\n                            if (thisTreeParentNextTree === null) {\n                                if (thisTreeParent.parentElement.parentElement\n                                    .nextElementSibling !== null) {\n                                    nextItem = thisTreeParent.parentElement.parentElement.nextElementSibling.shadowRoot.querySelector(\".li-text\");\n                                }\n                            }\n                            else {\n                                nextItem = thisTreeParentNextTree.shadowRoot.querySelector(\".li-text\");\n                            }\n                        }\n                    }\n                    else {\n                        if (this.hasChildTree && this.opened && !this.download) {\n                            nextItem = this.el\n                                .querySelector(\"gxg-tree gxg-tree-item\")\n                                .shadowRoot.querySelector(\"li .li-text\");\n                        }\n                        else {\n                            nextItem = this.el.nextElementSibling.shadowRoot.querySelector(\".li-text\");\n                        }\n                    }\n                }\n                if (nextItem !== null && nextItem !== undefined) {\n                    nextItem.focus();\n                }\n            }\n            else {\n                //Last element of parent tree\n                if (this.el.classList.contains(\"not-leaf\") &&\n                    this.el.shadowRoot.querySelector(\"li\").classList.contains(\"tree-open\")) {\n                    var childTreeFirstTreeItem = this.el.firstElementChild.firstElementChild.shadowRoot.querySelector(\"li .li-text\");\n                    childTreeFirstTreeItem.focus();\n                }\n            }\n        }\n    };\n    class_1.prototype.returnToggleIconType = function () {\n        //Returns the type of icon : gemini-tools/add or gemini-tools/minus\n        if (!this.opened || this.download) {\n            return \"gemini-tools/add\";\n        }\n        else {\n            return \"gemini-tools/minus\";\n        }\n    };\n    class_1.prototype.returnPaddingLeft = function () {\n        //returns the appropriate padding left to the .li-text element\n        var paddingLeft = 0;\n        if (this.numberOfParentTrees !== 1) {\n            paddingLeft = (this.numberOfParentTrees - 1) * 31 + 5;\n        }\n        else {\n            paddingLeft = 5;\n        }\n        this.itemPaddingLeft = paddingLeft;\n        return paddingLeft + \"px\";\n    };\n    class_1.prototype.returnVerticalLineLeftPosition = function () {\n        //Returns the left position of the vertical line that associates the chid-items with the parent item\n        if (this.numberOfParentTrees !== 1) {\n            return this.itemPaddingLeft + 5 + \"px\";\n        }\n        else {\n            return this.itemPaddingLeft + 5 + \"px\";\n        }\n    };\n    class_1.prototype.checkboxTabIndex = function () {\n        return -1;\n    };\n    class_1.prototype.liTextTabIndex = function () {\n        return 1;\n    };\n    class_1.prototype.setIndeterminate = function () {\n        if (this.indeterminate) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    class_1.prototype.checkboxClicked = function () {\n        if (this.checkbox) {\n            if (this.checked) {\n                this.checked = false;\n                this.toggleTreeItemsCheckboxes(false);\n                this.checkboxClickedEvent.emit(false);\n            }\n            else {\n                this.checked = true;\n                this.toggleTreeItemsCheckboxes(true);\n                this.checkboxClickedEvent.emit(true);\n            }\n        }\n    };\n    class_1.prototype.toggleTreeItemsCheckboxes = function (checked) {\n        //Only do if toggleCheckboxes property exists in parent tree\n        var parentTree = this.el.parentElement;\n        if (parentTree.toggleCheckboxes) {\n            this.indeterminate = false;\n            var childTree = this.el.querySelector(\"gxg-tree\");\n            if (childTree !== null) {\n                var childTreeItems = childTree.querySelectorAll(\"gxg-tree-item\");\n                childTreeItems.forEach(function (treeItem) {\n                    if (checked) {\n                        treeItem.checked = true;\n                    }\n                    else {\n                        treeItem.checked = false;\n                    }\n                });\n            }\n        }\n    };\n    class_1.prototype.render = function () {\n        return (Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { class: { leaf: this.isLeaf, \"not-leaf\": !this.isLeaf } }, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"li\", { class: {\n                \"tree-open\": this.opened,\n                disabled: this.disabled,\n            } }, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"div\", { class: {\n                \"li-text\": true,\n                \"li-text--not-leaf\": !this.isLeaf,\n                \"li-text--leaf\": this.isLeaf,\n                \"li-text--first-tree-item\": this.firstTreeItem,\n                \"li-text--has-child-tree\": this.hasChildTree,\n                \"li-text--selected\": this.selected,\n            }, style: { paddingLeft: this.returnPaddingLeft() }, onClick: this.liTextClicked.bind(this), onDblClick: this.liTextDoubleClicked.bind(this), onKeyDown: this.liTextKeyDownPressed.bind(this), tabIndex: this.liTextTabIndex() }, !this.isLeaf || this.download\n            ? [\n                Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"span\", { class: { \"vertical-line\": true }, style: {\n                        //height: this.verticalLineHeight,\n                        height: this.numberOfDirectTreeItemsDescendants * 20 -\n                            10 +\n                            \"px\",\n                        left: this.returnVerticalLineLeftPosition(),\n                    } }),\n                Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"div\", { class: { \"closed-opened-icons\": true } }, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"gxg-icon\", { type: this.returnToggleIconType(), size: \"small\", onClick: this.toggleTreeIconClicked.bind(this), class: \"toggle-icon\" })),\n            ]\n            : null, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"span\", { class: {\n                \"horizontal-line\": true,\n                \"display-none\": this.numberOfParentTrees === 1,\n            }, style: {\n                left: this.itemPaddingLeft + \"px\",\n            } }), this.checkbox ? (Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"gxg-form-checkbox\", { checked: this.checked, class: { checkbox: true }, tabIndex: this.checkboxTabIndex(), indeterminate: this.setIndeterminate(), disabled: this.disabled, onClick: this.checkboxClicked.bind(this) })) : null, this.leftIcon ? (Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"gxg-icon\", { size: \"small\", type: this.leftIcon, color: this.disabled ? \"disabled\" : \"auto\" })) : null, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"span\", { class: \"text\" }, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"slot\", null)), this.rightIcon ? (Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"gxg-icon\", { size: \"small\", type: this.rightIcon, color: this.rightIconColor, class: { \"right-icon\": true } })) : null, this.download ? Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"span\", { class: { loading: true } }) : null), Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"slot\", { name: \"tree\" }))));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"g\"])(this); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"downloaded\": [\"watchHandler\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nGxgTreeItem.style = treeItemCss;\n\n\n\n//# sourceURL=webpack:////__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/gxg-tree-item.entry.js?");

/***/ })

}]);