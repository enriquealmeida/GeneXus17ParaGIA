(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[18],{

/***/ "../../node_modules/@genexus/gemini/dist/esm-es5/gxg-test.entry.js":
/*!******************************************************************************************************!*\
  !*** /__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/gxg-test.entry.js ***!
  \******************************************************************************************************/
/*! exports provided: gxg_test */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gxg_test\", function() { return GxgTest; });\n/* harmony import */ var _index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-09b1517f.js */ \"../../node_modules/@genexus/gemini/dist/esm-es5/index-09b1517f.js\");\n/* harmony import */ var _store_f5fbe254_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store-f5fbe254.js */ \"../../node_modules/@genexus/gemini/dist/esm-es5/store-f5fbe254.js\");\n\n\nvar testCss = \":host{background-color:red}:host(.large){background-color:yellow}\";\nvar GxgTest = /** @class */ (function () {\n    function GxgTest(hostRef) {\n        Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n    }\n    GxgTest.prototype.handleFocus = function (focusEvent) {\n        console.log(\"gxg-test tiene foco\");\n        console.log(focusEvent);\n    };\n    GxgTest.prototype.onInputFocus = function (e) {\n        console.log(\"input has focus\");\n        console.log(e);\n    };\n    GxgTest.prototype.render = function () {\n        var _this = this;\n        return (Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], { class: {\n                large: _store_f5fbe254_js__WEBPACK_IMPORTED_MODULE_1__[\"s\"].large,\n            } }, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"input\", { type: \"text\", onFocus: function (e) { return _this.onInputFocus(e); } })));\n    };\n    return GxgTest;\n}());\nGxgTest.style = testCss;\n\n\n\n//# sourceURL=webpack:////__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/gxg-test.entry.js?");

/***/ }),

/***/ "../../node_modules/@genexus/gemini/dist/esm-es5/store-f5fbe254.js":
/*!******************************************************************************************************!*\
  !*** /__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/store-f5fbe254.js ***!
  \******************************************************************************************************/
/*! exports provided: s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return state; });\n/* harmony import */ var _index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-09b1517f.js */ \"../../node_modules/@genexus/gemini/dist/esm-es5/index-09b1517f.js\");\n\nvar appendToMap = function (map, propName, value) {\n    var items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nvar debounce = function (fn, ms) {\n    var timeoutId;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            timeoutId = 0;\n            fn.apply(void 0, args);\n        }, ms);\n    };\n};\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nvar isConnected = function (maybeElement) { return !('isConnected' in maybeElement) || maybeElement.isConnected; };\nvar cleanupElements = debounce(function (map) {\n    for (var _i = 0, _a = map.keys(); _i < _a.length; _i++) {\n        var key = _a[_i];\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nvar stencilSubscription = function (_a) {\n    var on = _a.on;\n    var elmsToUpdate = new Map();\n    if (typeof _index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"f\"] === 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        on('dispose', function () {\n            elmsToUpdate.clear();\n        });\n        on('get', function (propName) {\n            var elm = Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"f\"])();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        });\n        on('set', function (propName) {\n            var elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"i\"]));\n            }\n            cleanupElements(elmsToUpdate);\n        });\n        on('reset', function () {\n            elmsToUpdate.forEach(function (elms) { return elms.forEach(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"i\"]); });\n            cleanupElements(elmsToUpdate);\n        });\n    }\n};\nvar createObservableMap = function (defaultState, shouldUpdate) {\n    if (shouldUpdate === void 0) { shouldUpdate = function (a, b) { return a !== b; }; }\n    var states = new Map(Object.entries(defaultState !== null && defaultState !== void 0 ? defaultState : {}));\n    var handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    var reset = function () {\n        states = new Map(Object.entries(defaultState !== null && defaultState !== void 0 ? defaultState : {}));\n        handlers.reset.forEach(function (cb) { return cb(); });\n    };\n    var dispose = function () {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach(function (cb) { return cb(); });\n        reset();\n    };\n    var get = function (propName) {\n        handlers.get.forEach(function (cb) { return cb(propName); });\n        return states.get(propName);\n    };\n    var set = function (propName, value) {\n        var oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach(function (cb) { return cb(propName, value, oldValue); });\n        }\n    };\n    var state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(defaultState, {\n            get: function (_, propName) {\n                return get(propName);\n            },\n            ownKeys: function (_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor: function () {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has: function (_, propName) {\n                return states.has(propName);\n            },\n            set: function (_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    var on = function (eventName, callback) {\n        handlers[eventName].push(callback);\n        return function () {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    var onChange = function (propName, cb) {\n        var unSet = on('set', function (key, newValue) {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        var unReset = on('reset', function () { return cb(defaultState[propName]); });\n        return function () {\n            unSet();\n            unReset();\n        };\n    };\n    var use = function () {\n        var subscriptions = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            subscriptions[_i] = arguments[_i];\n        }\n        return subscriptions.forEach(function (subscription) {\n            if (subscription.set) {\n                on('set', subscription.set);\n            }\n            if (subscription.get) {\n                on('get', subscription.get);\n            }\n            if (subscription.reset) {\n                on('reset', subscription.reset);\n            }\n        });\n    };\n    var forceUpdate = function (key) {\n        var oldValue = states.get(key);\n        handlers.set.forEach(function (cb) { return cb(key, oldValue, oldValue); });\n    };\n    return {\n        state: state,\n        get: get,\n        set: set,\n        on: on,\n        onChange: onChange,\n        use: use,\n        dispose: dispose,\n        reset: reset,\n        forceUpdate: forceUpdate,\n    };\n};\nvar removeFromArray = function (array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\nvar createStore = function (defaultState, shouldUpdate) {\n    var map = createObservableMap(defaultState, shouldUpdate);\n    stencilSubscription(map);\n    return map;\n};\nvar state = createStore({\n    large: document.documentElement.classList.contains(\"gxg-large\"),\n}).state;\n\n\n\n//# sourceURL=webpack:////__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/store-f5fbe254.js?");

/***/ })

}]);