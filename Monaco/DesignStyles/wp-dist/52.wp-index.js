(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[52],{

/***/ "../../node_modules/@genexus/gemini/dist/esm-es5/gxg-listbox.entry.js":
/*!*********************************************************************************************************!*\
  !*** /__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/gxg-listbox.entry.js ***!
  \*********************************************************************************************************/
/*! exports provided: gxg_listbox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gxg_listbox\", function() { return GxgListbox; });\n/* harmony import */ var _index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-09b1517f.js */ \"../../node_modules/@genexus/gemini/dist/esm-es5/index-09b1517f.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar listboxCss = \":host{display:block}:host .header{height:var(--spacing-comp-06);background-color:var(--gray-02);display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0 var(--spacing-comp-02);font-family:var(--font-family-primary);text-transform:uppercase;font-size:var(--font-size-sm);font-weight:var(--font-weight-bold);color:var(--color-on-background)}:host .main{border-style:var(--border-style-regular);border-width:var(--border-radius-xs);border-color:var(--gray-02)}:host .icon{-webkit-margin-end:var(--spacing-comp-01);margin-inline-end:var(--spacing-comp-01)}:host .checkbox{-webkit-margin-end:var(--spacing-comp-01);margin-inline-end:var(--spacing-comp-01)}:host.selected{background-color:var(--color-secondary-active);color:var(--color-always-white)}\";\nvar GxgListbox = /** @class */ (function () {\n    function class_1(hostRef) {\n        Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"r\"])(this, hostRef);\n        this.selectionChanged = Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(this, \"selectionChanged\", 7);\n        /**\n         * The listbox title that appears on the header\n         */\n        this.theTitle = \"\";\n        /**\n         * The listbox width\n         */\n        this.width = \"280px\";\n        /**\n         * The prescence of this attribute will display a checkbox for every item\n         */\n        this.checkboxes = false;\n        /**\n         * The prescence of this attribute will deactivate multi-selection\n         */\n        this.singleSelection = false;\n        this.lastSelectedItemIndex = undefined;\n    }\n    class_1.prototype.getSelectedItems = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Object.assign({}, this.selectedItems())];\n            });\n        });\n    };\n    class_1.prototype.componentWillLoad = function () {\n        //Set checkboxes\n        if (this.checkboxes) {\n            var items = this.el.querySelectorAll(\"gxg-listbox-item\");\n            items.forEach(function (item) {\n                var checkbox = document.createElement(\"gxg-form-checkbox\");\n                checkbox.setAttribute(\"slot\", \"checkbox\");\n                checkbox.setAttribute(\"tabindex\", \"-1\");\n                item.prepend(checkbox);\n            });\n        }\n        //Set index and Tabindex\n        var itemsNodeList = this.el.querySelectorAll(\"gxg-listbox-item\");\n        itemsNodeList.forEach(function (item, i) {\n            //index\n            var itemHtmlElement = item;\n            itemHtmlElement.setAttribute(\"index\", i.toString());\n            //tabindex\n            item.setAttribute(\"tabindex\", \"0\");\n        });\n    };\n    class_1.prototype.itemClickedHandler = function (e) {\n        var clickedItem = this.getItem(e.detail[\"index\"]);\n        var clickedItemIndex = parseInt(clickedItem.getAttribute(\"index\"));\n        if (!this.singleSelection) {\n            if (!e.detail.crtlKey && !e.detail.cmdKey && !e.detail.shiftKey) {\n                //If ctrl and command and shift keys were not pressed, unselect previous selected items\n                this.clearSelectedItems();\n                this.selectItem(clickedItem);\n                this.lastSelectedItemIndex = clickedItemIndex;\n            }\n            else if (e.detail.crtlKey || e.detail.cmdKey) {\n                this.toggleItem(clickedItem);\n                this.lastSelectedItemIndex = clickedItemIndex;\n            }\n            else if (e.detail.shiftKey) {\n                if (this.lastSelectedItemIndex === undefined) {\n                    this.selectMulitpleItems(0, clickedItemIndex);\n                    this.lastSelectedItemIndex = clickedItemIndex;\n                }\n                else {\n                    this.clearSelectedItems();\n                    if (clickedItemIndex === this.lastSelectedItemIndex) {\n                        this.selectItem(clickedItem);\n                    }\n                    else if (clickedItemIndex < this.lastSelectedItemIndex) {\n                        this.selectMulitpleItems(clickedItemIndex, this.lastSelectedItemIndex);\n                    }\n                    else {\n                        this.selectMulitpleItems(this.lastSelectedItemIndex, clickedItemIndex);\n                    }\n                }\n            }\n        }\n        else {\n            this.clearSelectedItems();\n            this.selectItem(clickedItem);\n        }\n        this.emmitSelectedItems();\n    };\n    class_1.prototype.KeyPressedHandler = function (e) {\n        var itemWithFocus = document.activeElement;\n        if (itemWithFocus.tagName !== \"GXG-LISTBOX-ITEM\") {\n            itemWithFocus = undefined;\n        }\n        if (e.detail.eCode === \"ArrowDown\") {\n            var nextElement = this.getItem(e.detail.index).nextElementSibling;\n            if (nextElement !== null) {\n                if ((!e.detail.shiftKey && !e.detail.crtlKey) ||\n                    (this.singleSelection && !e.detail.crtlKey)) {\n                    this.clearSelectedItems();\n                }\n                nextElement.focus();\n                if (!e.detail.crtlKey) {\n                    if (!nextElement.classList.contains(\"selected\")) {\n                        this.selectItem(nextElement);\n                    }\n                    else {\n                        if (itemWithFocus) {\n                            this.unselectItem(itemWithFocus);\n                        }\n                    }\n                }\n            }\n        }\n        else if (e.detail.eCode === \"ArrowUp\") {\n            var prevElement = this.getItem(e.detail.index).previousElementSibling;\n            if (prevElement !== null) {\n                if ((!e.detail.shiftKey && !e.detail.crtlKey) ||\n                    (this.singleSelection && !e.detail.crtlKey)) {\n                    this.clearSelectedItems();\n                }\n                prevElement.focus();\n                if (!e.detail.crtlKey) {\n                    if (!prevElement.classList.contains(\"selected\")) {\n                        this.selectItem(prevElement);\n                    }\n                    else {\n                        if (itemWithFocus) {\n                            this.unselectItem(itemWithFocus);\n                        }\n                    }\n                }\n            }\n        }\n        else if (e.detail.eCode === \"Enter\") {\n            if (!e.detail.crtlKey) {\n                this.clearSelectedItems();\n            }\n            this.selectItem(itemWithFocus);\n        }\n        this.emmitSelectedItems();\n    };\n    class_1.prototype.selectMulitpleItems = function (fromIndex, toIndex) {\n        for (var i = fromIndex; i <= toIndex; i++) {\n            var item = this.el.querySelector(\"gxg-listbox-item[index='\" + i + \"']\");\n            this.selectItem(item);\n        }\n    };\n    class_1.prototype.clearSelectedItems = function () {\n        var actualSelectedItems = this.el.querySelectorAll(\".selected\");\n        if (actualSelectedItems.length > 0) {\n            actualSelectedItems.forEach(function (item) {\n                item.classList.remove(\"selected\");\n                //set icon color to auto\n                item.iconColor = \"auto\";\n                //checkbox\n                var checkbox = item.querySelector(\"gxg-form-checkbox\");\n                if (checkbox !== null) {\n                    checkbox.checked = false;\n                }\n            });\n        }\n    };\n    class_1.prototype.getItem = function (index) {\n        return this.el.querySelector(\"gxg-listbox-item[index='\" + index + \"']\");\n    };\n    class_1.prototype.selectItem = function (item) {\n        item.classList.add(\"selected\");\n        //set icon color to negative\n        item.iconColor = \"negative\";\n        //checkbox\n        var checkbox = item.querySelector(\"gxg-form-checkbox\");\n        if (checkbox !== null) {\n            checkbox.checked = true;\n        }\n    };\n    class_1.prototype.unselectItem = function (item) {\n        item.classList.remove(\"selected\");\n        //set icon color to auto\n        item.iconColor = \"auto\";\n        //checkbox\n        var checkbox = item.querySelector(\"gxg-form-checkbox\");\n        if (checkbox !== null) {\n            checkbox.checked = false;\n        }\n    };\n    class_1.prototype.toggleItem = function (item) {\n        item.classList.toggle(\"selected\");\n        var checkbox = item.querySelector(\"gxg-form-checkbox\");\n        if (checkbox !== null) {\n            if (checkbox.checked === true) {\n                checkbox.checked = false;\n            }\n            else {\n                checkbox.checked = true;\n            }\n        }\n    };\n    class_1.prototype.selectedItems = function () {\n        var selectedItems = this.el.querySelectorAll(\".selected\");\n        var selectedItemsArray = [];\n        selectedItems.forEach(function (item) {\n            var itemIndex = item.getAttribute(\"index\");\n            var itemValue = item.getAttribute(\"value\");\n            if (itemValue === null) {\n                itemValue = item.textContent;\n            }\n            else {\n                itemValue = itemValue.toString();\n            }\n            var itemObj = {\n                index: itemIndex,\n                value: itemValue,\n            };\n            selectedItemsArray.push(itemObj);\n        });\n        return selectedItemsArray;\n    };\n    class_1.prototype.emmitSelectedItems = function () {\n        this.selectionChanged.emit(Object.assign({}, this.selectedItems()));\n    };\n    class_1.prototype.render = function () {\n        return (Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"H\"], null, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"div\", { style: { width: this.width }, class: { container: true } }, this.theTitle ? (Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"header\", { class: { header: true } }, this.theTitle)) : null, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"main\", { class: { main: true } }, Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"h\"])(\"slot\", null)))));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return Object(_index_09b1517f_js__WEBPACK_IMPORTED_MODULE_0__[\"g\"])(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nGxgListbox.style = listboxCss;\n\n\n\n//# sourceURL=webpack:////__w/gx-web-editors/gx-web-editors/node_modules/@genexus/gemini/dist/esm-es5/gxg-listbox.entry.js?");

/***/ })

}]);