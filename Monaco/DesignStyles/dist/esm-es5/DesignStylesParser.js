// Generated from src/components/common/grammar/definitions/DesignStyles.g4 by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');
var DesignStylesListener = require('./DesignStylesListener').DesignStylesListener;
var grammarFileName = "DesignStyles.g4";


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0003o\u029a\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t",
    "\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004",
    "\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004",
    "\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004",
    "\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014\t",
    "\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017\u0004",
    "\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b\t",
    "\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e\u0004",
    "\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004$\t$\u0004",
    "%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004+\t+\u0004",
    ",\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u00042\t2\u0004",
    "3\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u00049\t9\u0004",
    ":\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0007\u0002\u0087\n\u0002\f\u0002\u000e\u0002\u008a\u000b\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0005\u0003\u0093\n\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0004\u0003\u0004\u0007\u0004\u0099\n\u0004\f\u0004\u000e\u0004\u009c",
    "\u000b\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0007\u0006",
    "\u00a2\n\u0006\f\u0006\u000e\u0006\u00a5\u000b\u0006\u0003\u0007\u0003",
    "\u0007\u0003\u0007\u0005\u0007\u00aa\n\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0007\u0007\u00af\n\u0007\f\u0007\u000e\u0007\u00b2\u000b",
    "\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003",
    "\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0005\u000b\u00c0\n\u000b",
    "\u0003\f\u0003\f\u0003\f\u0007\f\u00c5\n\f\f\f\u000e\f\u00c8\u000b\f",
    "\u0003\r\u0003\r\u0006\r\u00cc\n\r\r\r\u000e\r\u00cd\u0003\r\u0003\r",
    "\u0003\r\u0003\r\u0003\r\u0007\r\u00d5\n\r\f\r\u000e\r\u00d8\u000b\r",
    "\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0006\u000e\u00de\n\u000e\r",
    "\u000e\u000e\u000e\u00df\u0003\u000e\u0003\u000e\u0007\u000e\u00e4\n",
    "\u000e\f\u000e\u000e\u000e\u00e7\u000b\u000e\u0003\u000e\u0003\u000e",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010",
    "\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0007\u0010\u00f5\n",
    "\u0010\f\u0010\u000e\u0010\u00f8\u000b\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0007\u0011",
    "\u0101\n\u0011\f\u0011\u000e\u0011\u0104\u000b\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0007\u0012\u010b\n\u0012",
    "\f\u0012\u000e\u0012\u010e\u000b\u0012\u0003\u0013\u0005\u0013\u0111",
    "\n\u0013\u0003\u0013\u0003\u0013\u0005\u0013\u0115\n\u0013\u0003\u0013",
    "\u0003\u0013\u0007\u0013\u0119\n\u0013\f\u0013\u000e\u0013\u011c\u000b",
    "\u0013\u0003\u0013\u0005\u0013\u011f\n\u0013\u0003\u0014\u0003\u0014",
    "\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u012c\n\u0016\u0005",
    "\u0016\u012e\n\u0016\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017",
    "\u0007\u0017\u0134\n\u0017\f\u0017\u000e\u0017\u0137\u000b\u0017\u0003",
    "\u0017\u0005\u0017\u013a\n\u0017\u0003\u0017\u0003\u0017\u0006\u0017",
    "\u013e\n\u0017\r\u0017\u000e\u0017\u013f\u0007\u0017\u0142\n\u0017\f",
    "\u0017\u000e\u0017\u0145\u000b\u0017\u0003\u0018\u0003\u0018\u0003\u0018",
    "\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0005\u0018\u014e\n",
    "\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u001a\u0003",
    "\u001a\u0005\u001a\u0156\n\u001a\u0003\u001a\u0007\u001a\u0159\n\u001a",
    "\f\u001a\u000e\u001a\u015c\u000b\u001a\u0003\u001a\u0005\u001a\u015f",
    "\n\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001c\u0003\u001c\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d",
    "\u0003\u001d\u0005\u001d\u016d\n\u001d\u0003\u001e\u0003\u001e\u0003",
    "\u001e\u0003\u001f\u0007\u001f\u0173\n\u001f\f\u001f\u000e\u001f\u0176",
    "\u000b\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0007\u001f\u017b\n",
    "\u001f\f\u001f\u000e\u001f\u017e\u000b\u001f\u0003 \u0003 \u0003 \u0003",
    " \u0005 \u0184\n \u0003 \u0003 \u0003!\u0003!\u0003!\u0003!\u0005!\u018c",
    "\n!\u0003!\u0003!\u0003\"\u0003\"\u0003#\u0003#\u0003#\u0007#\u0195",
    "\n#\f#\u000e#\u0198\u000b#\u0003$\u0003$\u0003%\u0003%\u0003%\u0005",
    "%\u019f\n%\u0003%\u0006%\u01a2\n%\r%\u000e%\u01a3\u0003%\u0003%\u0005",
    "%\u01a8\n%\u0003&\u0003&\u0003&\u0007&\u01ad\n&\f&\u000e&\u01b0\u000b",
    "&\u0003\'\u0003\'\u0003\'\u0007\'\u01b5\n\'\f\'\u000e\'\u01b8\u000b",
    "\'\u0003(\u0007(\u01bb\n(\f(\u000e(\u01be\u000b(\u0003(\u0003(\u0006",
    "(\u01c2\n(\r(\u000e(\u01c3\u0007(\u01c6\n(\f(\u000e(\u01c9\u000b(\u0003",
    ")\u0003)\u0003)\u0003)\u0003)\u0003)\u0003)\u0003)\u0003)\u0003)\u0003",
    ")\u0003)\u0003)\u0003)\u0003)\u0005)\u01da\n)\u0003*\u0003*\u0003*\u0003",
    "*\u0003*\u0003*\u0007*\u01e2\n*\f*\u000e*\u01e5\u000b*\u0003+\u0003",
    "+\u0003+\u0003+\u0005+\u01eb\n+\u0003,\u0003,\u0003,\u0003-\u0003-\u0003",
    "-\u0003-\u0003-\u0003-\u0003-\u0003-\u0003-\u0005-\u01f9\n-\u0003.\u0003",
    ".\u0003.\u0003.\u0003.\u0003/\u0003/\u00030\u00030\u00030\u00050\u0205",
    "\n0\u00031\u00031\u00032\u00032\u00032\u00032\u00033\u00033\u00063\u020f",
    "\n3\r3\u000e3\u0210\u00033\u00033\u00063\u0215\n3\r3\u000e3\u0216\u0003",
    "3\u00033\u00073\u021b\n3\f3\u000e3\u021e\u000b3\u00034\u00034\u0003",
    "5\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u0003",
    "5\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u0003",
    "5\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u00035\u0003",
    "5\u00035\u00035\u00035\u00035\u00055\u0245\n5\u00036\u00056\u0248\n",
    "6\u00036\u00036\u00036\u00036\u00036\u00036\u00056\u0250\n6\u00036\u0007",
    "6\u0253\n6\f6\u000e6\u0256\u000b6\u00036\u00076\u0259\n6\f6\u000e6\u025c",
    "\u000b6\u00036\u00076\u025f\n6\f6\u000e6\u0262\u000b6\u00037\u00037",
    "\u00037\u00037\u00037\u00057\u0269\n7\u00057\u026b\n7\u00037\u00037",
    "\u00038\u00038\u00038\u00038\u00038\u00039\u00039\u00039\u00039\u0003",
    "9\u00039\u00059\u027a\n9\u0003:\u0003:\u0003:\u0003:\u0003:\u0003:\u0005",
    ":\u0282\n:\u0003;\u0003;\u0003;\u0003<\u0003<\u0003<\u0005<\u028a\n",
    "<\u0003<\u0007<\u028d\n<\f<\u000e<\u0290\u000b<\u0005<\u0292\n<\u0003",
    "=\u0003=\u0003>\u0003>\u0003?\u0003?\u0003?\u0002\u0002@\u0002\u0004",
    "\u0006\b\n\f\u000e\u0010\u0012\u0014\u0016\u0018\u001a\u001c\u001e ",
    "\"$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|\u0002\u000b\u0004\u0002",
    "\u0003\u0003<<\u0004\u0002<<>>\u0003\u000226\u0005\u0002**4467\u0004",
    "\u0002>>@@\b\u0002))..003399JJ\u0003\u0002\b\u0010\u0003\u0002\u0011",
    "\u0014\u0004\u0002\r\r\u0015\u0015\u0002\u02ef\u0002~\u0003\u0002\u0002",
    "\u0002\u0004\u008e\u0003\u0002\u0002\u0002\u0006\u0096\u0003\u0002\u0002",
    "\u0002\b\u009d\u0003\u0002\u0002\u0002\n\u009f\u0003\u0002\u0002\u0002",
    "\f\u00a9\u0003\u0002\u0002\u0002\u000e\u00b3\u0003\u0002\u0002\u0002",
    "\u0010\u00b5\u0003\u0002\u0002\u0002\u0012\u00b9\u0003\u0002\u0002\u0002",
    "\u0014\u00bf\u0003\u0002\u0002\u0002\u0016\u00c1\u0003\u0002\u0002\u0002",
    "\u0018\u00c9\u0003\u0002\u0002\u0002\u001a\u00db\u0003\u0002\u0002\u0002",
    "\u001c\u00ea\u0003\u0002\u0002\u0002\u001e\u00ef\u0003\u0002\u0002\u0002",
    " \u00fb\u0003\u0002\u0002\u0002\"\u0107\u0003\u0002\u0002\u0002$\u011e",
    "\u0003\u0002\u0002\u0002&\u0120\u0003\u0002\u0002\u0002(\u0124\u0003",
    "\u0002\u0002\u0002*\u0126\u0003\u0002\u0002\u0002,\u0139\u0003\u0002",
    "\u0002\u0002.\u014d\u0003\u0002\u0002\u00020\u014f\u0003\u0002\u0002",
    "\u00022\u0153\u0003\u0002\u0002\u00024\u0160\u0003\u0002\u0002\u0002",
    "6\u0165\u0003\u0002\u0002\u00028\u016c\u0003\u0002\u0002\u0002:\u016e",
    "\u0003\u0002\u0002\u0002<\u0174\u0003\u0002\u0002\u0002>\u017f\u0003",
    "\u0002\u0002\u0002@\u0187\u0003\u0002\u0002\u0002B\u018f\u0003\u0002",
    "\u0002\u0002D\u0191\u0003\u0002\u0002\u0002F\u0199\u0003\u0002\u0002",
    "\u0002H\u019e\u0003\u0002\u0002\u0002J\u01a9\u0003\u0002\u0002\u0002",
    "L\u01b1\u0003\u0002\u0002\u0002N\u01bc\u0003\u0002\u0002\u0002P\u01d9",
    "\u0003\u0002\u0002\u0002R\u01db\u0003\u0002\u0002\u0002T\u01e6\u0003",
    "\u0002\u0002\u0002V\u01ec\u0003\u0002\u0002\u0002X\u01f8\u0003\u0002",
    "\u0002\u0002Z\u01fa\u0003\u0002\u0002\u0002\\\u01ff\u0003\u0002\u0002",
    "\u0002^\u0204\u0003\u0002\u0002\u0002`\u0206\u0003\u0002\u0002\u0002",
    "b\u0208\u0003\u0002\u0002\u0002d\u020c\u0003\u0002\u0002\u0002f\u021f",
    "\u0003\u0002\u0002\u0002h\u0244\u0003\u0002\u0002\u0002j\u024f\u0003",
    "\u0002\u0002\u0002l\u0263\u0003\u0002\u0002\u0002n\u026e\u0003\u0002",
    "\u0002\u0002p\u0279\u0003\u0002\u0002\u0002r\u0281\u0003\u0002\u0002",
    "\u0002t\u0283\u0003\u0002\u0002\u0002v\u0291\u0003\u0002\u0002\u0002",
    "x\u0293\u0003\u0002\u0002\u0002z\u0295\u0003\u0002\u0002\u0002|\u0297",
    "\u0003\u0002\u0002\u0002~\u007f\u0007\u0016\u0002\u0002\u007f\u0080",
    "\u0007>\u0002\u0002\u0080\u0088\u0007#\u0002\u0002\u0081\u0087\u0005",
    "\u0018\r\u0002\u0082\u0087\u0005\u001c\u000f\u0002\u0083\u0087\u0005",
    "\u001e\u0010\u0002\u0084\u0087\u0005 \u0011\u0002\u0085\u0087\u0005",
    "\u0004\u0003\u0002\u0086\u0081\u0003\u0002\u0002\u0002\u0086\u0082\u0003",
    "\u0002\u0002\u0002\u0086\u0083\u0003\u0002\u0002\u0002\u0086\u0084\u0003",
    "\u0002\u0002\u0002\u0086\u0085\u0003\u0002\u0002\u0002\u0087\u008a\u0003",
    "\u0002\u0002\u0002\u0088\u0086\u0003\u0002\u0002\u0002\u0088\u0089\u0003",
    "\u0002\u0002\u0002\u0089\u008b\u0003\u0002\u0002\u0002\u008a\u0088\u0003",
    "\u0002\u0002\u0002\u008b\u008c\u0007$\u0002\u0002\u008c\u008d\u0007",
    "\u0002\u0002\u0003\u008d\u0003\u0003\u0002\u0002\u0002\u008e\u0092\u0007",
    "\u001c\u0002\u0002\u008f\u0093\u0005\u0006\u0004\u0002\u0090\u0093\u0005",
    "\f\u0007\u0002\u0091\u0093\u0005\n\u0006\u0002\u0092\u008f\u0003\u0002",
    "\u0002\u0002\u0092\u0090\u0003\u0002\u0002\u0002\u0092\u0091\u0003\u0002",
    "\u0002\u0002\u0093\u0094\u0003\u0002\u0002\u0002\u0094\u0095\u0007+",
    "\u0002\u0002\u0095\u0005\u0003\u0002\u0002\u0002\u0096\u009a\u0005\b",
    "\u0005\u0002\u0097\u0099\u0005\b\u0005\u0002\u0098\u0097\u0003\u0002",
    "\u0002\u0002\u0099\u009c\u0003\u0002\u0002\u0002\u009a\u0098\u0003\u0002",
    "\u0002\u0002\u009a\u009b\u0003\u0002\u0002\u0002\u009b\u0007\u0003\u0002",
    "\u0002\u0002\u009c\u009a\u0003\u0002\u0002\u0002\u009d\u009e\u0007G",
    "\u0002\u0002\u009e\t\u0003\u0002\u0002\u0002\u009f\u00a3\u0005@!\u0002",
    "\u00a0\u00a2\u0005@!\u0002\u00a1\u00a0\u0003\u0002\u0002\u0002\u00a2",
    "\u00a5\u0003\u0002\u0002\u0002\u00a3\u00a1\u0003\u0002\u0002\u0002\u00a3",
    "\u00a4\u0003\u0002\u0002\u0002\u00a4\u000b\u0003\u0002\u0002\u0002\u00a5",
    "\u00a3\u0003\u0002\u0002\u0002\u00a6\u00aa\u0005\u000e\b\u0002\u00a7",
    "\u00aa\u0005\u0010\t\u0002\u00a8\u00aa\u0005\u0012\n\u0002\u00a9\u00a6",
    "\u0003\u0002\u0002\u0002\u00a9\u00a7\u0003\u0002\u0002\u0002\u00a9\u00a8",
    "\u0003\u0002\u0002\u0002\u00aa\u00b0\u0003\u0002\u0002\u0002\u00ab\u00af",
    "\u0005\u000e\b\u0002\u00ac\u00af\u0005\u0010\t\u0002\u00ad\u00af\u0005",
    "\u0012\n\u0002\u00ae\u00ab\u0003\u0002\u0002\u0002\u00ae\u00ac\u0003",
    "\u0002\u0002\u0002\u00ae\u00ad\u0003\u0002\u0002\u0002\u00af\u00b2\u0003",
    "\u0002\u0002\u0002\u00b0\u00ae\u0003\u0002\u0002\u0002\u00b0\u00b1\u0003",
    "\u0002\u0002\u0002\u00b1\r\u0003\u0002\u0002\u0002\u00b2\u00b0\u0003",
    "\u0002\u0002\u0002\u00b3\u00b4\u0005\u0014\u000b\u0002\u00b4\u000f\u0003",
    "\u0002\u0002\u0002\u00b5\u00b6\u0005\u0014\u000b\u0002\u00b6\u00b7\u0007",
    ",\u0002\u0002\u00b7\u00b8\u0007\u0016\u0002\u0002\u00b8\u0011\u0003",
    "\u0002\u0002\u0002\u00b9\u00ba\u0005\u0014\u000b\u0002\u00ba\u00bb\u0007",
    ",\u0002\u0002\u00bb\u00bc\u0007\u0017\u0002\u0002\u00bc\u0013\u0003",
    "\u0002\u0002\u0002\u00bd\u00c0\u0005\u0016\f\u0002\u00be\u00c0\u0005",
    "B\"\u0002\u00bf\u00bd\u0003\u0002\u0002\u0002\u00bf\u00be\u0003\u0002",
    "\u0002\u0002\u00c0\u0015\u0003\u0002\u0002\u0002\u00c1\u00c6\u0007>",
    "\u0002\u0002\u00c2\u00c3\u0007,\u0002\u0002\u00c3\u00c5\u0007>\u0002",
    "\u0002\u00c4\u00c2\u0003\u0002\u0002\u0002\u00c5\u00c8\u0003\u0002\u0002",
    "\u0002\u00c6\u00c4\u0003\u0002\u0002\u0002\u00c6\u00c7\u0003\u0002\u0002",
    "\u0002\u00c7\u0017\u0003\u0002\u0002\u0002\u00c8\u00c6\u0003\u0002\u0002",
    "\u0002\u00c9\u00cb\u0007\u001d\u0002\u0002\u00ca\u00cc\u0007>\u0002",
    "\u0002\u00cb\u00ca\u0003\u0002\u0002\u0002\u00cc\u00cd\u0003\u0002\u0002",
    "\u0002\u00cd\u00cb\u0003\u0002\u0002\u0002\u00cd\u00ce\u0003\u0002\u0002",
    "\u0002\u00ce\u00d6\u0003\u0002\u0002\u0002\u00cf\u00d5\u0005\u0018\r",
    "\u0002\u00d0\u00d5\u0005\u001c\u000f\u0002\u00d1\u00d5\u0005\u001e\u0010",
    "\u0002\u00d2\u00d5\u0005 \u0011\u0002\u00d3\u00d5\u0005\u0004\u0003",
    "\u0002\u00d4\u00cf\u0003\u0002\u0002\u0002\u00d4\u00d0\u0003\u0002\u0002",
    "\u0002\u00d4\u00d1\u0003\u0002\u0002\u0002\u00d4\u00d2\u0003\u0002\u0002",
    "\u0002\u00d4\u00d3\u0003\u0002\u0002\u0002\u00d5\u00d8\u0003\u0002\u0002",
    "\u0002\u00d6\u00d4\u0003\u0002\u0002\u0002\u00d6\u00d7\u0003\u0002\u0002",
    "\u0002\u00d7\u00d9\u0003\u0002\u0002\u0002\u00d8\u00d6\u0003\u0002\u0002",
    "\u0002\u00d9\u00da\u0007\u001e\u0002\u0002\u00da\u0019\u0003\u0002\u0002",
    "\u0002\u00db\u00dd\u0007\u001d\u0002\u0002\u00dc\u00de\u0007>\u0002",
    "\u0002\u00dd\u00dc\u0003\u0002\u0002\u0002\u00de\u00df\u0003\u0002\u0002",
    "\u0002\u00df\u00dd\u0003\u0002\u0002\u0002\u00df\u00e0\u0003\u0002\u0002",
    "\u0002\u00e0\u00e5\u0003\u0002\u0002\u0002\u00e1\u00e4\u0005\u0018\r",
    "\u0002\u00e2\u00e4\u0005\u001c\u000f\u0002\u00e3\u00e1\u0003\u0002\u0002",
    "\u0002\u00e3\u00e2\u0003\u0002\u0002\u0002\u00e4\u00e7\u0003\u0002\u0002",
    "\u0002\u00e5\u00e3\u0003\u0002\u0002\u0002\u00e5\u00e6\u0003\u0002\u0002",
    "\u0002\u00e6\u00e8\u0003\u0002\u0002\u0002\u00e7\u00e5\u0003\u0002\u0002",
    "\u0002\u00e8\u00e9\u0007\u001e\u0002\u0002\u00e9\u001b\u0003\u0002\u0002",
    "\u0002\u00ea\u00eb\u0005v<\u0002\u00eb\u00ec\u0007#\u0002\u0002\u00ec",
    "\u00ed\u0005,\u0017\u0002\u00ed\u00ee\u0007$\u0002\u0002\u00ee\u001d",
    "\u0003\u0002\u0002\u0002\u00ef\u00f0\u0007\u001a\u0002\u0002\u00f0\u00f6",
    "\u0007#\u0002\u0002\u00f1\u00f2\u00050\u0019\u0002\u00f2\u00f3\u0007",
    "+\u0002\u0002\u00f3\u00f5\u0003\u0002\u0002\u0002\u00f4\u00f1\u0003",
    "\u0002\u0002\u0002\u00f5\u00f8\u0003\u0002\u0002\u0002\u00f6\u00f4\u0003",
    "\u0002\u0002\u0002\u00f6\u00f7\u0003\u0002\u0002\u0002\u00f7\u00f9\u0003",
    "\u0002\u0002\u0002\u00f8\u00f6\u0003\u0002\u0002\u0002\u00f9\u00fa\u0007",
    "$\u0002\u0002\u00fa\u001f\u0003\u0002\u0002\u0002\u00fb\u00fc\u0007",
    "\u001b\u0002\u0002\u00fc\u00fd\u0005\"\u0012\u0002\u00fd\u0102\u0007",
    "#\u0002\u0002\u00fe\u0101\u0005\u001a\u000e\u0002\u00ff\u0101\u0005",
    "\u001c\u000f\u0002\u0100\u00fe\u0003\u0002\u0002\u0002\u0100\u00ff\u0003",
    "\u0002\u0002\u0002\u0101\u0104\u0003\u0002\u0002\u0002\u0102\u0100\u0003",
    "\u0002\u0002\u0002\u0102\u0103\u0003\u0002\u0002\u0002\u0103\u0105\u0003",
    "\u0002\u0002\u0002\u0104\u0102\u0003\u0002\u0002\u0002\u0105\u0106\u0007",
    "$\u0002\u0002\u0106!\u0003\u0002\u0002\u0002\u0107\u010c\u0005$\u0013",
    "\u0002\u0108\u0109\u0007)\u0002\u0002\u0109\u010b\u0005$\u0013\u0002",
    "\u010a\u0108\u0003\u0002\u0002\u0002\u010b\u010e\u0003\u0002\u0002\u0002",
    "\u010c\u010a\u0003\u0002\u0002\u0002\u010c\u010d\u0003\u0002\u0002\u0002",
    "\u010d#\u0003\u0002\u0002\u0002\u010e\u010c\u0003\u0002\u0002\u0002",
    "\u010f\u0111\t\u0002\u0002\u0002\u0110\u010f\u0003\u0002\u0002\u0002",
    "\u0110\u0111\u0003\u0002\u0002\u0002\u0111\u0112\u0003\u0002\u0002\u0002",
    "\u0112\u0115\u0005(\u0015\u0002\u0113\u0115\u0005*\u0016\u0002\u0114",
    "\u0110\u0003\u0002\u0002\u0002\u0114\u0113\u0003\u0002\u0002\u0002\u0115",
    "\u011a\u0003\u0002\u0002\u0002\u0116\u0117\u0007;\u0002\u0002\u0117",
    "\u0119\u0005*\u0016\u0002\u0118\u0116\u0003\u0002\u0002\u0002\u0119",
    "\u011c\u0003\u0002\u0002\u0002\u011a\u0118\u0003\u0002\u0002\u0002\u011a",
    "\u011b\u0003\u0002\u0002\u0002\u011b\u011f\u0003\u0002\u0002\u0002\u011c",
    "\u011a\u0003\u0002\u0002\u0002\u011d\u011f\u0005&\u0014\u0002\u011e",
    "\u0114\u0003\u0002\u0002\u0002\u011e\u011d\u0003\u0002\u0002\u0002\u011f",
    "%\u0003\u0002\u0002\u0002\u0120\u0121\u0007\u001f\u0002\u0002\u0121",
    "\u0122\u0007,\u0002\u0002\u0122\u0123\u0005^0\u0002\u0123\'\u0003\u0002",
    "\u0002\u0002\u0124\u0125\u0007>\u0002\u0002\u0125)\u0003\u0002\u0002",
    "\u0002\u0126\u0127\u0007\'\u0002\u0002\u0127\u012d\u0007>\u0002\u0002",
    "\u0128\u012b\u0007*\u0002\u0002\u0129\u012c\u0007>\u0002\u0002\u012a",
    "\u012c\u0005V,\u0002\u012b\u0129\u0003\u0002\u0002\u0002\u012b\u012a",
    "\u0003\u0002\u0002\u0002\u012c\u012e\u0003\u0002\u0002\u0002\u012d\u0128",
    "\u0003\u0002\u0002\u0002\u012d\u012e\u0003\u0002\u0002\u0002\u012e\u012f",
    "\u0003\u0002\u0002\u0002\u012f\u0130\u0007(\u0002\u0002\u0130+\u0003",
    "\u0002\u0002\u0002\u0131\u0135\u0007\u0019\u0002\u0002\u0132\u0134\u0005",
    ".\u0018\u0002\u0133\u0132\u0003\u0002\u0002\u0002\u0134\u0137\u0003",
    "\u0002\u0002\u0002\u0135\u0133\u0003\u0002\u0002\u0002\u0135\u0136\u0003",
    "\u0002\u0002\u0002\u0136\u0138\u0003\u0002\u0002\u0002\u0137\u0135\u0003",
    "\u0002\u0002\u0002\u0138\u013a\u0007+\u0002\u0002\u0139\u0131\u0003",
    "\u0002\u0002\u0002\u0139\u013a\u0003\u0002\u0002\u0002\u013a\u0143\u0003",
    "\u0002\u0002\u0002\u013b\u013d\u00050\u0019\u0002\u013c\u013e\u0007",
    "+\u0002\u0002\u013d\u013c\u0003\u0002\u0002\u0002\u013e\u013f\u0003",
    "\u0002\u0002\u0002\u013f\u013d\u0003\u0002\u0002\u0002\u013f\u0140\u0003",
    "\u0002\u0002\u0002\u0140\u0142\u0003\u0002\u0002\u0002\u0141\u013b\u0003",
    "\u0002\u0002\u0002\u0142\u0145\u0003\u0002\u0002\u0002\u0143\u0141\u0003",
    "\u0002\u0002\u0002\u0143\u0144\u0003\u0002\u0002\u0002\u0144-\u0003",
    "\u0002\u0002\u0002\u0145\u0143\u0003\u0002\u0002\u0002\u0146\u014e\u0007",
    ">\u0002\u0002\u0147\u014e\u0005d3\u0002\u0148\u014e\u0005x=\u0002\u0149",
    "\u014e\u0005z>\u0002\u014a\u014b\u0007>\u0002\u0002\u014b\u014c\u0007",
    ",\u0002\u0002\u014c\u014e\u0005.\u0018\u0002\u014d\u0146\u0003\u0002",
    "\u0002\u0002\u014d\u0147\u0003\u0002\u0002\u0002\u014d\u0148\u0003\u0002",
    "\u0002\u0002\u014d\u0149\u0003\u0002\u0002\u0002\u014d\u014a\u0003\u0002",
    "\u0002\u0002\u014e/\u0003\u0002\u0002\u0002\u014f\u0150\u0005<\u001f",
    "\u0002\u0150\u0151\u0007*\u0002\u0002\u0151\u0152\u00052\u001a\u0002",
    "\u01521\u0003\u0002\u0002\u0002\u0153\u015a\u00058\u001d\u0002\u0154",
    "\u0156\u0007)\u0002\u0002\u0155\u0154\u0003\u0002\u0002\u0002\u0155",
    "\u0156\u0003\u0002\u0002\u0002\u0156\u0157\u0003\u0002\u0002\u0002\u0157",
    "\u0159\u00058\u001d\u0002\u0158\u0155\u0003\u0002\u0002\u0002\u0159",
    "\u015c\u0003\u0002\u0002\u0002\u015a\u0158\u0003\u0002\u0002\u0002\u015a",
    "\u015b\u0003\u0002\u0002\u0002\u015b\u015e\u0003\u0002\u0002\u0002\u015c",
    "\u015a\u0003\u0002\u0002\u0002\u015d\u015f\u0005:\u001e\u0002\u015e",
    "\u015d\u0003\u0002\u0002\u0002\u015e\u015f\u0003\u0002\u0002\u0002\u015f",
    "3\u0003\u0002\u0002\u0002\u0160\u0161\u00056\u001c\u0002\u0161\u0162",
    "\u0007\'\u0002\u0002\u0162\u0163\u0005N(\u0002\u0163\u0164\u0007(\u0002",
    "\u0002\u01645\u0003\u0002\u0002\u0002\u0165\u0166\t\u0003\u0002\u0002",
    "\u01667\u0003\u0002\u0002\u0002\u0167\u016d\u0005V,\u0002\u0168\u016d",
    "\u0005X-\u0002\u0169\u016d\u0005Z.\u0002\u016a\u016d\u0005> \u0002\u016b",
    "\u016d\u0005@!\u0002\u016c\u0167\u0003\u0002\u0002\u0002\u016c\u0168",
    "\u0003\u0002\u0002\u0002\u016c\u0169\u0003\u0002\u0002\u0002\u016c\u016a",
    "\u0003\u0002\u0002\u0002\u016c\u016b\u0003\u0002\u0002\u0002\u016d9",
    "\u0003\u0002\u0002\u0002\u016e\u016f\u00077\u0002\u0002\u016f\u0170",
    "\u0007\u0004\u0002\u0002\u0170;\u0003\u0002\u0002\u0002\u0171\u0173",
    "\u00074\u0002\u0002\u0172\u0171\u0003\u0002\u0002\u0002\u0173\u0176",
    "\u0003\u0002\u0002\u0002\u0174\u0172\u0003\u0002\u0002\u0002\u0174\u0175",
    "\u0003\u0002\u0002\u0002\u0175\u0177\u0003\u0002\u0002\u0002\u0176\u0174",
    "\u0003\u0002\u0002\u0002\u0177\u017c\u0007>\u0002\u0002\u0178\u0179",
    "\u00074\u0002\u0002\u0179\u017b\u0007>\u0002\u0002\u017a\u0178\u0003",
    "\u0002\u0002\u0002\u017b\u017e\u0003\u0002\u0002\u0002\u017c\u017a\u0003",
    "\u0002\u0002\u0002\u017c\u017d\u0003\u0002\u0002\u0002\u017d=\u0003",
    "\u0002\u0002\u0002\u017e\u017c\u0003\u0002\u0002\u0002\u017f\u0180\u0007",
    " \u0002\u0002\u0180\u0183\u0007\'\u0002\u0002\u0181\u0184\u0005D#\u0002",
    "\u0182\u0184\u0005B\"\u0002\u0183\u0181\u0003\u0002\u0002\u0002\u0183",
    "\u0182\u0003\u0002\u0002\u0002\u0184\u0185\u0003\u0002\u0002\u0002\u0185",
    "\u0186\u0007(\u0002\u0002\u0186?\u0003\u0002\u0002\u0002\u0187\u0188",
    "\u0007!\u0002\u0002\u0188\u018b\u0007\'\u0002\u0002\u0189\u018c\u0005",
    "F$\u0002\u018a\u018c\u0005B\"\u0002\u018b\u0189\u0003\u0002\u0002\u0002",
    "\u018b\u018a\u0003\u0002\u0002\u0002\u018c\u018d\u0003\u0002\u0002\u0002",
    "\u018d\u018e\u0007(\u0002\u0002\u018eA\u0003\u0002\u0002\u0002\u018f",
    "\u0190\u0007?\u0002\u0002\u0190C\u0003\u0002\u0002\u0002\u0191\u0196",
    "\u0007>\u0002\u0002\u0192\u0193\u0007,\u0002\u0002\u0193\u0195\u0007",
    ">\u0002\u0002\u0194\u0192\u0003\u0002\u0002\u0002\u0195\u0198\u0003",
    "\u0002\u0002\u0002\u0196\u0194\u0003\u0002\u0002\u0002\u0196\u0197\u0003",
    "\u0002\u0002\u0002\u0197E\u0003\u0002\u0002\u0002\u0198\u0196\u0003",
    "\u0002\u0002\u0002\u0199\u019a\u0005H%\u0002\u019aG\u0003\u0002\u0002",
    "\u0002\u019b\u019c\u0005J&\u0002\u019c\u019d\u0007,\u0002\u0002\u019d",
    "\u019f\u0003\u0002\u0002\u0002\u019e\u019b\u0003\u0002\u0002\u0002\u019e",
    "\u019f\u0003\u0002\u0002\u0002\u019f\u01a7\u0003\u0002\u0002\u0002\u01a0",
    "\u01a2\u0007>\u0002\u0002\u01a1\u01a0\u0003\u0002\u0002\u0002\u01a2",
    "\u01a3\u0003\u0002\u0002\u0002\u01a3\u01a1\u0003\u0002\u0002\u0002\u01a3",
    "\u01a4\u0003\u0002\u0002\u0002\u01a4\u01a8\u0003\u0002\u0002\u0002\u01a5",
    "\u01a8\u0005d3\u0002\u01a6\u01a8\u0007G\u0002\u0002\u01a7\u01a1\u0003",
    "\u0002\u0002\u0002\u01a7\u01a5\u0003\u0002\u0002\u0002\u01a7\u01a6\u0003",
    "\u0002\u0002\u0002\u01a8I\u0003\u0002\u0002\u0002\u01a9\u01ae\u0007",
    ">\u0002\u0002\u01aa\u01ab\u0007,\u0002\u0002\u01ab\u01ad\u0007>\u0002",
    "\u0002\u01ac\u01aa\u0003\u0002\u0002\u0002\u01ad\u01b0\u0003\u0002\u0002",
    "\u0002\u01ae\u01ac\u0003\u0002\u0002\u0002\u01ae\u01af\u0003\u0002\u0002",
    "\u0002\u01afK\u0003\u0002\u0002\u0002\u01b0\u01ae\u0003\u0002\u0002",
    "\u0002\u01b1\u01b6\u0007>\u0002\u0002\u01b2\u01b3\u0007,\u0002\u0002",
    "\u01b3\u01b5\u0007>\u0002\u0002\u01b4\u01b2\u0003\u0002\u0002\u0002",
    "\u01b5\u01b8\u0003\u0002\u0002\u0002\u01b6\u01b4\u0003\u0002\u0002\u0002",
    "\u01b6\u01b7\u0003\u0002\u0002\u0002\u01b7M\u0003\u0002\u0002\u0002",
    "\u01b8\u01b6\u0003\u0002\u0002\u0002\u01b9\u01bb\u0005P)\u0002\u01ba",
    "\u01b9\u0003\u0002\u0002\u0002\u01bb\u01be\u0003\u0002\u0002\u0002\u01bc",
    "\u01ba\u0003\u0002\u0002\u0002\u01bc\u01bd\u0003\u0002\u0002\u0002\u01bd",
    "\u01c7\u0003\u0002\u0002\u0002\u01be\u01bc\u0003\u0002\u0002\u0002\u01bf",
    "\u01c1\u0007)\u0002\u0002\u01c0\u01c2\u0005P)\u0002\u01c1\u01c0\u0003",
    "\u0002\u0002\u0002\u01c2\u01c3\u0003\u0002\u0002\u0002\u01c3\u01c1\u0003",
    "\u0002\u0002\u0002\u01c3\u01c4\u0003\u0002\u0002\u0002\u01c4\u01c6\u0003",
    "\u0002\u0002\u0002\u01c5\u01bf\u0003\u0002\u0002\u0002\u01c6\u01c9\u0003",
    "\u0002\u0002\u0002\u01c7\u01c5\u0003\u0002\u0002\u0002\u01c7\u01c8\u0003",
    "\u0002\u0002\u0002\u01c8O\u0003\u0002\u0002\u0002\u01c9\u01c7\u0003",
    "\u0002\u0002\u0002\u01ca\u01da\u0005Z.\u0002\u01cb\u01da\u00054\u001b",
    "\u0002\u01cc\u01da\u0005R*\u0002\u01cd\u01da\u0005T+\u0002\u01ce\u01da",
    "\u0007=\u0002\u0002\u01cf\u01da\u0007I\u0002\u0002\u01d0\u01da\u0007",
    "G\u0002\u0002\u01d1\u01da\u0007A\u0002\u0002\u01d2\u01da\u0005b2\u0002",
    "\u01d3\u01da\u0005l7\u0002\u01d4\u01da\u0005V,\u0002\u01d5\u01da\u0005",
    "h5\u0002\u01d6\u01d7\u0007,\u0002\u0002\u01d7\u01da\u0007>\u0002\u0002",
    "\u01d8\u01da\u0007>\u0002\u0002\u01d9\u01ca\u0003\u0002\u0002\u0002",
    "\u01d9\u01cb\u0003\u0002\u0002\u0002\u01d9\u01cc\u0003\u0002\u0002\u0002",
    "\u01d9\u01cd\u0003\u0002\u0002\u0002\u01d9\u01ce\u0003\u0002\u0002\u0002",
    "\u01d9\u01cf\u0003\u0002\u0002\u0002\u01d9\u01d0\u0003\u0002\u0002\u0002",
    "\u01d9\u01d1\u0003\u0002\u0002\u0002\u01d9\u01d2\u0003\u0002\u0002\u0002",
    "\u01d9\u01d3\u0003\u0002\u0002\u0002\u01d9\u01d4\u0003\u0002\u0002\u0002",
    "\u01d9\u01d5\u0003\u0002\u0002\u0002\u01d9\u01d6\u0003\u0002\u0002\u0002",
    "\u01d9\u01d8\u0003\u0002\u0002\u0002\u01daQ\u0003\u0002\u0002\u0002",
    "\u01db\u01dc\u0005V,\u0002\u01dc\u01dd\u0005`1\u0002\u01dd\u01e3\u0005",
    "V,\u0002\u01de\u01df\u0005`1\u0002\u01df\u01e0\u0005V,\u0002\u01e0\u01e2",
    "\u0003\u0002\u0002\u0002\u01e1\u01de\u0003\u0002\u0002\u0002\u01e2\u01e5",
    "\u0003\u0002\u0002\u0002\u01e3\u01e1\u0003\u0002\u0002\u0002\u01e3\u01e4",
    "\u0003\u0002\u0002\u0002\u01e4S\u0003\u0002\u0002\u0002\u01e5\u01e3",
    "\u0003\u0002\u0002\u0002\u01e6\u01e7\u0007>\u0002\u0002\u01e7\u01ea",
    "\u0007-\u0002\u0002\u01e8\u01eb\u0005X-\u0002\u01e9\u01eb\u0005V,\u0002",
    "\u01ea\u01e8\u0003\u0002\u0002\u0002\u01ea\u01e9\u0003\u0002\u0002\u0002",
    "\u01ebU\u0003\u0002\u0002\u0002\u01ec\u01ed\u0005X-\u0002\u01ed\u01ee",
    "\u0005x=\u0002\u01eeW\u0003\u0002\u0002\u0002\u01ef\u01f9\u00054\u001b",
    "\u0002\u01f0\u01f9\u0007=\u0002\u0002\u01f1\u01f9\u0007G\u0002\u0002",
    "\u01f2\u01f9\u0007A\u0002\u0002\u01f3\u01f9\u0007>\u0002\u0002\u01f4",
    "\u01f9\u0005d3\u0002\u01f5\u01f9\u0005b2\u0002\u01f6\u01f9\u0007\u0005",
    "\u0002\u0002\u01f7\u01f9\u0007\u0006\u0002\u0002\u01f8\u01ef\u0003\u0002",
    "\u0002\u0002\u01f8\u01f0\u0003\u0002\u0002\u0002\u01f8\u01f1\u0003\u0002",
    "\u0002\u0002\u01f8\u01f2\u0003\u0002\u0002\u0002\u01f8\u01f3\u0003\u0002",
    "\u0002\u0002\u01f8\u01f4\u0003\u0002\u0002\u0002\u01f8\u01f5\u0003\u0002",
    "\u0002\u0002\u01f8\u01f6\u0003\u0002\u0002\u0002\u01f8\u01f7\u0003\u0002",
    "\u0002\u0002\u01f9Y\u0003\u0002\u0002\u0002\u01fa\u01fb\u0007\"\u0002",
    "\u0002\u01fb\u01fc\u0005\\/\u0002\u01fc\u01fd\u0007,\u0002\u0002\u01fd",
    "\u01fe\u0005^0\u0002\u01fe[\u0003\u0002\u0002\u0002\u01ff\u0200\u0007",
    ">\u0002\u0002\u0200]\u0003\u0002\u0002\u0002\u0201\u0205\u0007>\u0002",
    "\u0002\u0202\u0205\u0005x=\u0002\u0203\u0205\u0005z>\u0002\u0204\u0201",
    "\u0003\u0002\u0002\u0002\u0204\u0202\u0003\u0002\u0002\u0002\u0204\u0203",
    "\u0003\u0002\u0002\u0002\u0205_\u0003\u0002\u0002\u0002\u0206\u0207",
    "\t\u0004\u0002\u0002\u0207a\u0003\u0002\u0002\u0002\u0208\u0209\u0007",
    ">\u0002\u0002\u0209\u020a\u0007,\u0002\u0002\u020a\u020b\u0005z>\u0002",
    "\u020bc\u0003\u0002\u0002\u0002\u020c\u020e\u0007>\u0002\u0002\u020d",
    "\u020f\u0005f4\u0002\u020e\u020d\u0003\u0002\u0002\u0002\u020f\u0210",
    "\u0003\u0002\u0002\u0002\u0210\u020e\u0003\u0002\u0002\u0002\u0210\u0211",
    "\u0003\u0002\u0002\u0002\u0211\u0212\u0003\u0002\u0002\u0002\u0212\u021c",
    "\u0007>\u0002\u0002\u0213\u0215\u0005f4\u0002\u0214\u0213\u0003\u0002",
    "\u0002\u0002\u0215\u0216\u0003\u0002\u0002\u0002\u0216\u0214\u0003\u0002",
    "\u0002\u0002\u0216\u0217\u0003\u0002\u0002\u0002\u0217\u0218\u0003\u0002",
    "\u0002\u0002\u0218\u0219\u0007>\u0002\u0002\u0219\u021b\u0003\u0002",
    "\u0002\u0002\u021a\u0214\u0003\u0002\u0002\u0002\u021b\u021e\u0003\u0002",
    "\u0002\u0002\u021c\u021a\u0003\u0002\u0002\u0002\u021c\u021d\u0003\u0002",
    "\u0002\u0002\u021de\u0003\u0002\u0002\u0002\u021e\u021c\u0003\u0002",
    "\u0002\u0002\u021f\u0220\t\u0005\u0002\u0002\u0220g\u0003\u0002\u0002",
    "\u0002\u0221\u0245\u0007M\u0002\u0002\u0222\u0245\u0007N\u0002\u0002",
    "\u0223\u0245\u0007O\u0002\u0002\u0224\u0245\u0007P\u0002\u0002\u0225",
    "\u0245\u0007Q\u0002\u0002\u0226\u0245\u0007R\u0002\u0002\u0227\u0245",
    "\u0007S\u0002\u0002\u0228\u0245\u0007T\u0002\u0002\u0229\u0245\u0007",
    "U\u0002\u0002\u022a\u0245\u0007V\u0002\u0002\u022b\u0245\u0007W\u0002",
    "\u0002\u022c\u0245\u0007X\u0002\u0002\u022d\u0245\u0007Y\u0002\u0002",
    "\u022e\u0245\u0007Z\u0002\u0002\u022f\u0245\u0007\\\u0002\u0002\u0230",
    "\u0245\u0007]\u0002\u0002\u0231\u0245\u0007^\u0002\u0002\u0232\u0245",
    "\u0007_\u0002\u0002\u0233\u0245\u0007`\u0002\u0002\u0234\u0245\u0007",
    "a\u0002\u0002\u0235\u0245\u0007b\u0002\u0002\u0236\u0245\u0007c\u0002",
    "\u0002\u0237\u0245\u0007d\u0002\u0002\u0238\u0245\u0007e\u0002\u0002",
    "\u0239\u0245\u0007f\u0002\u0002\u023a\u0245\u0007g\u0002\u0002\u023b",
    "\u0245\u0007h\u0002\u0002\u023c\u0245\u0007i\u0002\u0002\u023d\u0245",
    "\u0007j\u0002\u0002\u023e\u0245\u0007k\u0002\u0002\u023f\u0245\u0007",
    "l\u0002\u0002\u0240\u0245\u0007m\u0002\u0002\u0241\u0245\u0007[\u0002",
    "\u0002\u0242\u0243\u0007*\u0002\u0002\u0243\u0245\u00054\u001b\u0002",
    "\u0244\u0221\u0003\u0002\u0002\u0002\u0244\u0222\u0003\u0002\u0002\u0002",
    "\u0244\u0223\u0003\u0002\u0002\u0002\u0244\u0224\u0003\u0002\u0002\u0002",
    "\u0244\u0225\u0003\u0002\u0002\u0002\u0244\u0226\u0003\u0002\u0002\u0002",
    "\u0244\u0227\u0003\u0002\u0002\u0002\u0244\u0228\u0003\u0002\u0002\u0002",
    "\u0244\u0229\u0003\u0002\u0002\u0002\u0244\u022a\u0003\u0002\u0002\u0002",
    "\u0244\u022b\u0003\u0002\u0002\u0002\u0244\u022c\u0003\u0002\u0002\u0002",
    "\u0244\u022d\u0003\u0002\u0002\u0002\u0244\u022e\u0003\u0002\u0002\u0002",
    "\u0244\u022f\u0003\u0002\u0002\u0002\u0244\u0230\u0003\u0002\u0002\u0002",
    "\u0244\u0231\u0003\u0002\u0002\u0002\u0244\u0232\u0003\u0002\u0002\u0002",
    "\u0244\u0233\u0003\u0002\u0002\u0002\u0244\u0234\u0003\u0002\u0002\u0002",
    "\u0244\u0235\u0003\u0002\u0002\u0002\u0244\u0236\u0003\u0002\u0002\u0002",
    "\u0244\u0237\u0003\u0002\u0002\u0002\u0244\u0238\u0003\u0002\u0002\u0002",
    "\u0244\u0239\u0003\u0002\u0002\u0002\u0244\u023a\u0003\u0002\u0002\u0002",
    "\u0244\u023b\u0003\u0002\u0002\u0002\u0244\u023c\u0003\u0002\u0002\u0002",
    "\u0244\u023d\u0003\u0002\u0002\u0002\u0244\u023e\u0003\u0002\u0002\u0002",
    "\u0244\u023f\u0003\u0002\u0002\u0002\u0244\u0240\u0003\u0002\u0002\u0002",
    "\u0244\u0241\u0003\u0002\u0002\u0002\u0244\u0242\u0003\u0002\u0002\u0002",
    "\u0245i\u0003\u0002\u0002\u0002\u0246\u0248\u00075\u0002\u0002\u0247",
    "\u0246\u0003\u0002\u0002\u0002\u0247\u0248\u0003\u0002\u0002\u0002\u0248",
    "\u0249\u0003\u0002\u0002\u0002\u0249\u024a\u0007,\u0002\u0002\u024a",
    "\u0250\u0005p9\u0002\u024b\u0250\u0005r:\u0002\u024c\u0250\u0005t;\u0002",
    "\u024d\u0250\u00075\u0002\u0002\u024e\u0250\u0005l7\u0002\u024f\u0247",
    "\u0003\u0002\u0002\u0002\u024f\u024b\u0003\u0002\u0002\u0002\u024f\u024c",
    "\u0003\u0002\u0002\u0002\u024f\u024d\u0003\u0002\u0002\u0002\u024f\u024e",
    "\u0003\u0002\u0002\u0002\u0250\u0254\u0003\u0002\u0002\u0002\u0251\u0253",
    "\u0005l7\u0002\u0252\u0251\u0003\u0002\u0002\u0002\u0253\u0256\u0003",
    "\u0002\u0002\u0002\u0254\u0252\u0003\u0002\u0002\u0002\u0254\u0255\u0003",
    "\u0002\u0002\u0002\u0255\u025a\u0003\u0002\u0002\u0002\u0256\u0254\u0003",
    "\u0002\u0002\u0002\u0257\u0259\u0005n8\u0002\u0258\u0257\u0003\u0002",
    "\u0002\u0002\u0259\u025c\u0003\u0002\u0002\u0002\u025a\u0258\u0003\u0002",
    "\u0002\u0002\u025a\u025b\u0003\u0002\u0002\u0002\u025b\u0260\u0003\u0002",
    "\u0002\u0002\u025c\u025a\u0003\u0002\u0002\u0002\u025d\u025f\u0005h",
    "5\u0002\u025e\u025d\u0003\u0002\u0002\u0002\u025f\u0262\u0003\u0002",
    "\u0002\u0002\u0260\u025e\u0003\u0002\u0002\u0002\u0260\u0261\u0003\u0002",
    "\u0002\u0002\u0261k\u0003\u0002\u0002\u0002\u0262\u0260\u0003\u0002",
    "\u0002\u0002\u0263\u0264\u0007%\u0002\u0002\u0264\u026a\t\u0006\u0002",
    "\u0002\u0265\u0266\u0007-\u0002\u0002\u0266\u0268\u0005X-\u0002\u0267",
    "\u0269\u0005|?\u0002\u0268\u0267\u0003\u0002\u0002\u0002\u0268\u0269",
    "\u0003\u0002\u0002\u0002\u0269\u026b\u0003\u0002\u0002\u0002\u026a\u0265",
    "\u0003\u0002\u0002\u0002\u026a\u026b\u0003\u0002\u0002\u0002\u026b\u026c",
    "\u0003\u0002\u0002\u0002\u026c\u026d\u0007&\u0002\u0002\u026dm\u0003",
    "\u0002\u0002\u0002\u026e\u026f\u0007n\u0002\u0002\u026f\u0270\u0007",
    "\'\u0002\u0002\u0270\u0271\u0005r:\u0002\u0271\u0272\u0007(\u0002\u0002",
    "\u0272o\u0003\u0002\u0002\u0002\u0273\u027a\u0007>\u0002\u0002\u0274",
    "\u027a\u0005d3\u0002\u0275\u027a\u00075\u0002\u0002\u0276\u027a\u0005",
    "x=\u0002\u0277\u027a\u0005z>\u0002\u0278\u027a\u0005|?\u0002\u0279\u0273",
    "\u0003\u0002\u0002\u0002\u0279\u0274\u0003\u0002\u0002\u0002\u0279\u0275",
    "\u0003\u0002\u0002\u0002\u0279\u0276\u0003\u0002\u0002\u0002\u0279\u0277",
    "\u0003\u0002\u0002\u0002\u0279\u0278\u0003\u0002\u0002\u0002\u027aq",
    "\u0003\u0002\u0002\u0002\u027b\u0282\u0007>\u0002\u0002\u027c\u0282",
    "\u0005d3\u0002\u027d\u0282\u00075\u0002\u0002\u027e\u0282\u0005x=\u0002",
    "\u027f\u0282\u0005z>\u0002\u0280\u0282\u0005|?\u0002\u0281\u027b\u0003",
    "\u0002\u0002\u0002\u0281\u027c\u0003\u0002\u0002\u0002\u0281\u027d\u0003",
    "\u0002\u0002\u0002\u0281\u027e\u0003\u0002\u0002\u0002\u0281\u027f\u0003",
    "\u0002\u0002\u0002\u0281\u0280\u0003\u0002\u0002\u0002\u0282s\u0003",
    "\u0002\u0002\u0002\u0283\u0284\u0007\u0007\u0002\u0002\u0284\u0285\u0007",
    ">\u0002\u0002\u0285u\u0003\u0002\u0002\u0002\u0286\u0292\u0007o\u0002",
    "\u0002\u0287\u028e\u0005j6\u0002\u0288\u028a\t\u0007\u0002\u0002\u0289",
    "\u0288\u0003\u0002\u0002\u0002\u0289\u028a\u0003\u0002\u0002\u0002\u028a",
    "\u028b\u0003\u0002\u0002\u0002\u028b\u028d\u0005j6\u0002\u028c\u0289",
    "\u0003\u0002\u0002\u0002\u028d\u0290\u0003\u0002\u0002\u0002\u028e\u028c",
    "\u0003\u0002\u0002\u0002\u028e\u028f\u0003\u0002\u0002\u0002\u028f\u0292",
    "\u0003\u0002\u0002\u0002\u0290\u028e\u0003\u0002\u0002\u0002\u0291\u0286",
    "\u0003\u0002\u0002\u0002\u0291\u0287\u0003\u0002\u0002\u0002\u0292w",
    "\u0003\u0002\u0002\u0002\u0293\u0294\t\b\u0002\u0002\u0294y\u0003\u0002",
    "\u0002\u0002\u0295\u0296\t\t\u0002\u0002\u0296{\u0003\u0002\u0002\u0002",
    "\u0297\u0298\t\n\u0002\u0002\u0298}\u0003\u0002\u0002\u0002G\u0086\u0088",
    "\u0092\u009a\u00a3\u00a9\u00ae\u00b0\u00bf\u00c6\u00cd\u00d4\u00d6\u00df",
    "\u00e3\u00e5\u00f6\u0100\u0102\u010c\u0110\u0114\u011a\u011e\u012b\u012d",
    "\u0135\u0139\u013f\u0143\u014d\u0155\u015a\u015e\u016c\u0174\u017c\u0183",
    "\u018b\u0196\u019e\u01a3\u01a7\u01ae\u01b6\u01bc\u01c3\u01c7\u01d9\u01e3",
    "\u01ea\u01f8\u0204\u0210\u0216\u021c\u0244\u0247\u024f\u0254\u025a\u0260",
    "\u0268\u026a\u0279\u0281\u0289\u028e\u0291"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, "'only'", "'important'", "'true'", "'false'", 
                     "'#'", "'px'", "'pt'", "'vh'", "'vw'", "'%'", "'s'", 
                     "'em'", "'deg'", "'dip'", "'png'", "'jpeg'", "'jpg'", 
                     "'gif'", "'i'", null, null, "'@extend'", "'@include'", 
                     "'@font-face'", "'@media'", "'@import'", "'#region'", 
                     "'#endregion'", "'$mediaQueries'", "'gx-image'", "'gx-file'", 
                     "'$'", "'{'", "'}'", "'['", "']'", "'('", "')'", "','", 
                     "':'", "';'", "'.'", "'='", "'<'", "'<='", "'>'", "'>='", 
                     "'^'", "'+'", "'-'", "'*'", "'/'", "'!'", "'?'", "'~'", 
                     "'or'", "'and'", "'not'" ];

var symbolicNames = [ null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, "STYLES", "TOKENS", "EXTEND", "INCLUDE", 
                      "FONT_FACE", "MEDIA", "IMPORT", "STARTREGION", "ENDREGION", 
                      "MEDIA_TOKEN_GROUP", "GXIMAGE", "GXFILE", "TOKEN_PREFIX", 
                      "OPEN_BRACE", "CLOSE_BRACE", "OPEN_BRACKET", "CLOSE_BRACKET", 
                      "OPEN_PAREN", "CLOSE_PAREN", "COMMA", "COLON", "SEMICOLON", 
                      "DOT", "EQ", "LT", "OP_LE", "GT", "OP_GE", "CARET", 
                      "PLUS", "MINUS", "MUL", "DIV", "BANG", "INTERR", "TILDE", 
                      "OP_OR", "OP_AND", "OP_NOT", "NUMBER", "Identifier", 
                      "Reference_Identifier", "Wildcard_Identifier", "Integer_literal", 
                      "Binary_literal", "Octal_literal", "Decimal_literal", 
                      "Hexadecimal_literal", "Floating_point_literal", "String_literal", 
                      "Escaped_character", "STRING", "WS", "Block_comment", 
                      "Line_comment", "ACTIVE_SELECTOR", "AFTER_SELECTOR", 
                      "BEFORE_SELECTOR", "CHECKED_SELECTOR", "DEFAULT_SELECTOR", 
                      "DISABLED_SELECTOR", "EMPTY_SELECTOR", "ENABLED_SELECTOR", 
                      "FIRST_CHILD_SELECTOR", "FIRST_LETTER_SELECTOR", "FIRST_LINE_SELECTOR", 
                      "FIRST_OF_TYPE_SELECTOR", "FOCUS_SELECTOR", "FOCUS_WITHIN", 
                      "HOVER_SELECTOR", "IN_RANGE_SELECTOR", "INDETERMINATE_SELECTOR", 
                      "INVALID_SELECTOR", "LAST_CHILD_SELECTOR", "LAST_OF_TYPE_SELECTOR", 
                      "LINK_SELECTOR", "ONLY_OF_TYPE_SELECTOR", "ONLY_CHILD_SELECTOR", 
                      "OPTIONAL_SELECTOR", "OUT_OF_RANGE_SELECTOR", "PLACEHOLDER_SELECTOR", 
                      "READ_ONLY_SELECTOR", "READ_WRITE_SELECTOR", "REQUIRED_SELECTOR", 
                      "SELECTION_SELECTOR", "TARGET_SELECTOR", "VALID_SELECTOR", 
                      "VISITED_SELECTOR", "PART_SELECTOR", "ROOT_SELECTOR" ];

var ruleNames =  [ "designstyles", "external_import", "file_list", "imported_file_path", 
                   "gx_file_list", "dso_list", "imported_dso", "imported_dso_styles", 
                   "imported_dso_tokens", "imported_dso_name", "object_name", 
                   "region", "media_region", "style_class", "font_face", 
                   "media_query_styles", "media_query", "media_query_member", 
                   "media_query_token", "media_type", "media_expr", "class_properties", 
                   "included_class", "property", "property_value", "func", 
                   "func_name", "csspropertyvalue", "important_expr", "csspropertyname", 
                   "gx_imagevalue", "gx_filevalue", "object_reference", 
                   "image_name", "file_name", "generic_name", "module_name", 
                   "file_extension", "function_parameters", "function_parameter", 
                   "calculation", "property_asignation", "unitvalue", "value", 
                   "tokenvalue", "tokengroup", "tokenname", "operator", 
                   "image", "multi_part_identifier", "string_esp_characters", 
                   "selector", "node_name", "attribute_filter", "part_selector", 
                   "class_name", "element_name", "element_id", "css_selector", 
                   "unit", "image_unit", "parity" ];

function DesignStylesParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

DesignStylesParser.prototype = Object.create(antlr4.Parser.prototype);
DesignStylesParser.prototype.constructor = DesignStylesParser;

Object.defineProperty(DesignStylesParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

DesignStylesParser.EOF = antlr4.Token.EOF;
DesignStylesParser.T__0 = 1;
DesignStylesParser.T__1 = 2;
DesignStylesParser.T__2 = 3;
DesignStylesParser.T__3 = 4;
DesignStylesParser.T__4 = 5;
DesignStylesParser.T__5 = 6;
DesignStylesParser.T__6 = 7;
DesignStylesParser.T__7 = 8;
DesignStylesParser.T__8 = 9;
DesignStylesParser.T__9 = 10;
DesignStylesParser.T__10 = 11;
DesignStylesParser.T__11 = 12;
DesignStylesParser.T__12 = 13;
DesignStylesParser.T__13 = 14;
DesignStylesParser.T__14 = 15;
DesignStylesParser.T__15 = 16;
DesignStylesParser.T__16 = 17;
DesignStylesParser.T__17 = 18;
DesignStylesParser.T__18 = 19;
DesignStylesParser.STYLES = 20;
DesignStylesParser.TOKENS = 21;
DesignStylesParser.EXTEND = 22;
DesignStylesParser.INCLUDE = 23;
DesignStylesParser.FONT_FACE = 24;
DesignStylesParser.MEDIA = 25;
DesignStylesParser.IMPORT = 26;
DesignStylesParser.STARTREGION = 27;
DesignStylesParser.ENDREGION = 28;
DesignStylesParser.MEDIA_TOKEN_GROUP = 29;
DesignStylesParser.GXIMAGE = 30;
DesignStylesParser.GXFILE = 31;
DesignStylesParser.TOKEN_PREFIX = 32;
DesignStylesParser.OPEN_BRACE = 33;
DesignStylesParser.CLOSE_BRACE = 34;
DesignStylesParser.OPEN_BRACKET = 35;
DesignStylesParser.CLOSE_BRACKET = 36;
DesignStylesParser.OPEN_PAREN = 37;
DesignStylesParser.CLOSE_PAREN = 38;
DesignStylesParser.COMMA = 39;
DesignStylesParser.COLON = 40;
DesignStylesParser.SEMICOLON = 41;
DesignStylesParser.DOT = 42;
DesignStylesParser.EQ = 43;
DesignStylesParser.LT = 44;
DesignStylesParser.OP_LE = 45;
DesignStylesParser.GT = 46;
DesignStylesParser.OP_GE = 47;
DesignStylesParser.CARET = 48;
DesignStylesParser.PLUS = 49;
DesignStylesParser.MINUS = 50;
DesignStylesParser.MUL = 51;
DesignStylesParser.DIV = 52;
DesignStylesParser.BANG = 53;
DesignStylesParser.INTERR = 54;
DesignStylesParser.TILDE = 55;
DesignStylesParser.OP_OR = 56;
DesignStylesParser.OP_AND = 57;
DesignStylesParser.OP_NOT = 58;
DesignStylesParser.NUMBER = 59;
DesignStylesParser.Identifier = 60;
DesignStylesParser.Reference_Identifier = 61;
DesignStylesParser.Wildcard_Identifier = 62;
DesignStylesParser.Integer_literal = 63;
DesignStylesParser.Binary_literal = 64;
DesignStylesParser.Octal_literal = 65;
DesignStylesParser.Decimal_literal = 66;
DesignStylesParser.Hexadecimal_literal = 67;
DesignStylesParser.Floating_point_literal = 68;
DesignStylesParser.String_literal = 69;
DesignStylesParser.Escaped_character = 70;
DesignStylesParser.STRING = 71;
DesignStylesParser.WS = 72;
DesignStylesParser.Block_comment = 73;
DesignStylesParser.Line_comment = 74;
DesignStylesParser.ACTIVE_SELECTOR = 75;
DesignStylesParser.AFTER_SELECTOR = 76;
DesignStylesParser.BEFORE_SELECTOR = 77;
DesignStylesParser.CHECKED_SELECTOR = 78;
DesignStylesParser.DEFAULT_SELECTOR = 79;
DesignStylesParser.DISABLED_SELECTOR = 80;
DesignStylesParser.EMPTY_SELECTOR = 81;
DesignStylesParser.ENABLED_SELECTOR = 82;
DesignStylesParser.FIRST_CHILD_SELECTOR = 83;
DesignStylesParser.FIRST_LETTER_SELECTOR = 84;
DesignStylesParser.FIRST_LINE_SELECTOR = 85;
DesignStylesParser.FIRST_OF_TYPE_SELECTOR = 86;
DesignStylesParser.FOCUS_SELECTOR = 87;
DesignStylesParser.FOCUS_WITHIN = 88;
DesignStylesParser.HOVER_SELECTOR = 89;
DesignStylesParser.IN_RANGE_SELECTOR = 90;
DesignStylesParser.INDETERMINATE_SELECTOR = 91;
DesignStylesParser.INVALID_SELECTOR = 92;
DesignStylesParser.LAST_CHILD_SELECTOR = 93;
DesignStylesParser.LAST_OF_TYPE_SELECTOR = 94;
DesignStylesParser.LINK_SELECTOR = 95;
DesignStylesParser.ONLY_OF_TYPE_SELECTOR = 96;
DesignStylesParser.ONLY_CHILD_SELECTOR = 97;
DesignStylesParser.OPTIONAL_SELECTOR = 98;
DesignStylesParser.OUT_OF_RANGE_SELECTOR = 99;
DesignStylesParser.PLACEHOLDER_SELECTOR = 100;
DesignStylesParser.READ_ONLY_SELECTOR = 101;
DesignStylesParser.READ_WRITE_SELECTOR = 102;
DesignStylesParser.REQUIRED_SELECTOR = 103;
DesignStylesParser.SELECTION_SELECTOR = 104;
DesignStylesParser.TARGET_SELECTOR = 105;
DesignStylesParser.VALID_SELECTOR = 106;
DesignStylesParser.VISITED_SELECTOR = 107;
DesignStylesParser.PART_SELECTOR = 108;
DesignStylesParser.ROOT_SELECTOR = 109;

DesignStylesParser.RULE_designstyles = 0;
DesignStylesParser.RULE_external_import = 1;
DesignStylesParser.RULE_file_list = 2;
DesignStylesParser.RULE_imported_file_path = 3;
DesignStylesParser.RULE_gx_file_list = 4;
DesignStylesParser.RULE_dso_list = 5;
DesignStylesParser.RULE_imported_dso = 6;
DesignStylesParser.RULE_imported_dso_styles = 7;
DesignStylesParser.RULE_imported_dso_tokens = 8;
DesignStylesParser.RULE_imported_dso_name = 9;
DesignStylesParser.RULE_object_name = 10;
DesignStylesParser.RULE_region = 11;
DesignStylesParser.RULE_media_region = 12;
DesignStylesParser.RULE_style_class = 13;
DesignStylesParser.RULE_font_face = 14;
DesignStylesParser.RULE_media_query_styles = 15;
DesignStylesParser.RULE_media_query = 16;
DesignStylesParser.RULE_media_query_member = 17;
DesignStylesParser.RULE_media_query_token = 18;
DesignStylesParser.RULE_media_type = 19;
DesignStylesParser.RULE_media_expr = 20;
DesignStylesParser.RULE_class_properties = 21;
DesignStylesParser.RULE_included_class = 22;
DesignStylesParser.RULE_property = 23;
DesignStylesParser.RULE_property_value = 24;
DesignStylesParser.RULE_func = 25;
DesignStylesParser.RULE_func_name = 26;
DesignStylesParser.RULE_csspropertyvalue = 27;
DesignStylesParser.RULE_important_expr = 28;
DesignStylesParser.RULE_csspropertyname = 29;
DesignStylesParser.RULE_gx_imagevalue = 30;
DesignStylesParser.RULE_gx_filevalue = 31;
DesignStylesParser.RULE_object_reference = 32;
DesignStylesParser.RULE_image_name = 33;
DesignStylesParser.RULE_file_name = 34;
DesignStylesParser.RULE_generic_name = 35;
DesignStylesParser.RULE_module_name = 36;
DesignStylesParser.RULE_file_extension = 37;
DesignStylesParser.RULE_function_parameters = 38;
DesignStylesParser.RULE_function_parameter = 39;
DesignStylesParser.RULE_calculation = 40;
DesignStylesParser.RULE_property_asignation = 41;
DesignStylesParser.RULE_unitvalue = 42;
DesignStylesParser.RULE_value = 43;
DesignStylesParser.RULE_tokenvalue = 44;
DesignStylesParser.RULE_tokengroup = 45;
DesignStylesParser.RULE_tokenname = 46;
DesignStylesParser.RULE_operator = 47;
DesignStylesParser.RULE_image = 48;
DesignStylesParser.RULE_multi_part_identifier = 49;
DesignStylesParser.RULE_string_esp_characters = 50;
DesignStylesParser.RULE_selector = 51;
DesignStylesParser.RULE_node_name = 52;
DesignStylesParser.RULE_attribute_filter = 53;
DesignStylesParser.RULE_part_selector = 54;
DesignStylesParser.RULE_class_name = 55;
DesignStylesParser.RULE_element_name = 56;
DesignStylesParser.RULE_element_id = 57;
DesignStylesParser.RULE_css_selector = 58;
DesignStylesParser.RULE_unit = 59;
DesignStylesParser.RULE_image_unit = 60;
DesignStylesParser.RULE_parity = 61;


function DesignstylesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_designstyles;
    return this;
}

DesignstylesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DesignstylesContext.prototype.constructor = DesignstylesContext;

DesignstylesContext.prototype.STYLES = function() {
    return this.getToken(DesignStylesParser.STYLES, 0);
};

DesignstylesContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

DesignstylesContext.prototype.OPEN_BRACE = function() {
    return this.getToken(DesignStylesParser.OPEN_BRACE, 0);
};

DesignstylesContext.prototype.CLOSE_BRACE = function() {
    return this.getToken(DesignStylesParser.CLOSE_BRACE, 0);
};

DesignstylesContext.prototype.EOF = function() {
    return this.getToken(DesignStylesParser.EOF, 0);
};

DesignstylesContext.prototype.region = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(RegionContext);
    } else {
        return this.getTypedRuleContext(RegionContext,i);
    }
};

DesignstylesContext.prototype.style_class = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Style_classContext);
    } else {
        return this.getTypedRuleContext(Style_classContext,i);
    }
};

DesignstylesContext.prototype.font_face = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Font_faceContext);
    } else {
        return this.getTypedRuleContext(Font_faceContext,i);
    }
};

DesignstylesContext.prototype.media_query_styles = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Media_query_stylesContext);
    } else {
        return this.getTypedRuleContext(Media_query_stylesContext,i);
    }
};

DesignstylesContext.prototype.external_import = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(External_importContext);
    } else {
        return this.getTypedRuleContext(External_importContext,i);
    }
};

DesignstylesContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterDesignstyles(this);
	}
};

DesignstylesContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitDesignstyles(this);
	}
};




DesignStylesParser.DesignstylesContext = DesignstylesContext;

DesignStylesParser.prototype.designstyles = function() {

    var localctx = new DesignstylesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, DesignStylesParser.RULE_designstyles);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 124;
        this.match(DesignStylesParser.STYLES);
        this.state = 125;
        this.match(DesignStylesParser.Identifier);
        this.state = 126;
        this.match(DesignStylesParser.OPEN_BRACE);
        this.state = 134;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__4) | (1 << DesignStylesParser.T__5) | (1 << DesignStylesParser.T__6) | (1 << DesignStylesParser.T__7) | (1 << DesignStylesParser.T__8) | (1 << DesignStylesParser.T__9) | (1 << DesignStylesParser.T__10) | (1 << DesignStylesParser.T__11) | (1 << DesignStylesParser.T__12) | (1 << DesignStylesParser.T__13) | (1 << DesignStylesParser.T__14) | (1 << DesignStylesParser.T__15) | (1 << DesignStylesParser.T__16) | (1 << DesignStylesParser.T__17) | (1 << DesignStylesParser.T__18) | (1 << DesignStylesParser.FONT_FACE) | (1 << DesignStylesParser.MEDIA) | (1 << DesignStylesParser.IMPORT) | (1 << DesignStylesParser.STARTREGION))) !== 0) || ((((_la - 35)) & ~0x1f) == 0 && ((1 << (_la - 35)) & ((1 << (DesignStylesParser.OPEN_BRACKET - 35)) | (1 << (DesignStylesParser.DOT - 35)) | (1 << (DesignStylesParser.MUL - 35)) | (1 << (DesignStylesParser.Identifier - 35)))) !== 0) || _la===DesignStylesParser.ROOT_SELECTOR) {
            this.state = 132;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case DesignStylesParser.STARTREGION:
                this.state = 127;
                this.region();
                break;
            case DesignStylesParser.T__4:
            case DesignStylesParser.T__5:
            case DesignStylesParser.T__6:
            case DesignStylesParser.T__7:
            case DesignStylesParser.T__8:
            case DesignStylesParser.T__9:
            case DesignStylesParser.T__10:
            case DesignStylesParser.T__11:
            case DesignStylesParser.T__12:
            case DesignStylesParser.T__13:
            case DesignStylesParser.T__14:
            case DesignStylesParser.T__15:
            case DesignStylesParser.T__16:
            case DesignStylesParser.T__17:
            case DesignStylesParser.T__18:
            case DesignStylesParser.OPEN_BRACKET:
            case DesignStylesParser.DOT:
            case DesignStylesParser.MUL:
            case DesignStylesParser.Identifier:
            case DesignStylesParser.ROOT_SELECTOR:
                this.state = 128;
                this.style_class();
                break;
            case DesignStylesParser.FONT_FACE:
                this.state = 129;
                this.font_face();
                break;
            case DesignStylesParser.MEDIA:
                this.state = 130;
                this.media_query_styles();
                break;
            case DesignStylesParser.IMPORT:
                this.state = 131;
                this.external_import();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 136;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 137;
        this.match(DesignStylesParser.CLOSE_BRACE);
        this.state = 138;
        this.match(DesignStylesParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function External_importContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_external_import;
    return this;
}

External_importContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
External_importContext.prototype.constructor = External_importContext;

External_importContext.prototype.IMPORT = function() {
    return this.getToken(DesignStylesParser.IMPORT, 0);
};

External_importContext.prototype.SEMICOLON = function() {
    return this.getToken(DesignStylesParser.SEMICOLON, 0);
};

External_importContext.prototype.file_list = function() {
    return this.getTypedRuleContext(File_listContext,0);
};

External_importContext.prototype.dso_list = function() {
    return this.getTypedRuleContext(Dso_listContext,0);
};

External_importContext.prototype.gx_file_list = function() {
    return this.getTypedRuleContext(Gx_file_listContext,0);
};

External_importContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterExternal_import(this);
	}
};

External_importContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitExternal_import(this);
	}
};




DesignStylesParser.External_importContext = External_importContext;

DesignStylesParser.prototype.external_import = function() {

    var localctx = new External_importContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, DesignStylesParser.RULE_external_import);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 140;
        this.match(DesignStylesParser.IMPORT);
        this.state = 144;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.String_literal:
            this.state = 141;
            this.file_list();
            break;
        case DesignStylesParser.Identifier:
        case DesignStylesParser.Reference_Identifier:
            this.state = 142;
            this.dso_list();
            break;
        case DesignStylesParser.GXFILE:
            this.state = 143;
            this.gx_file_list();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 146;
        this.match(DesignStylesParser.SEMICOLON);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function File_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_file_list;
    return this;
}

File_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
File_listContext.prototype.constructor = File_listContext;

File_listContext.prototype.imported_file_path = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Imported_file_pathContext);
    } else {
        return this.getTypedRuleContext(Imported_file_pathContext,i);
    }
};

File_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFile_list(this);
	}
};

File_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFile_list(this);
	}
};




DesignStylesParser.File_listContext = File_listContext;

DesignStylesParser.prototype.file_list = function() {

    var localctx = new File_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, DesignStylesParser.RULE_file_list);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 148;
        this.imported_file_path();
        this.state = 152;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.String_literal) {
            this.state = 149;
            this.imported_file_path();
            this.state = 154;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Imported_file_pathContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_imported_file_path;
    return this;
}

Imported_file_pathContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Imported_file_pathContext.prototype.constructor = Imported_file_pathContext;

Imported_file_pathContext.prototype.String_literal = function() {
    return this.getToken(DesignStylesParser.String_literal, 0);
};

Imported_file_pathContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImported_file_path(this);
	}
};

Imported_file_pathContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImported_file_path(this);
	}
};




DesignStylesParser.Imported_file_pathContext = Imported_file_pathContext;

DesignStylesParser.prototype.imported_file_path = function() {

    var localctx = new Imported_file_pathContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, DesignStylesParser.RULE_imported_file_path);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 155;
        this.match(DesignStylesParser.String_literal);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Gx_file_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_gx_file_list;
    return this;
}

Gx_file_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Gx_file_listContext.prototype.constructor = Gx_file_listContext;

Gx_file_listContext.prototype.gx_filevalue = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Gx_filevalueContext);
    } else {
        return this.getTypedRuleContext(Gx_filevalueContext,i);
    }
};

Gx_file_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterGx_file_list(this);
	}
};

Gx_file_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitGx_file_list(this);
	}
};




DesignStylesParser.Gx_file_listContext = Gx_file_listContext;

DesignStylesParser.prototype.gx_file_list = function() {

    var localctx = new Gx_file_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, DesignStylesParser.RULE_gx_file_list);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 157;
        this.gx_filevalue();
        this.state = 161;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.GXFILE) {
            this.state = 158;
            this.gx_filevalue();
            this.state = 163;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Dso_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_dso_list;
    return this;
}

Dso_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Dso_listContext.prototype.constructor = Dso_listContext;

Dso_listContext.prototype.imported_dso = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Imported_dsoContext);
    } else {
        return this.getTypedRuleContext(Imported_dsoContext,i);
    }
};

Dso_listContext.prototype.imported_dso_styles = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Imported_dso_stylesContext);
    } else {
        return this.getTypedRuleContext(Imported_dso_stylesContext,i);
    }
};

Dso_listContext.prototype.imported_dso_tokens = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Imported_dso_tokensContext);
    } else {
        return this.getTypedRuleContext(Imported_dso_tokensContext,i);
    }
};

Dso_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterDso_list(this);
	}
};

Dso_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitDso_list(this);
	}
};




DesignStylesParser.Dso_listContext = Dso_listContext;

DesignStylesParser.prototype.dso_list = function() {

    var localctx = new Dso_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, DesignStylesParser.RULE_dso_list);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 167;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,5,this._ctx);
        switch(la_) {
        case 1:
            this.state = 164;
            this.imported_dso();
            break;

        case 2:
            this.state = 165;
            this.imported_dso_styles();
            break;

        case 3:
            this.state = 166;
            this.imported_dso_tokens();
            break;

        }
        this.state = 174;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.Identifier || _la===DesignStylesParser.Reference_Identifier) {
            this.state = 172;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,6,this._ctx);
            switch(la_) {
            case 1:
                this.state = 169;
                this.imported_dso();
                break;

            case 2:
                this.state = 170;
                this.imported_dso_styles();
                break;

            case 3:
                this.state = 171;
                this.imported_dso_tokens();
                break;

            }
            this.state = 176;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Imported_dsoContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_imported_dso;
    return this;
}

Imported_dsoContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Imported_dsoContext.prototype.constructor = Imported_dsoContext;

Imported_dsoContext.prototype.imported_dso_name = function() {
    return this.getTypedRuleContext(Imported_dso_nameContext,0);
};

Imported_dsoContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImported_dso(this);
	}
};

Imported_dsoContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImported_dso(this);
	}
};




DesignStylesParser.Imported_dsoContext = Imported_dsoContext;

DesignStylesParser.prototype.imported_dso = function() {

    var localctx = new Imported_dsoContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, DesignStylesParser.RULE_imported_dso);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 177;
        this.imported_dso_name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Imported_dso_stylesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_imported_dso_styles;
    return this;
}

Imported_dso_stylesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Imported_dso_stylesContext.prototype.constructor = Imported_dso_stylesContext;

Imported_dso_stylesContext.prototype.imported_dso_name = function() {
    return this.getTypedRuleContext(Imported_dso_nameContext,0);
};

Imported_dso_stylesContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

Imported_dso_stylesContext.prototype.STYLES = function() {
    return this.getToken(DesignStylesParser.STYLES, 0);
};

Imported_dso_stylesContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImported_dso_styles(this);
	}
};

Imported_dso_stylesContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImported_dso_styles(this);
	}
};




DesignStylesParser.Imported_dso_stylesContext = Imported_dso_stylesContext;

DesignStylesParser.prototype.imported_dso_styles = function() {

    var localctx = new Imported_dso_stylesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, DesignStylesParser.RULE_imported_dso_styles);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 179;
        this.imported_dso_name();
        this.state = 180;
        this.match(DesignStylesParser.DOT);
        this.state = 181;
        this.match(DesignStylesParser.STYLES);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Imported_dso_tokensContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_imported_dso_tokens;
    return this;
}

Imported_dso_tokensContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Imported_dso_tokensContext.prototype.constructor = Imported_dso_tokensContext;

Imported_dso_tokensContext.prototype.imported_dso_name = function() {
    return this.getTypedRuleContext(Imported_dso_nameContext,0);
};

Imported_dso_tokensContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

Imported_dso_tokensContext.prototype.TOKENS = function() {
    return this.getToken(DesignStylesParser.TOKENS, 0);
};

Imported_dso_tokensContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImported_dso_tokens(this);
	}
};

Imported_dso_tokensContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImported_dso_tokens(this);
	}
};




DesignStylesParser.Imported_dso_tokensContext = Imported_dso_tokensContext;

DesignStylesParser.prototype.imported_dso_tokens = function() {

    var localctx = new Imported_dso_tokensContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, DesignStylesParser.RULE_imported_dso_tokens);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 183;
        this.imported_dso_name();
        this.state = 184;
        this.match(DesignStylesParser.DOT);
        this.state = 185;
        this.match(DesignStylesParser.TOKENS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Imported_dso_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_imported_dso_name;
    return this;
}

Imported_dso_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Imported_dso_nameContext.prototype.constructor = Imported_dso_nameContext;

Imported_dso_nameContext.prototype.object_name = function() {
    return this.getTypedRuleContext(Object_nameContext,0);
};

Imported_dso_nameContext.prototype.object_reference = function() {
    return this.getTypedRuleContext(Object_referenceContext,0);
};

Imported_dso_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImported_dso_name(this);
	}
};

Imported_dso_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImported_dso_name(this);
	}
};




DesignStylesParser.Imported_dso_nameContext = Imported_dso_nameContext;

DesignStylesParser.prototype.imported_dso_name = function() {

    var localctx = new Imported_dso_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, DesignStylesParser.RULE_imported_dso_name);
    try {
        this.state = 189;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 187;
            this.object_name();
            break;
        case DesignStylesParser.Reference_Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 188;
            this.object_reference();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Object_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_object_name;
    return this;
}

Object_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Object_nameContext.prototype.constructor = Object_nameContext;

Object_nameContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


Object_nameContext.prototype.DOT = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.DOT);
    } else {
        return this.getToken(DesignStylesParser.DOT, i);
    }
};


Object_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterObject_name(this);
	}
};

Object_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitObject_name(this);
	}
};




DesignStylesParser.Object_nameContext = Object_nameContext;

DesignStylesParser.prototype.object_name = function() {

    var localctx = new Object_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, DesignStylesParser.RULE_object_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 191;
        this.match(DesignStylesParser.Identifier);
        this.state = 196;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,9,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 192;
                this.match(DesignStylesParser.DOT);
                this.state = 193;
                this.match(DesignStylesParser.Identifier); 
            }
            this.state = 198;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,9,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function RegionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_region;
    return this;
}

RegionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RegionContext.prototype.constructor = RegionContext;

RegionContext.prototype.STARTREGION = function() {
    return this.getToken(DesignStylesParser.STARTREGION, 0);
};

RegionContext.prototype.ENDREGION = function() {
    return this.getToken(DesignStylesParser.ENDREGION, 0);
};

RegionContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


RegionContext.prototype.region = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(RegionContext);
    } else {
        return this.getTypedRuleContext(RegionContext,i);
    }
};

RegionContext.prototype.style_class = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Style_classContext);
    } else {
        return this.getTypedRuleContext(Style_classContext,i);
    }
};

RegionContext.prototype.font_face = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Font_faceContext);
    } else {
        return this.getTypedRuleContext(Font_faceContext,i);
    }
};

RegionContext.prototype.media_query_styles = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Media_query_stylesContext);
    } else {
        return this.getTypedRuleContext(Media_query_stylesContext,i);
    }
};

RegionContext.prototype.external_import = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(External_importContext);
    } else {
        return this.getTypedRuleContext(External_importContext,i);
    }
};

RegionContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterRegion(this);
	}
};

RegionContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitRegion(this);
	}
};




DesignStylesParser.RegionContext = RegionContext;

DesignStylesParser.prototype.region = function() {

    var localctx = new RegionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, DesignStylesParser.RULE_region);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 199;
        this.match(DesignStylesParser.STARTREGION);
        this.state = 201; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 200;
        		this.match(DesignStylesParser.Identifier);
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 203; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,10, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
        this.state = 212;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__4) | (1 << DesignStylesParser.T__5) | (1 << DesignStylesParser.T__6) | (1 << DesignStylesParser.T__7) | (1 << DesignStylesParser.T__8) | (1 << DesignStylesParser.T__9) | (1 << DesignStylesParser.T__10) | (1 << DesignStylesParser.T__11) | (1 << DesignStylesParser.T__12) | (1 << DesignStylesParser.T__13) | (1 << DesignStylesParser.T__14) | (1 << DesignStylesParser.T__15) | (1 << DesignStylesParser.T__16) | (1 << DesignStylesParser.T__17) | (1 << DesignStylesParser.T__18) | (1 << DesignStylesParser.FONT_FACE) | (1 << DesignStylesParser.MEDIA) | (1 << DesignStylesParser.IMPORT) | (1 << DesignStylesParser.STARTREGION))) !== 0) || ((((_la - 35)) & ~0x1f) == 0 && ((1 << (_la - 35)) & ((1 << (DesignStylesParser.OPEN_BRACKET - 35)) | (1 << (DesignStylesParser.DOT - 35)) | (1 << (DesignStylesParser.MUL - 35)) | (1 << (DesignStylesParser.Identifier - 35)))) !== 0) || _la===DesignStylesParser.ROOT_SELECTOR) {
            this.state = 210;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case DesignStylesParser.STARTREGION:
                this.state = 205;
                this.region();
                break;
            case DesignStylesParser.T__4:
            case DesignStylesParser.T__5:
            case DesignStylesParser.T__6:
            case DesignStylesParser.T__7:
            case DesignStylesParser.T__8:
            case DesignStylesParser.T__9:
            case DesignStylesParser.T__10:
            case DesignStylesParser.T__11:
            case DesignStylesParser.T__12:
            case DesignStylesParser.T__13:
            case DesignStylesParser.T__14:
            case DesignStylesParser.T__15:
            case DesignStylesParser.T__16:
            case DesignStylesParser.T__17:
            case DesignStylesParser.T__18:
            case DesignStylesParser.OPEN_BRACKET:
            case DesignStylesParser.DOT:
            case DesignStylesParser.MUL:
            case DesignStylesParser.Identifier:
            case DesignStylesParser.ROOT_SELECTOR:
                this.state = 206;
                this.style_class();
                break;
            case DesignStylesParser.FONT_FACE:
                this.state = 207;
                this.font_face();
                break;
            case DesignStylesParser.MEDIA:
                this.state = 208;
                this.media_query_styles();
                break;
            case DesignStylesParser.IMPORT:
                this.state = 209;
                this.external_import();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 214;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 215;
        this.match(DesignStylesParser.ENDREGION);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Media_regionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_media_region;
    return this;
}

Media_regionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Media_regionContext.prototype.constructor = Media_regionContext;

Media_regionContext.prototype.STARTREGION = function() {
    return this.getToken(DesignStylesParser.STARTREGION, 0);
};

Media_regionContext.prototype.ENDREGION = function() {
    return this.getToken(DesignStylesParser.ENDREGION, 0);
};

Media_regionContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


Media_regionContext.prototype.region = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(RegionContext);
    } else {
        return this.getTypedRuleContext(RegionContext,i);
    }
};

Media_regionContext.prototype.style_class = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Style_classContext);
    } else {
        return this.getTypedRuleContext(Style_classContext,i);
    }
};

Media_regionContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMedia_region(this);
	}
};

Media_regionContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMedia_region(this);
	}
};




DesignStylesParser.Media_regionContext = Media_regionContext;

DesignStylesParser.prototype.media_region = function() {

    var localctx = new Media_regionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, DesignStylesParser.RULE_media_region);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 217;
        this.match(DesignStylesParser.STARTREGION);
        this.state = 219; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 218;
        		this.match(DesignStylesParser.Identifier);
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 221; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,13, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
        this.state = 227;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__4) | (1 << DesignStylesParser.T__5) | (1 << DesignStylesParser.T__6) | (1 << DesignStylesParser.T__7) | (1 << DesignStylesParser.T__8) | (1 << DesignStylesParser.T__9) | (1 << DesignStylesParser.T__10) | (1 << DesignStylesParser.T__11) | (1 << DesignStylesParser.T__12) | (1 << DesignStylesParser.T__13) | (1 << DesignStylesParser.T__14) | (1 << DesignStylesParser.T__15) | (1 << DesignStylesParser.T__16) | (1 << DesignStylesParser.T__17) | (1 << DesignStylesParser.T__18) | (1 << DesignStylesParser.STARTREGION))) !== 0) || ((((_la - 35)) & ~0x1f) == 0 && ((1 << (_la - 35)) & ((1 << (DesignStylesParser.OPEN_BRACKET - 35)) | (1 << (DesignStylesParser.DOT - 35)) | (1 << (DesignStylesParser.MUL - 35)) | (1 << (DesignStylesParser.Identifier - 35)))) !== 0) || _la===DesignStylesParser.ROOT_SELECTOR) {
            this.state = 225;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case DesignStylesParser.STARTREGION:
                this.state = 223;
                this.region();
                break;
            case DesignStylesParser.T__4:
            case DesignStylesParser.T__5:
            case DesignStylesParser.T__6:
            case DesignStylesParser.T__7:
            case DesignStylesParser.T__8:
            case DesignStylesParser.T__9:
            case DesignStylesParser.T__10:
            case DesignStylesParser.T__11:
            case DesignStylesParser.T__12:
            case DesignStylesParser.T__13:
            case DesignStylesParser.T__14:
            case DesignStylesParser.T__15:
            case DesignStylesParser.T__16:
            case DesignStylesParser.T__17:
            case DesignStylesParser.T__18:
            case DesignStylesParser.OPEN_BRACKET:
            case DesignStylesParser.DOT:
            case DesignStylesParser.MUL:
            case DesignStylesParser.Identifier:
            case DesignStylesParser.ROOT_SELECTOR:
                this.state = 224;
                this.style_class();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 229;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 230;
        this.match(DesignStylesParser.ENDREGION);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Style_classContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_style_class;
    return this;
}

Style_classContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Style_classContext.prototype.constructor = Style_classContext;

Style_classContext.prototype.css_selector = function() {
    return this.getTypedRuleContext(Css_selectorContext,0);
};

Style_classContext.prototype.OPEN_BRACE = function() {
    return this.getToken(DesignStylesParser.OPEN_BRACE, 0);
};

Style_classContext.prototype.class_properties = function() {
    return this.getTypedRuleContext(Class_propertiesContext,0);
};

Style_classContext.prototype.CLOSE_BRACE = function() {
    return this.getToken(DesignStylesParser.CLOSE_BRACE, 0);
};

Style_classContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterStyle_class(this);
	}
};

Style_classContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitStyle_class(this);
	}
};




DesignStylesParser.Style_classContext = Style_classContext;

DesignStylesParser.prototype.style_class = function() {

    var localctx = new Style_classContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, DesignStylesParser.RULE_style_class);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 232;
        this.css_selector();
        this.state = 233;
        this.match(DesignStylesParser.OPEN_BRACE);
        this.state = 234;
        this.class_properties();
        this.state = 235;
        this.match(DesignStylesParser.CLOSE_BRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Font_faceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_font_face;
    return this;
}

Font_faceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Font_faceContext.prototype.constructor = Font_faceContext;

Font_faceContext.prototype.FONT_FACE = function() {
    return this.getToken(DesignStylesParser.FONT_FACE, 0);
};

Font_faceContext.prototype.OPEN_BRACE = function() {
    return this.getToken(DesignStylesParser.OPEN_BRACE, 0);
};

Font_faceContext.prototype.CLOSE_BRACE = function() {
    return this.getToken(DesignStylesParser.CLOSE_BRACE, 0);
};

Font_faceContext.prototype.property = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(PropertyContext);
    } else {
        return this.getTypedRuleContext(PropertyContext,i);
    }
};

Font_faceContext.prototype.SEMICOLON = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.SEMICOLON);
    } else {
        return this.getToken(DesignStylesParser.SEMICOLON, i);
    }
};


Font_faceContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFont_face(this);
	}
};

Font_faceContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFont_face(this);
	}
};




DesignStylesParser.Font_faceContext = Font_faceContext;

DesignStylesParser.prototype.font_face = function() {

    var localctx = new Font_faceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, DesignStylesParser.RULE_font_face);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 237;
        this.match(DesignStylesParser.FONT_FACE);
        this.state = 238;
        this.match(DesignStylesParser.OPEN_BRACE);
        this.state = 244;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.MINUS || _la===DesignStylesParser.Identifier) {
            this.state = 239;
            this.property();
            this.state = 240;
            this.match(DesignStylesParser.SEMICOLON);
            this.state = 246;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 247;
        this.match(DesignStylesParser.CLOSE_BRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Media_query_stylesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_media_query_styles;
    return this;
}

Media_query_stylesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Media_query_stylesContext.prototype.constructor = Media_query_stylesContext;

Media_query_stylesContext.prototype.MEDIA = function() {
    return this.getToken(DesignStylesParser.MEDIA, 0);
};

Media_query_stylesContext.prototype.media_query = function() {
    return this.getTypedRuleContext(Media_queryContext,0);
};

Media_query_stylesContext.prototype.OPEN_BRACE = function() {
    return this.getToken(DesignStylesParser.OPEN_BRACE, 0);
};

Media_query_stylesContext.prototype.CLOSE_BRACE = function() {
    return this.getToken(DesignStylesParser.CLOSE_BRACE, 0);
};

Media_query_stylesContext.prototype.media_region = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Media_regionContext);
    } else {
        return this.getTypedRuleContext(Media_regionContext,i);
    }
};

Media_query_stylesContext.prototype.style_class = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Style_classContext);
    } else {
        return this.getTypedRuleContext(Style_classContext,i);
    }
};

Media_query_stylesContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMedia_query_styles(this);
	}
};

Media_query_stylesContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMedia_query_styles(this);
	}
};




DesignStylesParser.Media_query_stylesContext = Media_query_stylesContext;

DesignStylesParser.prototype.media_query_styles = function() {

    var localctx = new Media_query_stylesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, DesignStylesParser.RULE_media_query_styles);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 249;
        this.match(DesignStylesParser.MEDIA);
        this.state = 250;
        this.media_query();
        this.state = 251;
        this.match(DesignStylesParser.OPEN_BRACE);
        this.state = 256;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__4) | (1 << DesignStylesParser.T__5) | (1 << DesignStylesParser.T__6) | (1 << DesignStylesParser.T__7) | (1 << DesignStylesParser.T__8) | (1 << DesignStylesParser.T__9) | (1 << DesignStylesParser.T__10) | (1 << DesignStylesParser.T__11) | (1 << DesignStylesParser.T__12) | (1 << DesignStylesParser.T__13) | (1 << DesignStylesParser.T__14) | (1 << DesignStylesParser.T__15) | (1 << DesignStylesParser.T__16) | (1 << DesignStylesParser.T__17) | (1 << DesignStylesParser.T__18) | (1 << DesignStylesParser.STARTREGION))) !== 0) || ((((_la - 35)) & ~0x1f) == 0 && ((1 << (_la - 35)) & ((1 << (DesignStylesParser.OPEN_BRACKET - 35)) | (1 << (DesignStylesParser.DOT - 35)) | (1 << (DesignStylesParser.MUL - 35)) | (1 << (DesignStylesParser.Identifier - 35)))) !== 0) || _la===DesignStylesParser.ROOT_SELECTOR) {
            this.state = 254;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case DesignStylesParser.STARTREGION:
                this.state = 252;
                this.media_region();
                break;
            case DesignStylesParser.T__4:
            case DesignStylesParser.T__5:
            case DesignStylesParser.T__6:
            case DesignStylesParser.T__7:
            case DesignStylesParser.T__8:
            case DesignStylesParser.T__9:
            case DesignStylesParser.T__10:
            case DesignStylesParser.T__11:
            case DesignStylesParser.T__12:
            case DesignStylesParser.T__13:
            case DesignStylesParser.T__14:
            case DesignStylesParser.T__15:
            case DesignStylesParser.T__16:
            case DesignStylesParser.T__17:
            case DesignStylesParser.T__18:
            case DesignStylesParser.OPEN_BRACKET:
            case DesignStylesParser.DOT:
            case DesignStylesParser.MUL:
            case DesignStylesParser.Identifier:
            case DesignStylesParser.ROOT_SELECTOR:
                this.state = 253;
                this.style_class();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 258;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 259;
        this.match(DesignStylesParser.CLOSE_BRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Media_queryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_media_query;
    return this;
}

Media_queryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Media_queryContext.prototype.constructor = Media_queryContext;

Media_queryContext.prototype.media_query_member = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Media_query_memberContext);
    } else {
        return this.getTypedRuleContext(Media_query_memberContext,i);
    }
};

Media_queryContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.COMMA);
    } else {
        return this.getToken(DesignStylesParser.COMMA, i);
    }
};


Media_queryContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMedia_query(this);
	}
};

Media_queryContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMedia_query(this);
	}
};




DesignStylesParser.Media_queryContext = Media_queryContext;

DesignStylesParser.prototype.media_query = function() {

    var localctx = new Media_queryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, DesignStylesParser.RULE_media_query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 261;
        this.media_query_member();
        this.state = 266;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.COMMA) {
            this.state = 262;
            this.match(DesignStylesParser.COMMA);
            this.state = 263;
            this.media_query_member();
            this.state = 268;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Media_query_memberContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_media_query_member;
    return this;
}

Media_query_memberContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Media_query_memberContext.prototype.constructor = Media_query_memberContext;

Media_query_memberContext.prototype.media_expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Media_exprContext);
    } else {
        return this.getTypedRuleContext(Media_exprContext,i);
    }
};

Media_query_memberContext.prototype.OP_AND = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.OP_AND);
    } else {
        return this.getToken(DesignStylesParser.OP_AND, i);
    }
};


Media_query_memberContext.prototype.media_type = function() {
    return this.getTypedRuleContext(Media_typeContext,0);
};

Media_query_memberContext.prototype.OP_NOT = function() {
    return this.getToken(DesignStylesParser.OP_NOT, 0);
};

Media_query_memberContext.prototype.media_query_token = function() {
    return this.getTypedRuleContext(Media_query_tokenContext,0);
};

Media_query_memberContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMedia_query_member(this);
	}
};

Media_query_memberContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMedia_query_member(this);
	}
};




DesignStylesParser.Media_query_memberContext = Media_query_memberContext;

DesignStylesParser.prototype.media_query_member = function() {

    var localctx = new Media_query_memberContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, DesignStylesParser.RULE_media_query_member);
    var _la = 0; // Token type
    try {
        this.state = 284;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.T__0:
        case DesignStylesParser.OPEN_PAREN:
        case DesignStylesParser.OP_NOT:
        case DesignStylesParser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 274;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case DesignStylesParser.T__0:
            case DesignStylesParser.OP_NOT:
            case DesignStylesParser.Identifier:
                this.state = 270;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===DesignStylesParser.T__0 || _la===DesignStylesParser.OP_NOT) {
                    this.state = 269;
                    _la = this._input.LA(1);
                    if(!(_la===DesignStylesParser.T__0 || _la===DesignStylesParser.OP_NOT)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                }

                this.state = 272;
                this.media_type();
                break;
            case DesignStylesParser.OPEN_PAREN:
                this.state = 273;
                this.media_expr();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 280;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===DesignStylesParser.OP_AND) {
                this.state = 276;
                this.match(DesignStylesParser.OP_AND);
                this.state = 277;
                this.media_expr();
                this.state = 282;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        case DesignStylesParser.MEDIA_TOKEN_GROUP:
            this.enterOuterAlt(localctx, 2);
            this.state = 283;
            this.media_query_token();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Media_query_tokenContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_media_query_token;
    return this;
}

Media_query_tokenContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Media_query_tokenContext.prototype.constructor = Media_query_tokenContext;

Media_query_tokenContext.prototype.MEDIA_TOKEN_GROUP = function() {
    return this.getToken(DesignStylesParser.MEDIA_TOKEN_GROUP, 0);
};

Media_query_tokenContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

Media_query_tokenContext.prototype.tokenname = function() {
    return this.getTypedRuleContext(TokennameContext,0);
};

Media_query_tokenContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMedia_query_token(this);
	}
};

Media_query_tokenContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMedia_query_token(this);
	}
};




DesignStylesParser.Media_query_tokenContext = Media_query_tokenContext;

DesignStylesParser.prototype.media_query_token = function() {

    var localctx = new Media_query_tokenContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, DesignStylesParser.RULE_media_query_token);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 286;
        this.match(DesignStylesParser.MEDIA_TOKEN_GROUP);
        this.state = 287;
        this.match(DesignStylesParser.DOT);
        this.state = 288;
        this.tokenname();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Media_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_media_type;
    return this;
}

Media_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Media_typeContext.prototype.constructor = Media_typeContext;

Media_typeContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Media_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMedia_type(this);
	}
};

Media_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMedia_type(this);
	}
};




DesignStylesParser.Media_typeContext = Media_typeContext;

DesignStylesParser.prototype.media_type = function() {

    var localctx = new Media_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, DesignStylesParser.RULE_media_type);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 290;
        this.match(DesignStylesParser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Media_exprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_media_expr;
    return this;
}

Media_exprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Media_exprContext.prototype.constructor = Media_exprContext;

Media_exprContext.prototype.OPEN_PAREN = function() {
    return this.getToken(DesignStylesParser.OPEN_PAREN, 0);
};

Media_exprContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


Media_exprContext.prototype.CLOSE_PAREN = function() {
    return this.getToken(DesignStylesParser.CLOSE_PAREN, 0);
};

Media_exprContext.prototype.COLON = function() {
    return this.getToken(DesignStylesParser.COLON, 0);
};

Media_exprContext.prototype.unitvalue = function() {
    return this.getTypedRuleContext(UnitvalueContext,0);
};

Media_exprContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMedia_expr(this);
	}
};

Media_exprContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMedia_expr(this);
	}
};




DesignStylesParser.Media_exprContext = Media_exprContext;

DesignStylesParser.prototype.media_expr = function() {

    var localctx = new Media_exprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, DesignStylesParser.RULE_media_expr);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 292;
        this.match(DesignStylesParser.OPEN_PAREN);
        this.state = 293;
        this.match(DesignStylesParser.Identifier);
        this.state = 299;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===DesignStylesParser.COLON) {
            this.state = 294;
            this.match(DesignStylesParser.COLON);
            this.state = 297;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,24,this._ctx);
            switch(la_) {
            case 1:
                this.state = 295;
                this.match(DesignStylesParser.Identifier);
                break;

            case 2:
                this.state = 296;
                this.unitvalue();
                break;

            }
        }

        this.state = 301;
        this.match(DesignStylesParser.CLOSE_PAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Class_propertiesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_class_properties;
    return this;
}

Class_propertiesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Class_propertiesContext.prototype.constructor = Class_propertiesContext;

Class_propertiesContext.prototype.INCLUDE = function() {
    return this.getToken(DesignStylesParser.INCLUDE, 0);
};

Class_propertiesContext.prototype.property = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(PropertyContext);
    } else {
        return this.getTypedRuleContext(PropertyContext,i);
    }
};

Class_propertiesContext.prototype.SEMICOLON = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.SEMICOLON);
    } else {
        return this.getToken(DesignStylesParser.SEMICOLON, i);
    }
};


Class_propertiesContext.prototype.included_class = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Included_classContext);
    } else {
        return this.getTypedRuleContext(Included_classContext,i);
    }
};

Class_propertiesContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterClass_properties(this);
	}
};

Class_propertiesContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitClass_properties(this);
	}
};




DesignStylesParser.Class_propertiesContext = Class_propertiesContext;

DesignStylesParser.prototype.class_properties = function() {

    var localctx = new Class_propertiesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, DesignStylesParser.RULE_class_properties);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 311;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===DesignStylesParser.INCLUDE) {
            this.state = 303;
            this.match(DesignStylesParser.INCLUDE);

            this.state = 307;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__5) | (1 << DesignStylesParser.T__6) | (1 << DesignStylesParser.T__7) | (1 << DesignStylesParser.T__8) | (1 << DesignStylesParser.T__9) | (1 << DesignStylesParser.T__10) | (1 << DesignStylesParser.T__11) | (1 << DesignStylesParser.T__12) | (1 << DesignStylesParser.T__13) | (1 << DesignStylesParser.T__14) | (1 << DesignStylesParser.T__15) | (1 << DesignStylesParser.T__16) | (1 << DesignStylesParser.T__17))) !== 0) || _la===DesignStylesParser.Identifier) {
                this.state = 304;
                this.included_class();
                this.state = 309;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 310;
            this.match(DesignStylesParser.SEMICOLON);
        }

        this.state = 321;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.MINUS || _la===DesignStylesParser.Identifier) {
            this.state = 313;
            this.property();
            this.state = 315; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 314;
                this.match(DesignStylesParser.SEMICOLON);
                this.state = 317; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===DesignStylesParser.SEMICOLON);
            this.state = 323;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Included_classContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_included_class;
    return this;
}

Included_classContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Included_classContext.prototype.constructor = Included_classContext;

Included_classContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Included_classContext.prototype.multi_part_identifier = function() {
    return this.getTypedRuleContext(Multi_part_identifierContext,0);
};

Included_classContext.prototype.unit = function() {
    return this.getTypedRuleContext(UnitContext,0);
};

Included_classContext.prototype.image_unit = function() {
    return this.getTypedRuleContext(Image_unitContext,0);
};

Included_classContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

Included_classContext.prototype.included_class = function() {
    return this.getTypedRuleContext(Included_classContext,0);
};

Included_classContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterIncluded_class(this);
	}
};

Included_classContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitIncluded_class(this);
	}
};




DesignStylesParser.Included_classContext = Included_classContext;

DesignStylesParser.prototype.included_class = function() {

    var localctx = new Included_classContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, DesignStylesParser.RULE_included_class);
    try {
        this.state = 331;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,30,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 324;
            this.match(DesignStylesParser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 325;
            this.multi_part_identifier();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 326;
            this.unit();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 327;
            this.image_unit();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 328;
            this.match(DesignStylesParser.Identifier);
            this.state = 329;
            this.match(DesignStylesParser.DOT);
            this.state = 330;
            this.included_class();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function PropertyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_property;
    return this;
}

PropertyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PropertyContext.prototype.constructor = PropertyContext;

PropertyContext.prototype.csspropertyname = function() {
    return this.getTypedRuleContext(CsspropertynameContext,0);
};

PropertyContext.prototype.COLON = function() {
    return this.getToken(DesignStylesParser.COLON, 0);
};

PropertyContext.prototype.property_value = function() {
    return this.getTypedRuleContext(Property_valueContext,0);
};

PropertyContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterProperty(this);
	}
};

PropertyContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitProperty(this);
	}
};




DesignStylesParser.PropertyContext = PropertyContext;

DesignStylesParser.prototype.property = function() {

    var localctx = new PropertyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, DesignStylesParser.RULE_property);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 333;
        this.csspropertyname();
        this.state = 334;
        this.match(DesignStylesParser.COLON);
        this.state = 335;
        this.property_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Property_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_property_value;
    return this;
}

Property_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_valueContext.prototype.constructor = Property_valueContext;

Property_valueContext.prototype.csspropertyvalue = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(CsspropertyvalueContext);
    } else {
        return this.getTypedRuleContext(CsspropertyvalueContext,i);
    }
};

Property_valueContext.prototype.important_expr = function() {
    return this.getTypedRuleContext(Important_exprContext,0);
};

Property_valueContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.COMMA);
    } else {
        return this.getToken(DesignStylesParser.COMMA, i);
    }
};


Property_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterProperty_value(this);
	}
};

Property_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitProperty_value(this);
	}
};




DesignStylesParser.Property_valueContext = Property_valueContext;

DesignStylesParser.prototype.property_value = function() {

    var localctx = new Property_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, DesignStylesParser.RULE_property_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 337;
        this.csspropertyvalue();
        this.state = 344;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(((((_la - 3)) & ~0x1f) == 0 && ((1 << (_la - 3)) & ((1 << (DesignStylesParser.T__2 - 3)) | (1 << (DesignStylesParser.T__3 - 3)) | (1 << (DesignStylesParser.GXIMAGE - 3)) | (1 << (DesignStylesParser.GXFILE - 3)) | (1 << (DesignStylesParser.TOKEN_PREFIX - 3)))) !== 0) || ((((_la - 39)) & ~0x1f) == 0 && ((1 << (_la - 39)) & ((1 << (DesignStylesParser.COMMA - 39)) | (1 << (DesignStylesParser.OP_NOT - 39)) | (1 << (DesignStylesParser.NUMBER - 39)) | (1 << (DesignStylesParser.Identifier - 39)) | (1 << (DesignStylesParser.Integer_literal - 39)) | (1 << (DesignStylesParser.String_literal - 39)))) !== 0)) {
            this.state = 339;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===DesignStylesParser.COMMA) {
                this.state = 338;
                this.match(DesignStylesParser.COMMA);
            }

            this.state = 341;
            this.csspropertyvalue();
            this.state = 346;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 348;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===DesignStylesParser.BANG) {
            this.state = 347;
            this.important_expr();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function FuncContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_func;
    return this;
}

FuncContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncContext.prototype.constructor = FuncContext;

FuncContext.prototype.func_name = function() {
    return this.getTypedRuleContext(Func_nameContext,0);
};

FuncContext.prototype.OPEN_PAREN = function() {
    return this.getToken(DesignStylesParser.OPEN_PAREN, 0);
};

FuncContext.prototype.function_parameters = function() {
    return this.getTypedRuleContext(Function_parametersContext,0);
};

FuncContext.prototype.CLOSE_PAREN = function() {
    return this.getToken(DesignStylesParser.CLOSE_PAREN, 0);
};

FuncContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFunc(this);
	}
};

FuncContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFunc(this);
	}
};




DesignStylesParser.FuncContext = FuncContext;

DesignStylesParser.prototype.func = function() {

    var localctx = new FuncContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, DesignStylesParser.RULE_func);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 350;
        this.func_name();
        this.state = 351;
        this.match(DesignStylesParser.OPEN_PAREN);
        this.state = 352;
        this.function_parameters();
        this.state = 353;
        this.match(DesignStylesParser.CLOSE_PAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Func_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_func_name;
    return this;
}

Func_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Func_nameContext.prototype.constructor = Func_nameContext;

Func_nameContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Func_nameContext.prototype.OP_NOT = function() {
    return this.getToken(DesignStylesParser.OP_NOT, 0);
};

Func_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFunc_name(this);
	}
};

Func_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFunc_name(this);
	}
};




DesignStylesParser.Func_nameContext = Func_nameContext;

DesignStylesParser.prototype.func_name = function() {

    var localctx = new Func_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, DesignStylesParser.RULE_func_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 355;
        _la = this._input.LA(1);
        if(!(_la===DesignStylesParser.OP_NOT || _la===DesignStylesParser.Identifier)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function CsspropertyvalueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_csspropertyvalue;
    return this;
}

CsspropertyvalueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CsspropertyvalueContext.prototype.constructor = CsspropertyvalueContext;

CsspropertyvalueContext.prototype.unitvalue = function() {
    return this.getTypedRuleContext(UnitvalueContext,0);
};

CsspropertyvalueContext.prototype.value = function() {
    return this.getTypedRuleContext(ValueContext,0);
};

CsspropertyvalueContext.prototype.tokenvalue = function() {
    return this.getTypedRuleContext(TokenvalueContext,0);
};

CsspropertyvalueContext.prototype.gx_imagevalue = function() {
    return this.getTypedRuleContext(Gx_imagevalueContext,0);
};

CsspropertyvalueContext.prototype.gx_filevalue = function() {
    return this.getTypedRuleContext(Gx_filevalueContext,0);
};

CsspropertyvalueContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterCsspropertyvalue(this);
	}
};

CsspropertyvalueContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitCsspropertyvalue(this);
	}
};




DesignStylesParser.CsspropertyvalueContext = CsspropertyvalueContext;

DesignStylesParser.prototype.csspropertyvalue = function() {

    var localctx = new CsspropertyvalueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, DesignStylesParser.RULE_csspropertyvalue);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 362;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,34,this._ctx);
        switch(la_) {
        case 1:
            this.state = 357;
            this.unitvalue();
            break;

        case 2:
            this.state = 358;
            this.value();
            break;

        case 3:
            this.state = 359;
            this.tokenvalue();
            break;

        case 4:
            this.state = 360;
            this.gx_imagevalue();
            break;

        case 5:
            this.state = 361;
            this.gx_filevalue();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Important_exprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_important_expr;
    return this;
}

Important_exprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Important_exprContext.prototype.constructor = Important_exprContext;

Important_exprContext.prototype.BANG = function() {
    return this.getToken(DesignStylesParser.BANG, 0);
};

Important_exprContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImportant_expr(this);
	}
};

Important_exprContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImportant_expr(this);
	}
};




DesignStylesParser.Important_exprContext = Important_exprContext;

DesignStylesParser.prototype.important_expr = function() {

    var localctx = new Important_exprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, DesignStylesParser.RULE_important_expr);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 364;
        this.match(DesignStylesParser.BANG);
        this.state = 365;
        this.match(DesignStylesParser.T__1);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function CsspropertynameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_csspropertyname;
    return this;
}

CsspropertynameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CsspropertynameContext.prototype.constructor = CsspropertynameContext;

CsspropertynameContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


CsspropertynameContext.prototype.MINUS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.MINUS);
    } else {
        return this.getToken(DesignStylesParser.MINUS, i);
    }
};


CsspropertynameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterCsspropertyname(this);
	}
};

CsspropertynameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitCsspropertyname(this);
	}
};




DesignStylesParser.CsspropertynameContext = CsspropertynameContext;

DesignStylesParser.prototype.csspropertyname = function() {

    var localctx = new CsspropertynameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, DesignStylesParser.RULE_csspropertyname);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 370;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.MINUS) {
            this.state = 367;
            this.match(DesignStylesParser.MINUS);
            this.state = 372;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 373;
        this.match(DesignStylesParser.Identifier);
        this.state = 378;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.MINUS) {
            this.state = 374;
            this.match(DesignStylesParser.MINUS);
            this.state = 375;
            this.match(DesignStylesParser.Identifier);
            this.state = 380;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Gx_imagevalueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_gx_imagevalue;
    return this;
}

Gx_imagevalueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Gx_imagevalueContext.prototype.constructor = Gx_imagevalueContext;

Gx_imagevalueContext.prototype.GXIMAGE = function() {
    return this.getToken(DesignStylesParser.GXIMAGE, 0);
};

Gx_imagevalueContext.prototype.OPEN_PAREN = function() {
    return this.getToken(DesignStylesParser.OPEN_PAREN, 0);
};

Gx_imagevalueContext.prototype.CLOSE_PAREN = function() {
    return this.getToken(DesignStylesParser.CLOSE_PAREN, 0);
};

Gx_imagevalueContext.prototype.image_name = function() {
    return this.getTypedRuleContext(Image_nameContext,0);
};

Gx_imagevalueContext.prototype.object_reference = function() {
    return this.getTypedRuleContext(Object_referenceContext,0);
};

Gx_imagevalueContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterGx_imagevalue(this);
	}
};

Gx_imagevalueContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitGx_imagevalue(this);
	}
};




DesignStylesParser.Gx_imagevalueContext = Gx_imagevalueContext;

DesignStylesParser.prototype.gx_imagevalue = function() {

    var localctx = new Gx_imagevalueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, DesignStylesParser.RULE_gx_imagevalue);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 381;
        this.match(DesignStylesParser.GXIMAGE);
        this.state = 382;
        this.match(DesignStylesParser.OPEN_PAREN);
        this.state = 385;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.Identifier:
            this.state = 383;
            this.image_name();
            break;
        case DesignStylesParser.Reference_Identifier:
            this.state = 384;
            this.object_reference();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 387;
        this.match(DesignStylesParser.CLOSE_PAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Gx_filevalueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_gx_filevalue;
    return this;
}

Gx_filevalueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Gx_filevalueContext.prototype.constructor = Gx_filevalueContext;

Gx_filevalueContext.prototype.GXFILE = function() {
    return this.getToken(DesignStylesParser.GXFILE, 0);
};

Gx_filevalueContext.prototype.OPEN_PAREN = function() {
    return this.getToken(DesignStylesParser.OPEN_PAREN, 0);
};

Gx_filevalueContext.prototype.CLOSE_PAREN = function() {
    return this.getToken(DesignStylesParser.CLOSE_PAREN, 0);
};

Gx_filevalueContext.prototype.file_name = function() {
    return this.getTypedRuleContext(File_nameContext,0);
};

Gx_filevalueContext.prototype.object_reference = function() {
    return this.getTypedRuleContext(Object_referenceContext,0);
};

Gx_filevalueContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterGx_filevalue(this);
	}
};

Gx_filevalueContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitGx_filevalue(this);
	}
};




DesignStylesParser.Gx_filevalueContext = Gx_filevalueContext;

DesignStylesParser.prototype.gx_filevalue = function() {

    var localctx = new Gx_filevalueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, DesignStylesParser.RULE_gx_filevalue);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 389;
        this.match(DesignStylesParser.GXFILE);
        this.state = 390;
        this.match(DesignStylesParser.OPEN_PAREN);
        this.state = 393;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.Identifier:
        case DesignStylesParser.String_literal:
            this.state = 391;
            this.file_name();
            break;
        case DesignStylesParser.Reference_Identifier:
            this.state = 392;
            this.object_reference();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 395;
        this.match(DesignStylesParser.CLOSE_PAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Object_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_object_reference;
    return this;
}

Object_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Object_referenceContext.prototype.constructor = Object_referenceContext;

Object_referenceContext.prototype.Reference_Identifier = function() {
    return this.getToken(DesignStylesParser.Reference_Identifier, 0);
};

Object_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterObject_reference(this);
	}
};

Object_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitObject_reference(this);
	}
};




DesignStylesParser.Object_referenceContext = Object_referenceContext;

DesignStylesParser.prototype.object_reference = function() {

    var localctx = new Object_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, DesignStylesParser.RULE_object_reference);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 397;
        this.match(DesignStylesParser.Reference_Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Image_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_image_name;
    return this;
}

Image_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Image_nameContext.prototype.constructor = Image_nameContext;

Image_nameContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


Image_nameContext.prototype.DOT = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.DOT);
    } else {
        return this.getToken(DesignStylesParser.DOT, i);
    }
};


Image_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImage_name(this);
	}
};

Image_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImage_name(this);
	}
};




DesignStylesParser.Image_nameContext = Image_nameContext;

DesignStylesParser.prototype.image_name = function() {

    var localctx = new Image_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, DesignStylesParser.RULE_image_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 399;
        this.match(DesignStylesParser.Identifier);
        this.state = 404;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.DOT) {
            this.state = 400;
            this.match(DesignStylesParser.DOT);
            this.state = 401;
            this.match(DesignStylesParser.Identifier);
            this.state = 406;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function File_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_file_name;
    return this;
}

File_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
File_nameContext.prototype.constructor = File_nameContext;

File_nameContext.prototype.generic_name = function() {
    return this.getTypedRuleContext(Generic_nameContext,0);
};

File_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFile_name(this);
	}
};

File_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFile_name(this);
	}
};




DesignStylesParser.File_nameContext = File_nameContext;

DesignStylesParser.prototype.file_name = function() {

    var localctx = new File_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, DesignStylesParser.RULE_file_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 407;
        this.generic_name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Generic_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_generic_name;
    return this;
}

Generic_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Generic_nameContext.prototype.constructor = Generic_nameContext;

Generic_nameContext.prototype.multi_part_identifier = function() {
    return this.getTypedRuleContext(Multi_part_identifierContext,0);
};

Generic_nameContext.prototype.String_literal = function() {
    return this.getToken(DesignStylesParser.String_literal, 0);
};

Generic_nameContext.prototype.module_name = function() {
    return this.getTypedRuleContext(Module_nameContext,0);
};

Generic_nameContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

Generic_nameContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


Generic_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterGeneric_name(this);
	}
};

Generic_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitGeneric_name(this);
	}
};




DesignStylesParser.Generic_nameContext = Generic_nameContext;

DesignStylesParser.prototype.generic_name = function() {

    var localctx = new Generic_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, DesignStylesParser.RULE_generic_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 412;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,40,this._ctx);
        if(la_===1) {
            this.state = 409;
            this.module_name();
            this.state = 410;
            this.match(DesignStylesParser.DOT);

        }
        this.state = 421;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,42,this._ctx);
        switch(la_) {
        case 1:
            this.state = 415; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 414;
                this.match(DesignStylesParser.Identifier);
                this.state = 417; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===DesignStylesParser.Identifier);
            break;

        case 2:
            this.state = 419;
            this.multi_part_identifier();
            break;

        case 3:
            this.state = 420;
            this.match(DesignStylesParser.String_literal);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Module_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_module_name;
    return this;
}

Module_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Module_nameContext.prototype.constructor = Module_nameContext;

Module_nameContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


Module_nameContext.prototype.DOT = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.DOT);
    } else {
        return this.getToken(DesignStylesParser.DOT, i);
    }
};


Module_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterModule_name(this);
	}
};

Module_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitModule_name(this);
	}
};




DesignStylesParser.Module_nameContext = Module_nameContext;

DesignStylesParser.prototype.module_name = function() {

    var localctx = new Module_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, DesignStylesParser.RULE_module_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 423;
        this.match(DesignStylesParser.Identifier);
        this.state = 428;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,43,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 424;
                this.match(DesignStylesParser.DOT);
                this.state = 425;
                this.match(DesignStylesParser.Identifier); 
            }
            this.state = 430;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,43,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function File_extensionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_file_extension;
    return this;
}

File_extensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
File_extensionContext.prototype.constructor = File_extensionContext;

File_extensionContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


File_extensionContext.prototype.DOT = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.DOT);
    } else {
        return this.getToken(DesignStylesParser.DOT, i);
    }
};


File_extensionContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFile_extension(this);
	}
};

File_extensionContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFile_extension(this);
	}
};




DesignStylesParser.File_extensionContext = File_extensionContext;

DesignStylesParser.prototype.file_extension = function() {

    var localctx = new File_extensionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, DesignStylesParser.RULE_file_extension);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 431;
        this.match(DesignStylesParser.Identifier);
        this.state = 436;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.DOT) {
            this.state = 432;
            this.match(DesignStylesParser.DOT);
            this.state = 433;
            this.match(DesignStylesParser.Identifier);
            this.state = 438;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Function_parametersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_function_parameters;
    return this;
}

Function_parametersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_parametersContext.prototype.constructor = Function_parametersContext;

Function_parametersContext.prototype.function_parameter = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Function_parameterContext);
    } else {
        return this.getTypedRuleContext(Function_parameterContext,i);
    }
};

Function_parametersContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.COMMA);
    } else {
        return this.getToken(DesignStylesParser.COMMA, i);
    }
};


Function_parametersContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFunction_parameters(this);
	}
};

Function_parametersContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFunction_parameters(this);
	}
};




DesignStylesParser.Function_parametersContext = Function_parametersContext;

DesignStylesParser.prototype.function_parameters = function() {

    var localctx = new Function_parametersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, DesignStylesParser.RULE_function_parameters);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 442;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.T__2 || _la===DesignStylesParser.T__3 || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (DesignStylesParser.TOKEN_PREFIX - 32)) | (1 << (DesignStylesParser.OPEN_BRACKET - 32)) | (1 << (DesignStylesParser.COLON - 32)) | (1 << (DesignStylesParser.DOT - 32)) | (1 << (DesignStylesParser.OP_NOT - 32)) | (1 << (DesignStylesParser.NUMBER - 32)) | (1 << (DesignStylesParser.Identifier - 32)) | (1 << (DesignStylesParser.Integer_literal - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (DesignStylesParser.String_literal - 69)) | (1 << (DesignStylesParser.STRING - 69)) | (1 << (DesignStylesParser.ACTIVE_SELECTOR - 69)) | (1 << (DesignStylesParser.AFTER_SELECTOR - 69)) | (1 << (DesignStylesParser.BEFORE_SELECTOR - 69)) | (1 << (DesignStylesParser.CHECKED_SELECTOR - 69)) | (1 << (DesignStylesParser.DEFAULT_SELECTOR - 69)) | (1 << (DesignStylesParser.DISABLED_SELECTOR - 69)) | (1 << (DesignStylesParser.EMPTY_SELECTOR - 69)) | (1 << (DesignStylesParser.ENABLED_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_CHILD_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_LETTER_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_LINE_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_OF_TYPE_SELECTOR - 69)) | (1 << (DesignStylesParser.FOCUS_SELECTOR - 69)) | (1 << (DesignStylesParser.FOCUS_WITHIN - 69)) | (1 << (DesignStylesParser.HOVER_SELECTOR - 69)) | (1 << (DesignStylesParser.IN_RANGE_SELECTOR - 69)) | (1 << (DesignStylesParser.INDETERMINATE_SELECTOR - 69)) | (1 << (DesignStylesParser.INVALID_SELECTOR - 69)) | (1 << (DesignStylesParser.LAST_CHILD_SELECTOR - 69)) | (1 << (DesignStylesParser.LAST_OF_TYPE_SELECTOR - 69)) | (1 << (DesignStylesParser.LINK_SELECTOR - 69)) | (1 << (DesignStylesParser.ONLY_OF_TYPE_SELECTOR - 69)) | (1 << (DesignStylesParser.ONLY_CHILD_SELECTOR - 69)) | (1 << (DesignStylesParser.OPTIONAL_SELECTOR - 69)) | (1 << (DesignStylesParser.OUT_OF_RANGE_SELECTOR - 69)) | (1 << (DesignStylesParser.PLACEHOLDER_SELECTOR - 69)))) !== 0) || ((((_la - 101)) & ~0x1f) == 0 && ((1 << (_la - 101)) & ((1 << (DesignStylesParser.READ_ONLY_SELECTOR - 101)) | (1 << (DesignStylesParser.READ_WRITE_SELECTOR - 101)) | (1 << (DesignStylesParser.REQUIRED_SELECTOR - 101)) | (1 << (DesignStylesParser.SELECTION_SELECTOR - 101)) | (1 << (DesignStylesParser.TARGET_SELECTOR - 101)) | (1 << (DesignStylesParser.VALID_SELECTOR - 101)) | (1 << (DesignStylesParser.VISITED_SELECTOR - 101)))) !== 0)) {
            this.state = 439;
            this.function_parameter();
            this.state = 444;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 453;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.COMMA) {
            this.state = 445;
            this.match(DesignStylesParser.COMMA);
            this.state = 447; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 446;
                this.function_parameter();
                this.state = 449; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===DesignStylesParser.T__2 || _la===DesignStylesParser.T__3 || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (DesignStylesParser.TOKEN_PREFIX - 32)) | (1 << (DesignStylesParser.OPEN_BRACKET - 32)) | (1 << (DesignStylesParser.COLON - 32)) | (1 << (DesignStylesParser.DOT - 32)) | (1 << (DesignStylesParser.OP_NOT - 32)) | (1 << (DesignStylesParser.NUMBER - 32)) | (1 << (DesignStylesParser.Identifier - 32)) | (1 << (DesignStylesParser.Integer_literal - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (DesignStylesParser.String_literal - 69)) | (1 << (DesignStylesParser.STRING - 69)) | (1 << (DesignStylesParser.ACTIVE_SELECTOR - 69)) | (1 << (DesignStylesParser.AFTER_SELECTOR - 69)) | (1 << (DesignStylesParser.BEFORE_SELECTOR - 69)) | (1 << (DesignStylesParser.CHECKED_SELECTOR - 69)) | (1 << (DesignStylesParser.DEFAULT_SELECTOR - 69)) | (1 << (DesignStylesParser.DISABLED_SELECTOR - 69)) | (1 << (DesignStylesParser.EMPTY_SELECTOR - 69)) | (1 << (DesignStylesParser.ENABLED_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_CHILD_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_LETTER_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_LINE_SELECTOR - 69)) | (1 << (DesignStylesParser.FIRST_OF_TYPE_SELECTOR - 69)) | (1 << (DesignStylesParser.FOCUS_SELECTOR - 69)) | (1 << (DesignStylesParser.FOCUS_WITHIN - 69)) | (1 << (DesignStylesParser.HOVER_SELECTOR - 69)) | (1 << (DesignStylesParser.IN_RANGE_SELECTOR - 69)) | (1 << (DesignStylesParser.INDETERMINATE_SELECTOR - 69)) | (1 << (DesignStylesParser.INVALID_SELECTOR - 69)) | (1 << (DesignStylesParser.LAST_CHILD_SELECTOR - 69)) | (1 << (DesignStylesParser.LAST_OF_TYPE_SELECTOR - 69)) | (1 << (DesignStylesParser.LINK_SELECTOR - 69)) | (1 << (DesignStylesParser.ONLY_OF_TYPE_SELECTOR - 69)) | (1 << (DesignStylesParser.ONLY_CHILD_SELECTOR - 69)) | (1 << (DesignStylesParser.OPTIONAL_SELECTOR - 69)) | (1 << (DesignStylesParser.OUT_OF_RANGE_SELECTOR - 69)) | (1 << (DesignStylesParser.PLACEHOLDER_SELECTOR - 69)))) !== 0) || ((((_la - 101)) & ~0x1f) == 0 && ((1 << (_la - 101)) & ((1 << (DesignStylesParser.READ_ONLY_SELECTOR - 101)) | (1 << (DesignStylesParser.READ_WRITE_SELECTOR - 101)) | (1 << (DesignStylesParser.REQUIRED_SELECTOR - 101)) | (1 << (DesignStylesParser.SELECTION_SELECTOR - 101)) | (1 << (DesignStylesParser.TARGET_SELECTOR - 101)) | (1 << (DesignStylesParser.VALID_SELECTOR - 101)) | (1 << (DesignStylesParser.VISITED_SELECTOR - 101)))) !== 0));
            this.state = 455;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Function_parameterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_function_parameter;
    return this;
}

Function_parameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_parameterContext.prototype.constructor = Function_parameterContext;

Function_parameterContext.prototype.tokenvalue = function() {
    return this.getTypedRuleContext(TokenvalueContext,0);
};

Function_parameterContext.prototype.func = function() {
    return this.getTypedRuleContext(FuncContext,0);
};

Function_parameterContext.prototype.calculation = function() {
    return this.getTypedRuleContext(CalculationContext,0);
};

Function_parameterContext.prototype.property_asignation = function() {
    return this.getTypedRuleContext(Property_asignationContext,0);
};

Function_parameterContext.prototype.NUMBER = function() {
    return this.getToken(DesignStylesParser.NUMBER, 0);
};

Function_parameterContext.prototype.STRING = function() {
    return this.getToken(DesignStylesParser.STRING, 0);
};

Function_parameterContext.prototype.String_literal = function() {
    return this.getToken(DesignStylesParser.String_literal, 0);
};

Function_parameterContext.prototype.Integer_literal = function() {
    return this.getToken(DesignStylesParser.Integer_literal, 0);
};

Function_parameterContext.prototype.image = function() {
    return this.getTypedRuleContext(ImageContext,0);
};

Function_parameterContext.prototype.attribute_filter = function() {
    return this.getTypedRuleContext(Attribute_filterContext,0);
};

Function_parameterContext.prototype.unitvalue = function() {
    return this.getTypedRuleContext(UnitvalueContext,0);
};

Function_parameterContext.prototype.selector = function() {
    return this.getTypedRuleContext(SelectorContext,0);
};

Function_parameterContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

Function_parameterContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Function_parameterContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterFunction_parameter(this);
	}
};

Function_parameterContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitFunction_parameter(this);
	}
};




DesignStylesParser.Function_parameterContext = Function_parameterContext;

DesignStylesParser.prototype.function_parameter = function() {

    var localctx = new Function_parameterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, DesignStylesParser.RULE_function_parameter);
    try {
        this.state = 471;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,48,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 456;
            this.tokenvalue();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 457;
            this.func();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 458;
            this.calculation();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 459;
            this.property_asignation();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 460;
            this.match(DesignStylesParser.NUMBER);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 461;
            this.match(DesignStylesParser.STRING);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 462;
            this.match(DesignStylesParser.String_literal);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 463;
            this.match(DesignStylesParser.Integer_literal);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 464;
            this.image();
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 465;
            this.attribute_filter();
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 466;
            this.unitvalue();
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 467;
            this.selector();
            break;

        case 13:
            this.enterOuterAlt(localctx, 13);
            this.state = 468;
            this.match(DesignStylesParser.DOT);
            this.state = 469;
            this.match(DesignStylesParser.Identifier);
            break;

        case 14:
            this.enterOuterAlt(localctx, 14);
            this.state = 470;
            this.match(DesignStylesParser.Identifier);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function CalculationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_calculation;
    return this;
}

CalculationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CalculationContext.prototype.constructor = CalculationContext;

CalculationContext.prototype.unitvalue = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(UnitvalueContext);
    } else {
        return this.getTypedRuleContext(UnitvalueContext,i);
    }
};

CalculationContext.prototype.operator = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(OperatorContext);
    } else {
        return this.getTypedRuleContext(OperatorContext,i);
    }
};

CalculationContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterCalculation(this);
	}
};

CalculationContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitCalculation(this);
	}
};




DesignStylesParser.CalculationContext = CalculationContext;

DesignStylesParser.prototype.calculation = function() {

    var localctx = new CalculationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, DesignStylesParser.RULE_calculation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 473;
        this.unitvalue();
        this.state = 474;
        this.operator();
        this.state = 475;
        this.unitvalue();
        this.state = 481;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(((((_la - 48)) & ~0x1f) == 0 && ((1 << (_la - 48)) & ((1 << (DesignStylesParser.CARET - 48)) | (1 << (DesignStylesParser.PLUS - 48)) | (1 << (DesignStylesParser.MINUS - 48)) | (1 << (DesignStylesParser.MUL - 48)) | (1 << (DesignStylesParser.DIV - 48)))) !== 0)) {
            this.state = 476;
            this.operator();
            this.state = 477;
            this.unitvalue();
            this.state = 483;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Property_asignationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_property_asignation;
    return this;
}

Property_asignationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_asignationContext.prototype.constructor = Property_asignationContext;

Property_asignationContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Property_asignationContext.prototype.EQ = function() {
    return this.getToken(DesignStylesParser.EQ, 0);
};

Property_asignationContext.prototype.value = function() {
    return this.getTypedRuleContext(ValueContext,0);
};

Property_asignationContext.prototype.unitvalue = function() {
    return this.getTypedRuleContext(UnitvalueContext,0);
};

Property_asignationContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterProperty_asignation(this);
	}
};

Property_asignationContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitProperty_asignation(this);
	}
};




DesignStylesParser.Property_asignationContext = Property_asignationContext;

DesignStylesParser.prototype.property_asignation = function() {

    var localctx = new Property_asignationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, DesignStylesParser.RULE_property_asignation);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 484;
        this.match(DesignStylesParser.Identifier);
        this.state = 485;
        this.match(DesignStylesParser.EQ);
        this.state = 488;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,50,this._ctx);
        switch(la_) {
        case 1:
            this.state = 486;
            this.value();
            break;

        case 2:
            this.state = 487;
            this.unitvalue();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function UnitvalueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_unitvalue;
    return this;
}

UnitvalueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnitvalueContext.prototype.constructor = UnitvalueContext;

UnitvalueContext.prototype.value = function() {
    return this.getTypedRuleContext(ValueContext,0);
};

UnitvalueContext.prototype.unit = function() {
    return this.getTypedRuleContext(UnitContext,0);
};

UnitvalueContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterUnitvalue(this);
	}
};

UnitvalueContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitUnitvalue(this);
	}
};




DesignStylesParser.UnitvalueContext = UnitvalueContext;

DesignStylesParser.prototype.unitvalue = function() {

    var localctx = new UnitvalueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, DesignStylesParser.RULE_unitvalue);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 490;
        this.value();
        this.state = 491;
        this.unit();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ValueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_value;
    return this;
}

ValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ValueContext.prototype.constructor = ValueContext;

ValueContext.prototype.func = function() {
    return this.getTypedRuleContext(FuncContext,0);
};

ValueContext.prototype.NUMBER = function() {
    return this.getToken(DesignStylesParser.NUMBER, 0);
};

ValueContext.prototype.String_literal = function() {
    return this.getToken(DesignStylesParser.String_literal, 0);
};

ValueContext.prototype.Integer_literal = function() {
    return this.getToken(DesignStylesParser.Integer_literal, 0);
};

ValueContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

ValueContext.prototype.multi_part_identifier = function() {
    return this.getTypedRuleContext(Multi_part_identifierContext,0);
};

ValueContext.prototype.image = function() {
    return this.getTypedRuleContext(ImageContext,0);
};

ValueContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterValue(this);
	}
};

ValueContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitValue(this);
	}
};




DesignStylesParser.ValueContext = ValueContext;

DesignStylesParser.prototype.value = function() {

    var localctx = new ValueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 86, DesignStylesParser.RULE_value);
    try {
        this.state = 502;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,51,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 493;
            this.func();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 494;
            this.match(DesignStylesParser.NUMBER);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 495;
            this.match(DesignStylesParser.String_literal);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 496;
            this.match(DesignStylesParser.Integer_literal);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 497;
            this.match(DesignStylesParser.Identifier);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 498;
            this.multi_part_identifier();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 499;
            this.image();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 500;
            this.match(DesignStylesParser.T__2);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 501;
            this.match(DesignStylesParser.T__3);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TokenvalueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_tokenvalue;
    return this;
}

TokenvalueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TokenvalueContext.prototype.constructor = TokenvalueContext;

TokenvalueContext.prototype.TOKEN_PREFIX = function() {
    return this.getToken(DesignStylesParser.TOKEN_PREFIX, 0);
};

TokenvalueContext.prototype.tokengroup = function() {
    return this.getTypedRuleContext(TokengroupContext,0);
};

TokenvalueContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

TokenvalueContext.prototype.tokenname = function() {
    return this.getTypedRuleContext(TokennameContext,0);
};

TokenvalueContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterTokenvalue(this);
	}
};

TokenvalueContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitTokenvalue(this);
	}
};




DesignStylesParser.TokenvalueContext = TokenvalueContext;

DesignStylesParser.prototype.tokenvalue = function() {

    var localctx = new TokenvalueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, DesignStylesParser.RULE_tokenvalue);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 504;
        this.match(DesignStylesParser.TOKEN_PREFIX);
        this.state = 505;
        this.tokengroup();
        this.state = 506;
        this.match(DesignStylesParser.DOT);
        this.state = 507;
        this.tokenname();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TokengroupContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_tokengroup;
    return this;
}

TokengroupContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TokengroupContext.prototype.constructor = TokengroupContext;

TokengroupContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

TokengroupContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterTokengroup(this);
	}
};

TokengroupContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitTokengroup(this);
	}
};




DesignStylesParser.TokengroupContext = TokengroupContext;

DesignStylesParser.prototype.tokengroup = function() {

    var localctx = new TokengroupContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, DesignStylesParser.RULE_tokengroup);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 509;
        this.match(DesignStylesParser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function TokennameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_tokenname;
    return this;
}

TokennameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TokennameContext.prototype.constructor = TokennameContext;

TokennameContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

TokennameContext.prototype.unit = function() {
    return this.getTypedRuleContext(UnitContext,0);
};

TokennameContext.prototype.image_unit = function() {
    return this.getTypedRuleContext(Image_unitContext,0);
};

TokennameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterTokenname(this);
	}
};

TokennameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitTokenname(this);
	}
};




DesignStylesParser.TokennameContext = TokennameContext;

DesignStylesParser.prototype.tokenname = function() {

    var localctx = new TokennameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, DesignStylesParser.RULE_tokenname);
    try {
        this.state = 514;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 511;
            this.match(DesignStylesParser.Identifier);
            break;
        case DesignStylesParser.T__5:
        case DesignStylesParser.T__6:
        case DesignStylesParser.T__7:
        case DesignStylesParser.T__8:
        case DesignStylesParser.T__9:
        case DesignStylesParser.T__10:
        case DesignStylesParser.T__11:
        case DesignStylesParser.T__12:
        case DesignStylesParser.T__13:
            this.enterOuterAlt(localctx, 2);
            this.state = 512;
            this.unit();
            break;
        case DesignStylesParser.T__14:
        case DesignStylesParser.T__15:
        case DesignStylesParser.T__16:
        case DesignStylesParser.T__17:
            this.enterOuterAlt(localctx, 3);
            this.state = 513;
            this.image_unit();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function OperatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_operator;
    return this;
}

OperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OperatorContext.prototype.constructor = OperatorContext;

OperatorContext.prototype.CARET = function() {
    return this.getToken(DesignStylesParser.CARET, 0);
};

OperatorContext.prototype.PLUS = function() {
    return this.getToken(DesignStylesParser.PLUS, 0);
};

OperatorContext.prototype.MINUS = function() {
    return this.getToken(DesignStylesParser.MINUS, 0);
};

OperatorContext.prototype.MUL = function() {
    return this.getToken(DesignStylesParser.MUL, 0);
};

OperatorContext.prototype.DIV = function() {
    return this.getToken(DesignStylesParser.DIV, 0);
};

OperatorContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterOperator(this);
	}
};

OperatorContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitOperator(this);
	}
};




DesignStylesParser.OperatorContext = OperatorContext;

DesignStylesParser.prototype.operator = function() {

    var localctx = new OperatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, DesignStylesParser.RULE_operator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 516;
        _la = this._input.LA(1);
        if(!(((((_la - 48)) & ~0x1f) == 0 && ((1 << (_la - 48)) & ((1 << (DesignStylesParser.CARET - 48)) | (1 << (DesignStylesParser.PLUS - 48)) | (1 << (DesignStylesParser.MINUS - 48)) | (1 << (DesignStylesParser.MUL - 48)) | (1 << (DesignStylesParser.DIV - 48)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ImageContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_image;
    return this;
}

ImageContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImageContext.prototype.constructor = ImageContext;

ImageContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

ImageContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

ImageContext.prototype.image_unit = function() {
    return this.getTypedRuleContext(Image_unitContext,0);
};

ImageContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImage(this);
	}
};

ImageContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImage(this);
	}
};




DesignStylesParser.ImageContext = ImageContext;

DesignStylesParser.prototype.image = function() {

    var localctx = new ImageContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, DesignStylesParser.RULE_image);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 518;
        this.match(DesignStylesParser.Identifier);
        this.state = 519;
        this.match(DesignStylesParser.DOT);
        this.state = 520;
        this.image_unit();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Multi_part_identifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_multi_part_identifier;
    return this;
}

Multi_part_identifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Multi_part_identifierContext.prototype.constructor = Multi_part_identifierContext;

Multi_part_identifierContext.prototype.Identifier = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.Identifier);
    } else {
        return this.getToken(DesignStylesParser.Identifier, i);
    }
};


Multi_part_identifierContext.prototype.string_esp_characters = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(String_esp_charactersContext);
    } else {
        return this.getTypedRuleContext(String_esp_charactersContext,i);
    }
};

Multi_part_identifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterMulti_part_identifier(this);
	}
};

Multi_part_identifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitMulti_part_identifier(this);
	}
};




DesignStylesParser.Multi_part_identifierContext = Multi_part_identifierContext;

DesignStylesParser.prototype.multi_part_identifier = function() {

    var localctx = new Multi_part_identifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, DesignStylesParser.RULE_multi_part_identifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 522;
        this.match(DesignStylesParser.Identifier);
        this.state = 524; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 523;
            this.string_esp_characters();
            this.state = 526; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (DesignStylesParser.COLON - 40)) | (1 << (DesignStylesParser.MINUS - 40)) | (1 << (DesignStylesParser.DIV - 40)) | (1 << (DesignStylesParser.BANG - 40)))) !== 0));
        this.state = 528;
        this.match(DesignStylesParser.Identifier);
        this.state = 538;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,55,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 530; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 529;
                    this.string_esp_characters();
                    this.state = 532; 
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while(((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (DesignStylesParser.COLON - 40)) | (1 << (DesignStylesParser.MINUS - 40)) | (1 << (DesignStylesParser.DIV - 40)) | (1 << (DesignStylesParser.BANG - 40)))) !== 0));
                this.state = 534;
                this.match(DesignStylesParser.Identifier); 
            }
            this.state = 540;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,55,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function String_esp_charactersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_string_esp_characters;
    return this;
}

String_esp_charactersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
String_esp_charactersContext.prototype.constructor = String_esp_charactersContext;

String_esp_charactersContext.prototype.MINUS = function() {
    return this.getToken(DesignStylesParser.MINUS, 0);
};

String_esp_charactersContext.prototype.DIV = function() {
    return this.getToken(DesignStylesParser.DIV, 0);
};

String_esp_charactersContext.prototype.BANG = function() {
    return this.getToken(DesignStylesParser.BANG, 0);
};

String_esp_charactersContext.prototype.COLON = function() {
    return this.getToken(DesignStylesParser.COLON, 0);
};

String_esp_charactersContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterString_esp_characters(this);
	}
};

String_esp_charactersContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitString_esp_characters(this);
	}
};




DesignStylesParser.String_esp_charactersContext = String_esp_charactersContext;

DesignStylesParser.prototype.string_esp_characters = function() {

    var localctx = new String_esp_charactersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, DesignStylesParser.RULE_string_esp_characters);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 541;
        _la = this._input.LA(1);
        if(!(((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (DesignStylesParser.COLON - 40)) | (1 << (DesignStylesParser.MINUS - 40)) | (1 << (DesignStylesParser.DIV - 40)) | (1 << (DesignStylesParser.BANG - 40)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function SelectorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_selector;
    return this;
}

SelectorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectorContext.prototype.constructor = SelectorContext;

SelectorContext.prototype.ACTIVE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.ACTIVE_SELECTOR, 0);
};

SelectorContext.prototype.AFTER_SELECTOR = function() {
    return this.getToken(DesignStylesParser.AFTER_SELECTOR, 0);
};

SelectorContext.prototype.BEFORE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.BEFORE_SELECTOR, 0);
};

SelectorContext.prototype.CHECKED_SELECTOR = function() {
    return this.getToken(DesignStylesParser.CHECKED_SELECTOR, 0);
};

SelectorContext.prototype.DEFAULT_SELECTOR = function() {
    return this.getToken(DesignStylesParser.DEFAULT_SELECTOR, 0);
};

SelectorContext.prototype.DISABLED_SELECTOR = function() {
    return this.getToken(DesignStylesParser.DISABLED_SELECTOR, 0);
};

SelectorContext.prototype.EMPTY_SELECTOR = function() {
    return this.getToken(DesignStylesParser.EMPTY_SELECTOR, 0);
};

SelectorContext.prototype.ENABLED_SELECTOR = function() {
    return this.getToken(DesignStylesParser.ENABLED_SELECTOR, 0);
};

SelectorContext.prototype.FIRST_CHILD_SELECTOR = function() {
    return this.getToken(DesignStylesParser.FIRST_CHILD_SELECTOR, 0);
};

SelectorContext.prototype.FIRST_LETTER_SELECTOR = function() {
    return this.getToken(DesignStylesParser.FIRST_LETTER_SELECTOR, 0);
};

SelectorContext.prototype.FIRST_LINE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.FIRST_LINE_SELECTOR, 0);
};

SelectorContext.prototype.FIRST_OF_TYPE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.FIRST_OF_TYPE_SELECTOR, 0);
};

SelectorContext.prototype.FOCUS_SELECTOR = function() {
    return this.getToken(DesignStylesParser.FOCUS_SELECTOR, 0);
};

SelectorContext.prototype.FOCUS_WITHIN = function() {
    return this.getToken(DesignStylesParser.FOCUS_WITHIN, 0);
};

SelectorContext.prototype.IN_RANGE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.IN_RANGE_SELECTOR, 0);
};

SelectorContext.prototype.INDETERMINATE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.INDETERMINATE_SELECTOR, 0);
};

SelectorContext.prototype.INVALID_SELECTOR = function() {
    return this.getToken(DesignStylesParser.INVALID_SELECTOR, 0);
};

SelectorContext.prototype.LAST_CHILD_SELECTOR = function() {
    return this.getToken(DesignStylesParser.LAST_CHILD_SELECTOR, 0);
};

SelectorContext.prototype.LAST_OF_TYPE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.LAST_OF_TYPE_SELECTOR, 0);
};

SelectorContext.prototype.LINK_SELECTOR = function() {
    return this.getToken(DesignStylesParser.LINK_SELECTOR, 0);
};

SelectorContext.prototype.ONLY_OF_TYPE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.ONLY_OF_TYPE_SELECTOR, 0);
};

SelectorContext.prototype.ONLY_CHILD_SELECTOR = function() {
    return this.getToken(DesignStylesParser.ONLY_CHILD_SELECTOR, 0);
};

SelectorContext.prototype.OPTIONAL_SELECTOR = function() {
    return this.getToken(DesignStylesParser.OPTIONAL_SELECTOR, 0);
};

SelectorContext.prototype.OUT_OF_RANGE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.OUT_OF_RANGE_SELECTOR, 0);
};

SelectorContext.prototype.PLACEHOLDER_SELECTOR = function() {
    return this.getToken(DesignStylesParser.PLACEHOLDER_SELECTOR, 0);
};

SelectorContext.prototype.READ_ONLY_SELECTOR = function() {
    return this.getToken(DesignStylesParser.READ_ONLY_SELECTOR, 0);
};

SelectorContext.prototype.READ_WRITE_SELECTOR = function() {
    return this.getToken(DesignStylesParser.READ_WRITE_SELECTOR, 0);
};

SelectorContext.prototype.REQUIRED_SELECTOR = function() {
    return this.getToken(DesignStylesParser.REQUIRED_SELECTOR, 0);
};

SelectorContext.prototype.SELECTION_SELECTOR = function() {
    return this.getToken(DesignStylesParser.SELECTION_SELECTOR, 0);
};

SelectorContext.prototype.TARGET_SELECTOR = function() {
    return this.getToken(DesignStylesParser.TARGET_SELECTOR, 0);
};

SelectorContext.prototype.VALID_SELECTOR = function() {
    return this.getToken(DesignStylesParser.VALID_SELECTOR, 0);
};

SelectorContext.prototype.VISITED_SELECTOR = function() {
    return this.getToken(DesignStylesParser.VISITED_SELECTOR, 0);
};

SelectorContext.prototype.HOVER_SELECTOR = function() {
    return this.getToken(DesignStylesParser.HOVER_SELECTOR, 0);
};

SelectorContext.prototype.COLON = function() {
    return this.getToken(DesignStylesParser.COLON, 0);
};

SelectorContext.prototype.func = function() {
    return this.getTypedRuleContext(FuncContext,0);
};

SelectorContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterSelector(this);
	}
};

SelectorContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitSelector(this);
	}
};




DesignStylesParser.SelectorContext = SelectorContext;

DesignStylesParser.prototype.selector = function() {

    var localctx = new SelectorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, DesignStylesParser.RULE_selector);
    try {
        this.state = 578;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.ACTIVE_SELECTOR:
            this.enterOuterAlt(localctx, 1);
            this.state = 543;
            this.match(DesignStylesParser.ACTIVE_SELECTOR);
            break;
        case DesignStylesParser.AFTER_SELECTOR:
            this.enterOuterAlt(localctx, 2);
            this.state = 544;
            this.match(DesignStylesParser.AFTER_SELECTOR);
            break;
        case DesignStylesParser.BEFORE_SELECTOR:
            this.enterOuterAlt(localctx, 3);
            this.state = 545;
            this.match(DesignStylesParser.BEFORE_SELECTOR);
            break;
        case DesignStylesParser.CHECKED_SELECTOR:
            this.enterOuterAlt(localctx, 4);
            this.state = 546;
            this.match(DesignStylesParser.CHECKED_SELECTOR);
            break;
        case DesignStylesParser.DEFAULT_SELECTOR:
            this.enterOuterAlt(localctx, 5);
            this.state = 547;
            this.match(DesignStylesParser.DEFAULT_SELECTOR);
            break;
        case DesignStylesParser.DISABLED_SELECTOR:
            this.enterOuterAlt(localctx, 6);
            this.state = 548;
            this.match(DesignStylesParser.DISABLED_SELECTOR);
            break;
        case DesignStylesParser.EMPTY_SELECTOR:
            this.enterOuterAlt(localctx, 7);
            this.state = 549;
            this.match(DesignStylesParser.EMPTY_SELECTOR);
            break;
        case DesignStylesParser.ENABLED_SELECTOR:
            this.enterOuterAlt(localctx, 8);
            this.state = 550;
            this.match(DesignStylesParser.ENABLED_SELECTOR);
            break;
        case DesignStylesParser.FIRST_CHILD_SELECTOR:
            this.enterOuterAlt(localctx, 9);
            this.state = 551;
            this.match(DesignStylesParser.FIRST_CHILD_SELECTOR);
            break;
        case DesignStylesParser.FIRST_LETTER_SELECTOR:
            this.enterOuterAlt(localctx, 10);
            this.state = 552;
            this.match(DesignStylesParser.FIRST_LETTER_SELECTOR);
            break;
        case DesignStylesParser.FIRST_LINE_SELECTOR:
            this.enterOuterAlt(localctx, 11);
            this.state = 553;
            this.match(DesignStylesParser.FIRST_LINE_SELECTOR);
            break;
        case DesignStylesParser.FIRST_OF_TYPE_SELECTOR:
            this.enterOuterAlt(localctx, 12);
            this.state = 554;
            this.match(DesignStylesParser.FIRST_OF_TYPE_SELECTOR);
            break;
        case DesignStylesParser.FOCUS_SELECTOR:
            this.enterOuterAlt(localctx, 13);
            this.state = 555;
            this.match(DesignStylesParser.FOCUS_SELECTOR);
            break;
        case DesignStylesParser.FOCUS_WITHIN:
            this.enterOuterAlt(localctx, 14);
            this.state = 556;
            this.match(DesignStylesParser.FOCUS_WITHIN);
            break;
        case DesignStylesParser.IN_RANGE_SELECTOR:
            this.enterOuterAlt(localctx, 15);
            this.state = 557;
            this.match(DesignStylesParser.IN_RANGE_SELECTOR);
            break;
        case DesignStylesParser.INDETERMINATE_SELECTOR:
            this.enterOuterAlt(localctx, 16);
            this.state = 558;
            this.match(DesignStylesParser.INDETERMINATE_SELECTOR);
            break;
        case DesignStylesParser.INVALID_SELECTOR:
            this.enterOuterAlt(localctx, 17);
            this.state = 559;
            this.match(DesignStylesParser.INVALID_SELECTOR);
            break;
        case DesignStylesParser.LAST_CHILD_SELECTOR:
            this.enterOuterAlt(localctx, 18);
            this.state = 560;
            this.match(DesignStylesParser.LAST_CHILD_SELECTOR);
            break;
        case DesignStylesParser.LAST_OF_TYPE_SELECTOR:
            this.enterOuterAlt(localctx, 19);
            this.state = 561;
            this.match(DesignStylesParser.LAST_OF_TYPE_SELECTOR);
            break;
        case DesignStylesParser.LINK_SELECTOR:
            this.enterOuterAlt(localctx, 20);
            this.state = 562;
            this.match(DesignStylesParser.LINK_SELECTOR);
            break;
        case DesignStylesParser.ONLY_OF_TYPE_SELECTOR:
            this.enterOuterAlt(localctx, 21);
            this.state = 563;
            this.match(DesignStylesParser.ONLY_OF_TYPE_SELECTOR);
            break;
        case DesignStylesParser.ONLY_CHILD_SELECTOR:
            this.enterOuterAlt(localctx, 22);
            this.state = 564;
            this.match(DesignStylesParser.ONLY_CHILD_SELECTOR);
            break;
        case DesignStylesParser.OPTIONAL_SELECTOR:
            this.enterOuterAlt(localctx, 23);
            this.state = 565;
            this.match(DesignStylesParser.OPTIONAL_SELECTOR);
            break;
        case DesignStylesParser.OUT_OF_RANGE_SELECTOR:
            this.enterOuterAlt(localctx, 24);
            this.state = 566;
            this.match(DesignStylesParser.OUT_OF_RANGE_SELECTOR);
            break;
        case DesignStylesParser.PLACEHOLDER_SELECTOR:
            this.enterOuterAlt(localctx, 25);
            this.state = 567;
            this.match(DesignStylesParser.PLACEHOLDER_SELECTOR);
            break;
        case DesignStylesParser.READ_ONLY_SELECTOR:
            this.enterOuterAlt(localctx, 26);
            this.state = 568;
            this.match(DesignStylesParser.READ_ONLY_SELECTOR);
            break;
        case DesignStylesParser.READ_WRITE_SELECTOR:
            this.enterOuterAlt(localctx, 27);
            this.state = 569;
            this.match(DesignStylesParser.READ_WRITE_SELECTOR);
            break;
        case DesignStylesParser.REQUIRED_SELECTOR:
            this.enterOuterAlt(localctx, 28);
            this.state = 570;
            this.match(DesignStylesParser.REQUIRED_SELECTOR);
            break;
        case DesignStylesParser.SELECTION_SELECTOR:
            this.enterOuterAlt(localctx, 29);
            this.state = 571;
            this.match(DesignStylesParser.SELECTION_SELECTOR);
            break;
        case DesignStylesParser.TARGET_SELECTOR:
            this.enterOuterAlt(localctx, 30);
            this.state = 572;
            this.match(DesignStylesParser.TARGET_SELECTOR);
            break;
        case DesignStylesParser.VALID_SELECTOR:
            this.enterOuterAlt(localctx, 31);
            this.state = 573;
            this.match(DesignStylesParser.VALID_SELECTOR);
            break;
        case DesignStylesParser.VISITED_SELECTOR:
            this.enterOuterAlt(localctx, 32);
            this.state = 574;
            this.match(DesignStylesParser.VISITED_SELECTOR);
            break;
        case DesignStylesParser.HOVER_SELECTOR:
            this.enterOuterAlt(localctx, 33);
            this.state = 575;
            this.match(DesignStylesParser.HOVER_SELECTOR);
            break;
        case DesignStylesParser.COLON:
            this.enterOuterAlt(localctx, 34);
            this.state = 576;
            this.match(DesignStylesParser.COLON);
            this.state = 577;
            this.func();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Node_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_node_name;
    return this;
}

Node_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Node_nameContext.prototype.constructor = Node_nameContext;

Node_nameContext.prototype.DOT = function() {
    return this.getToken(DesignStylesParser.DOT, 0);
};

Node_nameContext.prototype.class_name = function() {
    return this.getTypedRuleContext(Class_nameContext,0);
};

Node_nameContext.prototype.element_name = function() {
    return this.getTypedRuleContext(Element_nameContext,0);
};

Node_nameContext.prototype.element_id = function() {
    return this.getTypedRuleContext(Element_idContext,0);
};

Node_nameContext.prototype.MUL = function() {
    return this.getToken(DesignStylesParser.MUL, 0);
};

Node_nameContext.prototype.attribute_filter = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_filterContext);
    } else {
        return this.getTypedRuleContext(Attribute_filterContext,i);
    }
};

Node_nameContext.prototype.part_selector = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Part_selectorContext);
    } else {
        return this.getTypedRuleContext(Part_selectorContext,i);
    }
};

Node_nameContext.prototype.selector = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SelectorContext);
    } else {
        return this.getTypedRuleContext(SelectorContext,i);
    }
};

Node_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterNode_name(this);
	}
};

Node_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitNode_name(this);
	}
};




DesignStylesParser.Node_nameContext = Node_nameContext;

DesignStylesParser.prototype.node_name = function() {

    var localctx = new Node_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, DesignStylesParser.RULE_node_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 589;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,58,this._ctx);
        switch(la_) {
        case 1:
            this.state = 581;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===DesignStylesParser.MUL) {
                this.state = 580;
                this.match(DesignStylesParser.MUL);
            }

            this.state = 583;
            this.match(DesignStylesParser.DOT);
            this.state = 584;
            this.class_name();
            break;

        case 2:
            this.state = 585;
            this.element_name();
            break;

        case 3:
            this.state = 586;
            this.element_id();
            break;

        case 4:
            this.state = 587;
            this.match(DesignStylesParser.MUL);
            break;

        case 5:
            this.state = 588;
            this.attribute_filter();
            break;

        }
        this.state = 594;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,59,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 591;
                this.attribute_filter(); 
            }
            this.state = 596;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,59,this._ctx);
        }

        this.state = 600;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.PART_SELECTOR) {
            this.state = 597;
            this.part_selector();
            this.state = 602;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 606;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===DesignStylesParser.COLON || ((((_la - 75)) & ~0x1f) == 0 && ((1 << (_la - 75)) & ((1 << (DesignStylesParser.ACTIVE_SELECTOR - 75)) | (1 << (DesignStylesParser.AFTER_SELECTOR - 75)) | (1 << (DesignStylesParser.BEFORE_SELECTOR - 75)) | (1 << (DesignStylesParser.CHECKED_SELECTOR - 75)) | (1 << (DesignStylesParser.DEFAULT_SELECTOR - 75)) | (1 << (DesignStylesParser.DISABLED_SELECTOR - 75)) | (1 << (DesignStylesParser.EMPTY_SELECTOR - 75)) | (1 << (DesignStylesParser.ENABLED_SELECTOR - 75)) | (1 << (DesignStylesParser.FIRST_CHILD_SELECTOR - 75)) | (1 << (DesignStylesParser.FIRST_LETTER_SELECTOR - 75)) | (1 << (DesignStylesParser.FIRST_LINE_SELECTOR - 75)) | (1 << (DesignStylesParser.FIRST_OF_TYPE_SELECTOR - 75)) | (1 << (DesignStylesParser.FOCUS_SELECTOR - 75)) | (1 << (DesignStylesParser.FOCUS_WITHIN - 75)) | (1 << (DesignStylesParser.HOVER_SELECTOR - 75)) | (1 << (DesignStylesParser.IN_RANGE_SELECTOR - 75)) | (1 << (DesignStylesParser.INDETERMINATE_SELECTOR - 75)) | (1 << (DesignStylesParser.INVALID_SELECTOR - 75)) | (1 << (DesignStylesParser.LAST_CHILD_SELECTOR - 75)) | (1 << (DesignStylesParser.LAST_OF_TYPE_SELECTOR - 75)) | (1 << (DesignStylesParser.LINK_SELECTOR - 75)) | (1 << (DesignStylesParser.ONLY_OF_TYPE_SELECTOR - 75)) | (1 << (DesignStylesParser.ONLY_CHILD_SELECTOR - 75)) | (1 << (DesignStylesParser.OPTIONAL_SELECTOR - 75)) | (1 << (DesignStylesParser.OUT_OF_RANGE_SELECTOR - 75)) | (1 << (DesignStylesParser.PLACEHOLDER_SELECTOR - 75)) | (1 << (DesignStylesParser.READ_ONLY_SELECTOR - 75)) | (1 << (DesignStylesParser.READ_WRITE_SELECTOR - 75)) | (1 << (DesignStylesParser.REQUIRED_SELECTOR - 75)) | (1 << (DesignStylesParser.SELECTION_SELECTOR - 75)) | (1 << (DesignStylesParser.TARGET_SELECTOR - 75)) | (1 << (DesignStylesParser.VALID_SELECTOR - 75)))) !== 0) || _la===DesignStylesParser.VISITED_SELECTOR) {
            this.state = 603;
            this.selector();
            this.state = 608;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Attribute_filterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_attribute_filter;
    return this;
}

Attribute_filterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_filterContext.prototype.constructor = Attribute_filterContext;

Attribute_filterContext.prototype.OPEN_BRACKET = function() {
    return this.getToken(DesignStylesParser.OPEN_BRACKET, 0);
};

Attribute_filterContext.prototype.CLOSE_BRACKET = function() {
    return this.getToken(DesignStylesParser.CLOSE_BRACKET, 0);
};

Attribute_filterContext.prototype.Wildcard_Identifier = function() {
    return this.getToken(DesignStylesParser.Wildcard_Identifier, 0);
};

Attribute_filterContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Attribute_filterContext.prototype.EQ = function() {
    return this.getToken(DesignStylesParser.EQ, 0);
};

Attribute_filterContext.prototype.value = function() {
    return this.getTypedRuleContext(ValueContext,0);
};

Attribute_filterContext.prototype.parity = function() {
    return this.getTypedRuleContext(ParityContext,0);
};

Attribute_filterContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterAttribute_filter(this);
	}
};

Attribute_filterContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitAttribute_filter(this);
	}
};




DesignStylesParser.Attribute_filterContext = Attribute_filterContext;

DesignStylesParser.prototype.attribute_filter = function() {

    var localctx = new Attribute_filterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, DesignStylesParser.RULE_attribute_filter);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 609;
        this.match(DesignStylesParser.OPEN_BRACKET);
        this.state = 610;
        _la = this._input.LA(1);
        if(!(_la===DesignStylesParser.Identifier || _la===DesignStylesParser.Wildcard_Identifier)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
        this.state = 616;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===DesignStylesParser.EQ) {
            this.state = 611;
            this.match(DesignStylesParser.EQ);
            this.state = 612;
            this.value();
            this.state = 614;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===DesignStylesParser.T__10 || _la===DesignStylesParser.T__18) {
                this.state = 613;
                this.parity();
            }

        }

        this.state = 618;
        this.match(DesignStylesParser.CLOSE_BRACKET);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Part_selectorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_part_selector;
    return this;
}

Part_selectorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Part_selectorContext.prototype.constructor = Part_selectorContext;

Part_selectorContext.prototype.PART_SELECTOR = function() {
    return this.getToken(DesignStylesParser.PART_SELECTOR, 0);
};

Part_selectorContext.prototype.OPEN_PAREN = function() {
    return this.getToken(DesignStylesParser.OPEN_PAREN, 0);
};

Part_selectorContext.prototype.CLOSE_PAREN = function() {
    return this.getToken(DesignStylesParser.CLOSE_PAREN, 0);
};

Part_selectorContext.prototype.element_name = function() {
    return this.getTypedRuleContext(Element_nameContext,0);
};

Part_selectorContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterPart_selector(this);
	}
};

Part_selectorContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitPart_selector(this);
	}
};




DesignStylesParser.Part_selectorContext = Part_selectorContext;

DesignStylesParser.prototype.part_selector = function() {

    var localctx = new Part_selectorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, DesignStylesParser.RULE_part_selector);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 620;
        this.match(DesignStylesParser.PART_SELECTOR);
        this.state = 621;
        this.match(DesignStylesParser.OPEN_PAREN);

        this.state = 622;
        this.element_name();
        this.state = 623;
        this.match(DesignStylesParser.CLOSE_PAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Class_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_class_name;
    return this;
}

Class_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Class_nameContext.prototype.constructor = Class_nameContext;

Class_nameContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Class_nameContext.prototype.multi_part_identifier = function() {
    return this.getTypedRuleContext(Multi_part_identifierContext,0);
};

Class_nameContext.prototype.MUL = function() {
    return this.getToken(DesignStylesParser.MUL, 0);
};

Class_nameContext.prototype.unit = function() {
    return this.getTypedRuleContext(UnitContext,0);
};

Class_nameContext.prototype.image_unit = function() {
    return this.getTypedRuleContext(Image_unitContext,0);
};

Class_nameContext.prototype.parity = function() {
    return this.getTypedRuleContext(ParityContext,0);
};

Class_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterClass_name(this);
	}
};

Class_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitClass_name(this);
	}
};




DesignStylesParser.Class_nameContext = Class_nameContext;

DesignStylesParser.prototype.class_name = function() {

    var localctx = new Class_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, DesignStylesParser.RULE_class_name);
    try {
        this.state = 631;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,64,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 625;
            this.match(DesignStylesParser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 626;
            this.multi_part_identifier();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 627;
            this.match(DesignStylesParser.MUL);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 628;
            this.unit();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 629;
            this.image_unit();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 630;
            this.parity();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Element_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_element_name;
    return this;
}

Element_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Element_nameContext.prototype.constructor = Element_nameContext;

Element_nameContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Element_nameContext.prototype.multi_part_identifier = function() {
    return this.getTypedRuleContext(Multi_part_identifierContext,0);
};

Element_nameContext.prototype.MUL = function() {
    return this.getToken(DesignStylesParser.MUL, 0);
};

Element_nameContext.prototype.unit = function() {
    return this.getTypedRuleContext(UnitContext,0);
};

Element_nameContext.prototype.image_unit = function() {
    return this.getTypedRuleContext(Image_unitContext,0);
};

Element_nameContext.prototype.parity = function() {
    return this.getTypedRuleContext(ParityContext,0);
};

Element_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterElement_name(this);
	}
};

Element_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitElement_name(this);
	}
};




DesignStylesParser.Element_nameContext = Element_nameContext;

DesignStylesParser.prototype.element_name = function() {

    var localctx = new Element_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, DesignStylesParser.RULE_element_name);
    try {
        this.state = 639;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,65,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 633;
            this.match(DesignStylesParser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 634;
            this.multi_part_identifier();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 635;
            this.match(DesignStylesParser.MUL);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 636;
            this.unit();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 637;
            this.image_unit();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 638;
            this.parity();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Element_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_element_id;
    return this;
}

Element_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Element_idContext.prototype.constructor = Element_idContext;

Element_idContext.prototype.Identifier = function() {
    return this.getToken(DesignStylesParser.Identifier, 0);
};

Element_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterElement_id(this);
	}
};

Element_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitElement_id(this);
	}
};




DesignStylesParser.Element_idContext = Element_idContext;

DesignStylesParser.prototype.element_id = function() {

    var localctx = new Element_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, DesignStylesParser.RULE_element_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 641;
        this.match(DesignStylesParser.T__4);
        this.state = 642;
        this.match(DesignStylesParser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Css_selectorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_css_selector;
    return this;
}

Css_selectorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Css_selectorContext.prototype.constructor = Css_selectorContext;

Css_selectorContext.prototype.ROOT_SELECTOR = function() {
    return this.getToken(DesignStylesParser.ROOT_SELECTOR, 0);
};

Css_selectorContext.prototype.node_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Node_nameContext);
    } else {
        return this.getTypedRuleContext(Node_nameContext,i);
    }
};

Css_selectorContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.COMMA);
    } else {
        return this.getToken(DesignStylesParser.COMMA, i);
    }
};


Css_selectorContext.prototype.LT = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.LT);
    } else {
        return this.getToken(DesignStylesParser.LT, i);
    }
};


Css_selectorContext.prototype.GT = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.GT);
    } else {
        return this.getToken(DesignStylesParser.GT, i);
    }
};


Css_selectorContext.prototype.PLUS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.PLUS);
    } else {
        return this.getToken(DesignStylesParser.PLUS, i);
    }
};


Css_selectorContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.WS);
    } else {
        return this.getToken(DesignStylesParser.WS, i);
    }
};


Css_selectorContext.prototype.TILDE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(DesignStylesParser.TILDE);
    } else {
        return this.getToken(DesignStylesParser.TILDE, i);
    }
};


Css_selectorContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterCss_selector(this);
	}
};

Css_selectorContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitCss_selector(this);
	}
};




DesignStylesParser.Css_selectorContext = Css_selectorContext;

DesignStylesParser.prototype.css_selector = function() {

    var localctx = new Css_selectorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, DesignStylesParser.RULE_css_selector);
    var _la = 0; // Token type
    try {
        this.state = 655;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case DesignStylesParser.ROOT_SELECTOR:
            this.enterOuterAlt(localctx, 1);
            this.state = 644;
            this.match(DesignStylesParser.ROOT_SELECTOR);
            break;
        case DesignStylesParser.T__4:
        case DesignStylesParser.T__5:
        case DesignStylesParser.T__6:
        case DesignStylesParser.T__7:
        case DesignStylesParser.T__8:
        case DesignStylesParser.T__9:
        case DesignStylesParser.T__10:
        case DesignStylesParser.T__11:
        case DesignStylesParser.T__12:
        case DesignStylesParser.T__13:
        case DesignStylesParser.T__14:
        case DesignStylesParser.T__15:
        case DesignStylesParser.T__16:
        case DesignStylesParser.T__17:
        case DesignStylesParser.T__18:
        case DesignStylesParser.OPEN_BRACKET:
        case DesignStylesParser.DOT:
        case DesignStylesParser.MUL:
        case DesignStylesParser.Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 645;
            this.node_name();
            this.state = 652;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__4) | (1 << DesignStylesParser.T__5) | (1 << DesignStylesParser.T__6) | (1 << DesignStylesParser.T__7) | (1 << DesignStylesParser.T__8) | (1 << DesignStylesParser.T__9) | (1 << DesignStylesParser.T__10) | (1 << DesignStylesParser.T__11) | (1 << DesignStylesParser.T__12) | (1 << DesignStylesParser.T__13) | (1 << DesignStylesParser.T__14) | (1 << DesignStylesParser.T__15) | (1 << DesignStylesParser.T__16) | (1 << DesignStylesParser.T__17) | (1 << DesignStylesParser.T__18))) !== 0) || ((((_la - 35)) & ~0x1f) == 0 && ((1 << (_la - 35)) & ((1 << (DesignStylesParser.OPEN_BRACKET - 35)) | (1 << (DesignStylesParser.COMMA - 35)) | (1 << (DesignStylesParser.DOT - 35)) | (1 << (DesignStylesParser.LT - 35)) | (1 << (DesignStylesParser.GT - 35)) | (1 << (DesignStylesParser.PLUS - 35)) | (1 << (DesignStylesParser.MUL - 35)) | (1 << (DesignStylesParser.TILDE - 35)) | (1 << (DesignStylesParser.Identifier - 35)))) !== 0) || _la===DesignStylesParser.WS) {
                this.state = 647;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(((((_la - 39)) & ~0x1f) == 0 && ((1 << (_la - 39)) & ((1 << (DesignStylesParser.COMMA - 39)) | (1 << (DesignStylesParser.LT - 39)) | (1 << (DesignStylesParser.GT - 39)) | (1 << (DesignStylesParser.PLUS - 39)) | (1 << (DesignStylesParser.TILDE - 39)))) !== 0) || _la===DesignStylesParser.WS) {
                    this.state = 646;
                    _la = this._input.LA(1);
                    if(!(((((_la - 39)) & ~0x1f) == 0 && ((1 << (_la - 39)) & ((1 << (DesignStylesParser.COMMA - 39)) | (1 << (DesignStylesParser.LT - 39)) | (1 << (DesignStylesParser.GT - 39)) | (1 << (DesignStylesParser.PLUS - 39)) | (1 << (DesignStylesParser.TILDE - 39)))) !== 0) || _la===DesignStylesParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                }

                this.state = 649;
                this.node_name();
                this.state = 654;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function UnitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_unit;
    return this;
}

UnitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnitContext.prototype.constructor = UnitContext;


UnitContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterUnit(this);
	}
};

UnitContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitUnit(this);
	}
};




DesignStylesParser.UnitContext = UnitContext;

DesignStylesParser.prototype.unit = function() {

    var localctx = new UnitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, DesignStylesParser.RULE_unit);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 657;
        _la = this._input.LA(1);
        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__5) | (1 << DesignStylesParser.T__6) | (1 << DesignStylesParser.T__7) | (1 << DesignStylesParser.T__8) | (1 << DesignStylesParser.T__9) | (1 << DesignStylesParser.T__10) | (1 << DesignStylesParser.T__11) | (1 << DesignStylesParser.T__12) | (1 << DesignStylesParser.T__13))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Image_unitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_image_unit;
    return this;
}

Image_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Image_unitContext.prototype.constructor = Image_unitContext;


Image_unitContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterImage_unit(this);
	}
};

Image_unitContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitImage_unit(this);
	}
};




DesignStylesParser.Image_unitContext = Image_unitContext;

DesignStylesParser.prototype.image_unit = function() {

    var localctx = new Image_unitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, DesignStylesParser.RULE_image_unit);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 659;
        _la = this._input.LA(1);
        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << DesignStylesParser.T__14) | (1 << DesignStylesParser.T__15) | (1 << DesignStylesParser.T__16) | (1 << DesignStylesParser.T__17))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ParityContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = DesignStylesParser.RULE_parity;
    return this;
}

ParityContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParityContext.prototype.constructor = ParityContext;


ParityContext.prototype.enterRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.enterParity(this);
	}
};

ParityContext.prototype.exitRule = function(listener) {
    if(listener instanceof DesignStylesListener ) {
        listener.exitParity(this);
	}
};




DesignStylesParser.ParityContext = ParityContext;

DesignStylesParser.prototype.parity = function() {

    var localctx = new ParityContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, DesignStylesParser.RULE_parity);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 661;
        _la = this._input.LA(1);
        if(!(_la===DesignStylesParser.T__10 || _la===DesignStylesParser.T__18)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


exports.DesignStylesParser = DesignStylesParser;
